/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 7.0, "minX": 0.0, "maxY": 15719.0, "series": [{"data": [[0.0, 7.0], [0.1, 18.0], [0.2, 24.0], [0.3, 27.0], [0.4, 30.0], [0.5, 33.0], [0.6, 36.0], [0.7, 38.0], [0.8, 40.0], [0.9, 42.0], [1.0, 44.0], [1.1, 46.0], [1.2, 48.0], [1.3, 50.0], [1.4, 52.0], [1.5, 53.0], [1.6, 55.0], [1.7, 56.0], [1.8, 58.0], [1.9, 60.0], [2.0, 62.0], [2.1, 63.0], [2.2, 65.0], [2.3, 66.0], [2.4, 68.0], [2.5, 69.0], [2.6, 71.0], [2.7, 73.0], [2.8, 74.0], [2.9, 76.0], [3.0, 77.0], [3.1, 78.0], [3.2, 80.0], [3.3, 81.0], [3.4, 82.0], [3.5, 84.0], [3.6, 85.0], [3.7, 87.0], [3.8, 88.0], [3.9, 89.0], [4.0, 91.0], [4.1, 92.0], [4.2, 94.0], [4.3, 95.0], [4.4, 97.0], [4.5, 98.0], [4.6, 100.0], [4.7, 101.0], [4.8, 103.0], [4.9, 105.0], [5.0, 106.0], [5.1, 108.0], [5.2, 109.0], [5.3, 111.0], [5.4, 112.0], [5.5, 114.0], [5.6, 116.0], [5.7, 118.0], [5.8, 119.0], [5.9, 121.0], [6.0, 122.0], [6.1, 124.0], [6.2, 126.0], [6.3, 127.0], [6.4, 129.0], [6.5, 131.0], [6.6, 132.0], [6.7, 134.0], [6.8, 135.0], [6.9, 137.0], [7.0, 138.0], [7.1, 140.0], [7.2, 141.0], [7.3, 143.0], [7.4, 144.0], [7.5, 146.0], [7.6, 147.0], [7.7, 149.0], [7.8, 150.0], [7.9, 151.0], [8.0, 153.0], [8.1, 154.0], [8.2, 156.0], [8.3, 157.0], [8.4, 159.0], [8.5, 160.0], [8.6, 161.0], [8.7, 163.0], [8.8, 164.0], [8.9, 166.0], [9.0, 167.0], [9.1, 168.0], [9.2, 170.0], [9.3, 171.0], [9.4, 172.0], [9.5, 173.0], [9.6, 175.0], [9.7, 176.0], [9.8, 178.0], [9.9, 179.0], [10.0, 180.0], [10.1, 182.0], [10.2, 183.0], [10.3, 184.0], [10.4, 185.0], [10.5, 187.0], [10.6, 188.0], [10.7, 189.0], [10.8, 191.0], [10.9, 192.0], [11.0, 194.0], [11.1, 195.0], [11.2, 196.0], [11.3, 198.0], [11.4, 199.0], [11.5, 201.0], [11.6, 202.0], [11.7, 204.0], [11.8, 205.0], [11.9, 206.0], [12.0, 208.0], [12.1, 209.0], [12.2, 211.0], [12.3, 212.0], [12.4, 213.0], [12.5, 215.0], [12.6, 216.0], [12.7, 218.0], [12.8, 220.0], [12.9, 221.0], [13.0, 223.0], [13.1, 224.0], [13.2, 225.0], [13.3, 227.0], [13.4, 229.0], [13.5, 230.0], [13.6, 232.0], [13.7, 233.0], [13.8, 235.0], [13.9, 237.0], [14.0, 238.0], [14.1, 240.0], [14.2, 242.0], [14.3, 244.0], [14.4, 246.0], [14.5, 247.0], [14.6, 249.0], [14.7, 251.0], [14.8, 253.0], [14.9, 255.0], [15.0, 257.0], [15.1, 259.0], [15.2, 261.0], [15.3, 262.0], [15.4, 264.0], [15.5, 267.0], [15.6, 269.0], [15.7, 272.0], [15.8, 274.0], [15.9, 276.0], [16.0, 278.0], [16.1, 280.0], [16.2, 283.0], [16.3, 286.0], [16.4, 288.0], [16.5, 291.0], [16.6, 294.0], [16.7, 297.0], [16.8, 300.0], [16.9, 303.0], [17.0, 306.0], [17.1, 309.0], [17.2, 312.0], [17.3, 315.0], [17.4, 318.0], [17.5, 321.0], [17.6, 325.0], [17.7, 328.0], [17.8, 331.0], [17.9, 335.0], [18.0, 338.0], [18.1, 342.0], [18.2, 345.0], [18.3, 349.0], [18.4, 352.0], [18.5, 356.0], [18.6, 360.0], [18.7, 363.0], [18.8, 367.0], [18.9, 372.0], [19.0, 376.0], [19.1, 379.0], [19.2, 383.0], [19.3, 386.0], [19.4, 390.0], [19.5, 394.0], [19.6, 398.0], [19.7, 401.0], [19.8, 405.0], [19.9, 409.0], [20.0, 413.0], [20.1, 417.0], [20.2, 421.0], [20.3, 425.0], [20.4, 429.0], [20.5, 433.0], [20.6, 436.0], [20.7, 440.0], [20.8, 444.0], [20.9, 448.0], [21.0, 451.0], [21.1, 456.0], [21.2, 459.0], [21.3, 462.0], [21.4, 467.0], [21.5, 471.0], [21.6, 474.0], [21.7, 478.0], [21.8, 481.0], [21.9, 485.0], [22.0, 489.0], [22.1, 493.0], [22.2, 496.0], [22.3, 500.0], [22.4, 504.0], [22.5, 507.0], [22.6, 511.0], [22.7, 514.0], [22.8, 518.0], [22.9, 522.0], [23.0, 526.0], [23.1, 529.0], [23.2, 533.0], [23.3, 536.0], [23.4, 540.0], [23.5, 544.0], [23.6, 547.0], [23.7, 551.0], [23.8, 554.0], [23.9, 558.0], [24.0, 561.0], [24.1, 564.0], [24.2, 567.0], [24.3, 571.0], [24.4, 574.0], [24.5, 578.0], [24.6, 581.0], [24.7, 585.0], [24.8, 588.0], [24.9, 592.0], [25.0, 595.0], [25.1, 598.0], [25.2, 601.0], [25.3, 604.0], [25.4, 608.0], [25.5, 611.0], [25.6, 614.0], [25.7, 618.0], [25.8, 620.0], [25.9, 624.0], [26.0, 627.0], [26.1, 630.0], [26.2, 633.0], [26.3, 636.0], [26.4, 639.0], [26.5, 642.0], [26.6, 645.0], [26.7, 648.0], [26.8, 651.0], [26.9, 655.0], [27.0, 658.0], [27.1, 661.0], [27.2, 665.0], [27.3, 668.0], [27.4, 671.0], [27.5, 675.0], [27.6, 678.0], [27.7, 682.0], [27.8, 685.0], [27.9, 688.0], [28.0, 691.0], [28.1, 694.0], [28.2, 698.0], [28.3, 701.0], [28.4, 704.0], [28.5, 708.0], [28.6, 712.0], [28.7, 715.0], [28.8, 718.0], [28.9, 722.0], [29.0, 725.0], [29.1, 728.0], [29.2, 732.0], [29.3, 735.0], [29.4, 739.0], [29.5, 743.0], [29.6, 747.0], [29.7, 750.0], [29.8, 754.0], [29.9, 758.0], [30.0, 761.0], [30.1, 765.0], [30.2, 769.0], [30.3, 773.0], [30.4, 776.0], [30.5, 780.0], [30.6, 785.0], [30.7, 788.0], [30.8, 793.0], [30.9, 797.0], [31.0, 801.0], [31.1, 805.0], [31.2, 810.0], [31.3, 815.0], [31.4, 819.0], [31.5, 824.0], [31.6, 828.0], [31.7, 833.0], [31.8, 838.0], [31.9, 843.0], [32.0, 848.0], [32.1, 853.0], [32.2, 858.0], [32.3, 864.0], [32.4, 869.0], [32.5, 875.0], [32.6, 880.0], [32.7, 886.0], [32.8, 892.0], [32.9, 897.0], [33.0, 902.0], [33.1, 907.0], [33.2, 912.0], [33.3, 918.0], [33.4, 924.0], [33.5, 930.0], [33.6, 935.0], [33.7, 940.0], [33.8, 945.0], [33.9, 951.0], [34.0, 956.0], [34.1, 961.0], [34.2, 967.0], [34.3, 972.0], [34.4, 977.0], [34.5, 982.0], [34.6, 988.0], [34.7, 992.0], [34.8, 999.0], [34.9, 1004.0], [35.0, 1010.0], [35.1, 1015.0], [35.2, 1020.0], [35.3, 1026.0], [35.4, 1032.0], [35.5, 1038.0], [35.6, 1044.0], [35.7, 1050.0], [35.8, 1056.0], [35.9, 1061.0], [36.0, 1068.0], [36.1, 1075.0], [36.2, 1080.0], [36.3, 1085.0], [36.4, 1092.0], [36.5, 1098.0], [36.6, 1104.0], [36.7, 1109.0], [36.8, 1115.0], [36.9, 1120.0], [37.0, 1125.0], [37.1, 1130.0], [37.2, 1134.0], [37.3, 1139.0], [37.4, 1145.0], [37.5, 1151.0], [37.6, 1156.0], [37.7, 1162.0], [37.8, 1168.0], [37.9, 1174.0], [38.0, 1179.0], [38.1, 1185.0], [38.2, 1191.0], [38.3, 1197.0], [38.4, 1201.0], [38.5, 1207.0], [38.6, 1213.0], [38.7, 1219.0], [38.8, 1225.0], [38.9, 1231.0], [39.0, 1237.0], [39.1, 1243.0], [39.2, 1249.0], [39.3, 1255.0], [39.4, 1260.0], [39.5, 1266.0], [39.6, 1272.0], [39.7, 1278.0], [39.8, 1284.0], [39.9, 1291.0], [40.0, 1297.0], [40.1, 1303.0], [40.2, 1310.0], [40.3, 1316.0], [40.4, 1322.0], [40.5, 1329.0], [40.6, 1335.0], [40.7, 1342.0], [40.8, 1348.0], [40.9, 1355.0], [41.0, 1361.0], [41.1, 1368.0], [41.2, 1373.0], [41.3, 1379.0], [41.4, 1384.0], [41.5, 1391.0], [41.6, 1399.0], [41.7, 1405.0], [41.8, 1411.0], [41.9, 1418.0], [42.0, 1424.0], [42.1, 1430.0], [42.2, 1437.0], [42.3, 1444.0], [42.4, 1450.0], [42.5, 1456.0], [42.6, 1462.0], [42.7, 1469.0], [42.8, 1475.0], [42.9, 1481.0], [43.0, 1487.0], [43.1, 1493.0], [43.2, 1499.0], [43.3, 1506.0], [43.4, 1512.0], [43.5, 1517.0], [43.6, 1523.0], [43.7, 1528.0], [43.8, 1535.0], [43.9, 1541.0], [44.0, 1547.0], [44.1, 1552.0], [44.2, 1559.0], [44.3, 1564.0], [44.4, 1570.0], [44.5, 1577.0], [44.6, 1583.0], [44.7, 1589.0], [44.8, 1596.0], [44.9, 1601.0], [45.0, 1607.0], [45.1, 1612.0], [45.2, 1619.0], [45.3, 1625.0], [45.4, 1631.0], [45.5, 1636.0], [45.6, 1642.0], [45.7, 1648.0], [45.8, 1655.0], [45.9, 1660.0], [46.0, 1666.0], [46.1, 1672.0], [46.2, 1677.0], [46.3, 1683.0], [46.4, 1689.0], [46.5, 1695.0], [46.6, 1701.0], [46.7, 1707.0], [46.8, 1713.0], [46.9, 1718.0], [47.0, 1724.0], [47.1, 1729.0], [47.2, 1735.0], [47.3, 1741.0], [47.4, 1747.0], [47.5, 1753.0], [47.6, 1759.0], [47.7, 1764.0], [47.8, 1770.0], [47.9, 1777.0], [48.0, 1783.0], [48.1, 1789.0], [48.2, 1795.0], [48.3, 1801.0], [48.4, 1807.0], [48.5, 1812.0], [48.6, 1819.0], [48.7, 1824.0], [48.8, 1830.0], [48.9, 1837.0], [49.0, 1843.0], [49.1, 1848.0], [49.2, 1854.0], [49.3, 1859.0], [49.4, 1865.0], [49.5, 1871.0], [49.6, 1877.0], [49.7, 1882.0], [49.8, 1888.0], [49.9, 1894.0], [50.0, 1901.0], [50.1, 1907.0], [50.2, 1913.0], [50.3, 1920.0], [50.4, 1926.0], [50.5, 1932.0], [50.6, 1938.0], [50.7, 1944.0], [50.8, 1951.0], [50.9, 1958.0], [51.0, 1964.0], [51.1, 1971.0], [51.2, 1977.0], [51.3, 1983.0], [51.4, 1989.0], [51.5, 1995.0], [51.6, 2001.0], [51.7, 2008.0], [51.8, 2013.0], [51.9, 2019.0], [52.0, 2025.0], [52.1, 2031.0], [52.2, 2037.0], [52.3, 2043.0], [52.4, 2049.0], [52.5, 2055.0], [52.6, 2061.0], [52.7, 2067.0], [52.8, 2074.0], [52.9, 2080.0], [53.0, 2087.0], [53.1, 2093.0], [53.2, 2099.0], [53.3, 2105.0], [53.4, 2111.0], [53.5, 2117.0], [53.6, 2123.0], [53.7, 2130.0], [53.8, 2136.0], [53.9, 2143.0], [54.0, 2149.0], [54.1, 2155.0], [54.2, 2162.0], [54.3, 2168.0], [54.4, 2174.0], [54.5, 2180.0], [54.6, 2187.0], [54.7, 2193.0], [54.8, 2200.0], [54.9, 2205.0], [55.0, 2211.0], [55.1, 2217.0], [55.2, 2224.0], [55.3, 2230.0], [55.4, 2237.0], [55.5, 2243.0], [55.6, 2250.0], [55.7, 2256.0], [55.8, 2262.0], [55.9, 2268.0], [56.0, 2274.0], [56.1, 2281.0], [56.2, 2288.0], [56.3, 2294.0], [56.4, 2300.0], [56.5, 2305.0], [56.6, 2312.0], [56.7, 2319.0], [56.8, 2324.0], [56.9, 2330.0], [57.0, 2336.0], [57.1, 2342.0], [57.2, 2348.0], [57.3, 2356.0], [57.4, 2362.0], [57.5, 2369.0], [57.6, 2375.0], [57.7, 2382.0], [57.8, 2388.0], [57.9, 2394.0], [58.0, 2400.0], [58.1, 2406.0], [58.2, 2412.0], [58.3, 2419.0], [58.4, 2425.0], [58.5, 2432.0], [58.6, 2439.0], [58.7, 2445.0], [58.8, 2451.0], [58.9, 2457.0], [59.0, 2464.0], [59.1, 2470.0], [59.2, 2476.0], [59.3, 2483.0], [59.4, 2490.0], [59.5, 2495.0], [59.6, 2502.0], [59.7, 2508.0], [59.8, 2513.0], [59.9, 2520.0], [60.0, 2526.0], [60.1, 2533.0], [60.2, 2539.0], [60.3, 2546.0], [60.4, 2552.0], [60.5, 2558.0], [60.6, 2565.0], [60.7, 2571.0], [60.8, 2577.0], [60.9, 2584.0], [61.0, 2591.0], [61.1, 2597.0], [61.2, 2603.0], [61.3, 2609.0], [61.4, 2616.0], [61.5, 2623.0], [61.6, 2630.0], [61.7, 2636.0], [61.8, 2642.0], [61.9, 2649.0], [62.0, 2656.0], [62.1, 2662.0], [62.2, 2669.0], [62.3, 2675.0], [62.4, 2682.0], [62.5, 2688.0], [62.6, 2695.0], [62.7, 2702.0], [62.8, 2709.0], [62.9, 2716.0], [63.0, 2723.0], [63.1, 2731.0], [63.2, 2738.0], [63.3, 2744.0], [63.4, 2751.0], [63.5, 2757.0], [63.6, 2764.0], [63.7, 2772.0], [63.8, 2779.0], [63.9, 2786.0], [64.0, 2793.0], [64.1, 2799.0], [64.2, 2807.0], [64.3, 2814.0], [64.4, 2821.0], [64.5, 2828.0], [64.6, 2835.0], [64.7, 2842.0], [64.8, 2850.0], [64.9, 2857.0], [65.0, 2864.0], [65.1, 2870.0], [65.2, 2878.0], [65.3, 2885.0], [65.4, 2893.0], [65.5, 2899.0], [65.6, 2906.0], [65.7, 2913.0], [65.8, 2921.0], [65.9, 2928.0], [66.0, 2935.0], [66.1, 2942.0], [66.2, 2949.0], [66.3, 2957.0], [66.4, 2964.0], [66.5, 2970.0], [66.6, 2977.0], [66.7, 2984.0], [66.8, 2991.0], [66.9, 2999.0], [67.0, 3007.0], [67.1, 3014.0], [67.2, 3021.0], [67.3, 3028.0], [67.4, 3036.0], [67.5, 3043.0], [67.6, 3050.0], [67.7, 3057.0], [67.8, 3064.0], [67.9, 3071.0], [68.0, 3079.0], [68.1, 3086.0], [68.2, 3094.0], [68.3, 3101.0], [68.4, 3109.0], [68.5, 3116.0], [68.6, 3123.0], [68.7, 3130.0], [68.8, 3137.0], [68.9, 3144.0], [69.0, 3153.0], [69.1, 3161.0], [69.2, 3168.0], [69.3, 3175.0], [69.4, 3182.0], [69.5, 3189.0], [69.6, 3197.0], [69.7, 3206.0], [69.8, 3214.0], [69.9, 3223.0], [70.0, 3230.0], [70.1, 3238.0], [70.2, 3245.0], [70.3, 3253.0], [70.4, 3260.0], [70.5, 3267.0], [70.6, 3274.0], [70.7, 3283.0], [70.8, 3291.0], [70.9, 3298.0], [71.0, 3307.0], [71.1, 3314.0], [71.2, 3321.0], [71.3, 3328.0], [71.4, 3336.0], [71.5, 3344.0], [71.6, 3352.0], [71.7, 3360.0], [71.8, 3368.0], [71.9, 3376.0], [72.0, 3384.0], [72.1, 3393.0], [72.2, 3402.0], [72.3, 3409.0], [72.4, 3417.0], [72.5, 3424.0], [72.6, 3432.0], [72.7, 3440.0], [72.8, 3448.0], [72.9, 3456.0], [73.0, 3464.0], [73.1, 3472.0], [73.2, 3480.0], [73.3, 3488.0], [73.4, 3496.0], [73.5, 3503.0], [73.6, 3511.0], [73.7, 3518.0], [73.8, 3525.0], [73.9, 3535.0], [74.0, 3542.0], [74.1, 3550.0], [74.2, 3558.0], [74.3, 3567.0], [74.4, 3575.0], [74.5, 3584.0], [74.6, 3592.0], [74.7, 3600.0], [74.8, 3609.0], [74.9, 3617.0], [75.0, 3625.0], [75.1, 3633.0], [75.2, 3641.0], [75.3, 3650.0], [75.4, 3658.0], [75.5, 3665.0], [75.6, 3675.0], [75.7, 3684.0], [75.8, 3693.0], [75.9, 3702.0], [76.0, 3711.0], [76.1, 3718.0], [76.2, 3727.0], [76.3, 3735.0], [76.4, 3745.0], [76.5, 3754.0], [76.6, 3763.0], [76.7, 3771.0], [76.8, 3780.0], [76.9, 3788.0], [77.0, 3797.0], [77.1, 3806.0], [77.2, 3814.0], [77.3, 3822.0], [77.4, 3832.0], [77.5, 3841.0], [77.6, 3850.0], [77.7, 3860.0], [77.8, 3869.0], [77.9, 3877.0], [78.0, 3886.0], [78.1, 3895.0], [78.2, 3904.0], [78.3, 3913.0], [78.4, 3923.0], [78.5, 3934.0], [78.6, 3943.0], [78.7, 3953.0], [78.8, 3963.0], [78.9, 3971.0], [79.0, 3979.0], [79.1, 3988.0], [79.2, 3999.0], [79.3, 4008.0], [79.4, 4017.0], [79.5, 4027.0], [79.6, 4036.0], [79.7, 4046.0], [79.8, 4055.0], [79.9, 4064.0], [80.0, 4073.0], [80.1, 4082.0], [80.2, 4091.0], [80.3, 4099.0], [80.4, 4108.0], [80.5, 4118.0], [80.6, 4127.0], [80.7, 4136.0], [80.8, 4145.0], [80.9, 4154.0], [81.0, 4164.0], [81.1, 4173.0], [81.2, 4184.0], [81.3, 4193.0], [81.4, 4203.0], [81.5, 4213.0], [81.6, 4223.0], [81.7, 4233.0], [81.8, 4243.0], [81.9, 4252.0], [82.0, 4263.0], [82.1, 4273.0], [82.2, 4283.0], [82.3, 4293.0], [82.4, 4304.0], [82.5, 4312.0], [82.6, 4323.0], [82.7, 4334.0], [82.8, 4344.0], [82.9, 4355.0], [83.0, 4366.0], [83.1, 4377.0], [83.2, 4387.0], [83.3, 4397.0], [83.4, 4409.0], [83.5, 4419.0], [83.6, 4431.0], [83.7, 4441.0], [83.8, 4451.0], [83.9, 4461.0], [84.0, 4472.0], [84.1, 4483.0], [84.2, 4495.0], [84.3, 4507.0], [84.4, 4517.0], [84.5, 4529.0], [84.6, 4541.0], [84.7, 4552.0], [84.8, 4564.0], [84.9, 4576.0], [85.0, 4587.0], [85.1, 4599.0], [85.2, 4609.0], [85.3, 4621.0], [85.4, 4633.0], [85.5, 4646.0], [85.6, 4660.0], [85.7, 4673.0], [85.8, 4686.0], [85.9, 4699.0], [86.0, 4712.0], [86.1, 4727.0], [86.2, 4739.0], [86.3, 4751.0], [86.4, 4764.0], [86.5, 4776.0], [86.6, 4791.0], [86.7, 4802.0], [86.8, 4815.0], [86.9, 4827.0], [87.0, 4841.0], [87.1, 4855.0], [87.2, 4869.0], [87.3, 4883.0], [87.4, 4896.0], [87.5, 4911.0], [87.6, 4924.0], [87.7, 4937.0], [87.8, 4952.0], [87.9, 4967.0], [88.0, 4983.0], [88.1, 4997.0], [88.2, 5010.0], [88.3, 5024.0], [88.4, 5039.0], [88.5, 5054.0], [88.6, 5068.0], [88.7, 5084.0], [88.8, 5101.0], [88.9, 5118.0], [89.0, 5133.0], [89.1, 5151.0], [89.2, 5167.0], [89.3, 5182.0], [89.4, 5196.0], [89.5, 5212.0], [89.6, 5230.0], [89.7, 5247.0], [89.8, 5262.0], [89.9, 5281.0], [90.0, 5299.0], [90.1, 5314.0], [90.2, 5332.0], [90.3, 5351.0], [90.4, 5368.0], [90.5, 5387.0], [90.6, 5407.0], [90.7, 5425.0], [90.8, 5443.0], [90.9, 5461.0], [91.0, 5480.0], [91.1, 5499.0], [91.2, 5516.0], [91.3, 5533.0], [91.4, 5553.0], [91.5, 5574.0], [91.6, 5596.0], [91.7, 5613.0], [91.8, 5636.0], [91.9, 5657.0], [92.0, 5679.0], [92.1, 5700.0], [92.2, 5722.0], [92.3, 5744.0], [92.4, 5766.0], [92.5, 5789.0], [92.6, 5812.0], [92.7, 5831.0], [92.8, 5850.0], [92.9, 5872.0], [93.0, 5895.0], [93.1, 5919.0], [93.2, 5942.0], [93.3, 5968.0], [93.4, 5992.0], [93.5, 6017.0], [93.6, 6038.0], [93.7, 6063.0], [93.8, 6093.0], [93.9, 6119.0], [94.0, 6145.0], [94.1, 6171.0], [94.2, 6199.0], [94.3, 6222.0], [94.4, 6248.0], [94.5, 6273.0], [94.6, 6303.0], [94.7, 6331.0], [94.8, 6356.0], [94.9, 6380.0], [95.0, 6411.0], [95.1, 6440.0], [95.2, 6471.0], [95.3, 6496.0], [95.4, 6527.0], [95.5, 6556.0], [95.6, 6588.0], [95.7, 6620.0], [95.8, 6655.0], [95.9, 6688.0], [96.0, 6723.0], [96.1, 6755.0], [96.2, 6793.0], [96.3, 6827.0], [96.4, 6864.0], [96.5, 6901.0], [96.6, 6933.0], [96.7, 6971.0], [96.8, 7006.0], [96.9, 7043.0], [97.0, 7085.0], [97.1, 7135.0], [97.2, 7176.0], [97.3, 7226.0], [97.4, 7273.0], [97.5, 7321.0], [97.6, 7367.0], [97.7, 7413.0], [97.8, 7463.0], [97.9, 7517.0], [98.0, 7569.0], [98.1, 7630.0], [98.2, 7703.0], [98.3, 7774.0], [98.4, 7855.0], [98.5, 7932.0], [98.6, 8015.0], [98.7, 8104.0], [98.8, 8190.0], [98.9, 8286.0], [99.0, 8391.0], [99.1, 8524.0], [99.2, 8660.0], [99.3, 8812.0], [99.4, 8986.0], [99.5, 9200.0], [99.6, 9411.0], [99.7, 9716.0], [99.8, 10159.0], [99.9, 10874.0]], "isOverall": false, "label": "create cin", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 11795.0, "series": [{"data": [[0.0, 7819.0], [100.0, 11795.0], [200.0, 9192.0], [300.0, 4927.0], [400.0, 4516.0], [500.0, 4912.0], [600.0, 5332.0], [700.0, 4646.0], [800.0, 3423.0], [900.0, 3199.0], [1000.0, 2935.0], [1100.0, 3146.0], [1200.0, 2893.0], [1300.0, 2695.0], [1400.0, 2730.0], [1500.0, 2852.0], [1600.0, 2946.0], [1700.0, 2897.0], [1800.0, 2935.0], [1900.0, 2737.0], [2000.0, 2794.0], [2100.0, 2743.0], [2200.0, 2734.0], [2300.0, 2735.0], [2400.0, 2698.0], [2500.0, 2705.0], [2600.0, 2634.0], [2700.0, 2464.0], [2800.0, 2410.0], [2900.0, 2405.0], [3000.0, 2345.0], [3100.0, 2328.0], [3200.0, 2202.0], [3300.0, 2157.0], [3400.0, 2210.0], [3500.0, 2113.0], [3600.0, 2035.0], [3700.0, 1966.0], [3800.0, 1937.0], [3900.0, 1817.0], [4000.0, 1895.0], [4200.0, 1699.0], [4100.0, 1813.0], [4300.0, 1644.0], [4400.0, 1595.0], [4500.0, 1475.0], [4600.0, 1378.0], [4700.0, 1321.0], [4800.0, 1294.0], [4900.0, 1178.0], [5100.0, 1073.0], [5000.0, 1159.0], [5200.0, 1012.0], [5300.0, 959.0], [5400.0, 926.0], [5500.0, 896.0], [5600.0, 815.0], [5800.0, 828.0], [5700.0, 749.0], [6100.0, 640.0], [5900.0, 693.0], [6000.0, 701.0], [6200.0, 662.0], [6300.0, 650.0], [6400.0, 591.0], [6500.0, 559.0], [6600.0, 515.0], [6700.0, 485.0], [6900.0, 487.0], [6800.0, 472.0], [7000.0, 424.0], [7100.0, 384.0], [7200.0, 352.0], [7300.0, 369.0], [7400.0, 342.0], [7600.0, 256.0], [7500.0, 302.0], [7700.0, 232.0], [7900.0, 210.0], [7800.0, 223.0], [8000.0, 196.0], [8100.0, 204.0], [8200.0, 170.0], [8400.0, 130.0], [8600.0, 138.0], [8500.0, 125.0], [8700.0, 98.0], [8300.0, 161.0], [8900.0, 99.0], [8800.0, 98.0], [9100.0, 67.0], [9000.0, 90.0], [9200.0, 98.0], [9300.0, 70.0], [9500.0, 51.0], [9600.0, 62.0], [9700.0, 46.0], [9400.0, 55.0], [9900.0, 36.0], [9800.0, 52.0], [10100.0, 33.0], [10200.0, 38.0], [10000.0, 28.0], [10500.0, 25.0], [10700.0, 15.0], [10300.0, 40.0], [10600.0, 14.0], [10400.0, 20.0], [10900.0, 17.0], [10800.0, 6.0], [11000.0, 12.0], [11200.0, 7.0], [11100.0, 8.0], [11500.0, 8.0], [11400.0, 10.0], [11700.0, 6.0], [11300.0, 12.0], [11600.0, 10.0], [11800.0, 4.0], [11900.0, 6.0], [12200.0, 9.0], [12100.0, 4.0], [12000.0, 7.0], [12500.0, 6.0], [12400.0, 10.0], [12600.0, 2.0], [12300.0, 2.0], [12700.0, 4.0], [13200.0, 3.0], [12800.0, 2.0], [13100.0, 2.0], [12900.0, 1.0], [13300.0, 2.0], [13000.0, 1.0], [13600.0, 3.0], [13700.0, 2.0], [13500.0, 1.0], [13400.0, 2.0], [14100.0, 2.0], [14000.0, 2.0], [15000.0, 1.0], [15600.0, 1.0], [15700.0, 1.0]], "isOverall": false, "label": "create cin", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 15700.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 19232.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 81800.0, "series": [{"data": [[0.0, 19336.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 19232.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 81800.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 51284.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 17.116120218579226, "minX": 1.68666612E12, "maxY": 100.0, "series": [{"data": [[1.68666894E12, 100.0], [1.68666792E12, 100.0], [1.68666732E12, 100.0], [1.68666954E12, 100.0], [1.6866669E12, 100.0], [1.68666852E12, 100.0], [1.68667014E12, 100.0], [1.6866663E12, 47.64272048976479], [1.68667074E12, 35.50185873605941], [1.68666912E12, 100.0], [1.68666876E12, 100.0], [1.68667038E12, 17.116120218579226], [1.68666714E12, 100.0], [1.68666654E12, 40.174635845471784], [1.68666936E12, 100.0], [1.68666996E12, 100.0], [1.68666672E12, 100.0], [1.68666774E12, 100.0], [1.68666612E12, 23.377945334590002], [1.68666834E12, 100.0], [1.68667056E12, 33.57382550335566], [1.68666666E12, 82.96592475871567], [1.68666828E12, 100.0], [1.6866699E12, 100.0], [1.68666888E12, 100.0], [1.6866705E12, 72.87651821862353], [1.68666786E12, 100.0], [1.68666948E12, 100.0], [1.68666624E12, 35.92701149425285], [1.68666726E12, 100.0], [1.68667008E12, 100.0], [1.68666972E12, 100.0], [1.68666648E12, 74.51416149068338], [1.6866675E12, 100.0], [1.6866681E12, 100.0], [1.68667032E12, 61.085489313835765], [1.6866687E12, 100.0], [1.68666768E12, 100.0], [1.68666708E12, 100.0], [1.6866693E12, 100.0], [1.68666762E12, 100.0], [1.68666924E12, 100.0], [1.68666702E12, 100.0], [1.68666984E12, 100.0], [1.68666822E12, 100.0], [1.68667044E12, 59.95637949836424], [1.6866672E12, 100.0], [1.6866666E12, 29.69561875480396], [1.68666882E12, 100.0], [1.68666846E12, 100.0], [1.68667068E12, 50.38352638352639], [1.68666744E12, 100.0], [1.68666684E12, 100.0], [1.68666906E12, 100.0], [1.68666642E12, 51.863206007182534], [1.68666966E12, 100.0], [1.68666864E12, 100.0], [1.68667026E12, 98.99905571293674], [1.68666804E12, 100.0], [1.68666696E12, 100.0], [1.6866702E12, 100.0], [1.68666798E12, 100.0], [1.68666636E12, 21.473710441066526], [1.68666858E12, 100.0], [1.6866708E12, 19.361111111111114], [1.68666918E12, 100.0], [1.68666816E12, 100.0], [1.68666756E12, 100.0], [1.68666978E12, 100.0], [1.68666618E12, 20.575630252100858], [1.68666942E12, 100.0], [1.6866684E12, 100.0], [1.6866678E12, 100.0], [1.68667002E12, 100.0], [1.686669E12, 100.0], [1.68667062E12, 35.343485617597295], [1.68666738E12, 100.0], [1.68666678E12, 100.0], [1.6866696E12, 100.0]], "isOverall": false, "label": "OM2M-Insertion Testing", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6866708E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 257.93039049235995, "minX": 1.0, "maxY": 3243.1028087913387, "series": [{"data": [[2.0, 418.1272727272727], [3.0, 333.51546391752566], [4.0, 420.5772357723576], [5.0, 302.8181818181818], [6.0, 296.5260869565218], [7.0, 306.83794466403174], [8.0, 322.78666666666663], [9.0, 289.88544891640873], [10.0, 415.0084985835691], [11.0, 389.1933534743205], [12.0, 297.9126213592234], [13.0, 383.2957486136782], [14.0, 283.08], [15.0, 257.93039049235995], [16.0, 364.745038167939], [17.0, 280.2519201228879], [18.0, 344.7629139072845], [19.0, 274.82769726248], [20.0, 420.682148040639], [21.0, 354.17107093184967], [22.0, 313.60273972602766], [23.0, 334.0883720930232], [24.0, 493.1432469304233], [25.0, 997.4584891548249], [26.0, 355.67326732673274], [27.0, 408.4135135135135], [28.0, 453.9349269588313], [29.0, 386.52950075642957], [30.0, 470.3710879284651], [31.0, 392.90536723163854], [32.0, 457.32843137254883], [33.0, 484.39235127478764], [34.0, 468.58178752107887], [35.0, 565.680057388809], [36.0, 416.30291005291014], [37.0, 601.5897435897436], [38.0, 520.0867709815083], [39.0, 522.8591916558019], [40.0, 595.2730978260867], [41.0, 547.7560646900268], [42.0, 449.47589424572317], [43.0, 650.3772378516626], [44.0, 482.7530529172319], [45.0, 643.9041666666665], [46.0, 617.9188829787239], [47.0, 509.2453637660485], [48.0, 951.1616161616165], [49.0, 601.875901875902], [50.0, 756.9407475986568], [51.0, 1486.961770623743], [52.0, 1596.238532110092], [53.0, 1167.1759656652362], [54.0, 991.2219178082191], [55.0, 907.320610687023], [56.0, 1083.9035532994926], [57.0, 697.7266187050358], [58.0, 754.0271903323264], [59.0, 879.2590529247913], [60.0, 1025.5054054054056], [61.0, 915.2163934426228], [62.0, 1305.64128256513], [63.0, 991.5949367088609], [64.0, 756.789644012945], [65.0, 921.695035460993], [66.0, 955.1196581196584], [67.0, 1111.4633507853398], [68.0, 995.8421052631577], [69.0, 932.8135135135144], [70.0, 1226.6549865229115], [71.0, 1010.950777202072], [72.0, 1325.3075060532692], [73.0, 1563.3188405797098], [74.0, 903.2030567685599], [75.0, 976.4303705245634], [76.0, 1547.1693548387098], [77.0, 1095.7222222222226], [78.0, 2277.83185840708], [79.0, 2198.0373831775696], [80.0, 912.5619047619049], [81.0, 1416.952830188679], [82.0, 1061.858823529412], [83.0, 1212.4183673469392], [84.0, 1066.3529411764707], [85.0, 1452.4698795180725], [86.0, 2695.418918918919], [87.0, 957.7321428571427], [88.0, 1355.3861386138615], [89.0, 2028.4821428571427], [90.0, 2033.9299999999998], [91.0, 1212.6105263157892], [92.0, 976.9545454545455], [93.0, 2550.8132530120483], [94.0, 1161.603305785124], [95.0, 1758.1732283464567], [96.0, 2009.03], [97.0, 1136.578431372549], [98.0, 1995.5547445255474], [99.0, 2487.746153846154], [100.0, 3243.1028087913387], [1.0, 377.03125]], "isOverall": false, "label": "create cin", "isController": false}, {"data": [[81.32561811106197, 2364.7466735022144]], "isOverall": false, "label": "create cin-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 2235.6, "minX": 1.68666612E12, "maxY": 75165.03333333334, "series": [{"data": [[1.68666894E12, 10861.966666666667], [1.68666792E12, 15103.05], [1.68666732E12, 21104.583333333332], [1.68666954E12, 10183.133333333333], [1.6866669E12, 30099.616666666665], [1.68666852E12, 14459.65], [1.68667014E12, 7268.1], [1.6866663E12, 75165.03333333334], [1.68667074E12, 7262.25], [1.68666912E12, 10211.2], [1.68666876E12, 11341.95], [1.68667038E12, 6494.9], [1.68666714E12, 23307.183333333334], [1.68666654E12, 50866.316666666666], [1.68666936E12, 10457.516666666666], [1.68666996E12, 8298.033333333333], [1.68666672E12, 40707.9], [1.68666774E12, 16255.4], [1.68666612E12, 11719.6], [1.68666834E12, 14479.033333333333], [1.68667056E12, 5474.55], [1.68666666E12, 41739.833333333336], [1.68666828E12, 14126.416666666666], [1.6866699E12, 8815.35], [1.68666888E12, 11877.816666666668], [1.6866705E12, 8725.666666666666], [1.68666786E12, 17577.4], [1.68666948E12, 10562.116666666667], [1.68666624E12, 10084.95], [1.68666726E12, 24523.866666666665], [1.68667008E12, 8142.616666666667], [1.68666972E12, 8774.566666666668], [1.68666648E12, 63870.416666666664], [1.6866675E12, 19299.0], [1.6866681E12, 15171.55], [1.68667032E12, 8080.483333333334], [1.6866687E12, 12778.066666666668], [1.68666768E12, 17703.066666666666], [1.68666708E12, 25054.85], [1.6866693E12, 11489.033333333333], [1.68666762E12, 17288.466666666667], [1.68666924E12, 10635.65], [1.68666702E12, 24989.933333333334], [1.68666984E12, 7256.966666666666], [1.68666822E12, 13351.483333333334], [1.68667044E12, 7911.2], [1.6866672E12, 22742.166666666668], [1.6866666E12, 33514.933333333334], [1.68666882E12, 13006.033333333333], [1.68666846E12, 13233.9], [1.68667068E12, 6818.983333333334], [1.68666744E12, 21328.816666666666], [1.68666684E12, 31799.266666666666], [1.68666906E12, 9088.516666666666], [1.68666642E12, 73236.78333333334], [1.68666966E12, 10061.183333333332], [1.68666864E12, 13974.233333333334], [1.68667026E12, 8568.85], [1.68666804E12, 16842.95], [1.68666696E12, 28048.816666666666], [1.6866702E12, 8684.683333333332], [1.68666798E12, 16133.366666666667], [1.68666636E12, 64859.6], [1.68666858E12, 14074.066666666668], [1.6866708E12, 2879.633333333333], [1.68666918E12, 8603.5], [1.68666816E12, 15943.233333333334], [1.68666756E12, 20764.25], [1.68666978E12, 7238.083333333333], [1.68666618E12, 11631.616666666667], [1.68666942E12, 11758.366666666667], [1.6866684E12, 14379.916666666666], [1.6866678E12, 16944.166666666668], [1.68667002E12, 8537.616666666667], [1.686669E12, 8837.7], [1.68667062E12, 4704.233333333334], [1.68666738E12, 21336.3], [1.68666678E12, 36021.45], [1.6866696E12, 8983.316666666668]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.68666894E12, 8300.7], [1.68666792E12, 11888.7], [1.68666732E12, 17125.8], [1.68666954E12, 8252.4], [1.6866669E12, 24922.8], [1.68666852E12, 11854.2], [1.68667014E12, 5885.7], [1.6866663E12, 72132.6], [1.68667074E12, 5568.3], [1.68666912E12, 8079.9], [1.68666876E12, 9266.7], [1.68667038E12, 5050.8], [1.68666714E12, 19168.2], [1.68666654E12, 43580.4], [1.68666936E12, 8245.5], [1.68666996E12, 6472.2], [1.68666672E12, 34437.9], [1.68666774E12, 13123.8], [1.68666612E12, 6969.0], [1.68666834E12, 11930.1], [1.68667056E12, 4112.4], [1.68666666E12, 35031.3], [1.68666828E12, 11219.4], [1.6866699E12, 6900.0], [1.68666888E12, 9632.4], [1.6866705E12, 6817.2], [1.68666786E12, 14441.7], [1.68666948E12, 8431.8], [1.68666624E12, 12006.0], [1.68666726E12, 20734.5], [1.68667008E12, 6410.1], [1.68666972E12, 6927.6], [1.68666648E12, 55545.0], [1.6866675E12, 16152.9], [1.6866681E12, 11943.9], [1.68667032E12, 6134.1], [1.6866687E12, 10094.7], [1.68666768E12, 14234.7], [1.68666708E12, 20292.9], [1.6866693E12, 9225.3], [1.68666762E12, 13703.4], [1.68666924E12, 8783.7], [1.68666702E12, 20534.4], [1.68666984E12, 6078.9], [1.68666822E12, 10902.0], [1.68667044E12, 6327.3], [1.6866672E12, 18374.7], [1.6866666E12, 26930.7], [1.68666882E12, 10425.9], [1.68666846E12, 11005.5], [1.68667068E12, 5361.3], [1.68666744E12, 18022.8], [1.68666684E12, 26075.1], [1.68666906E12, 7231.2], [1.68666642E12, 63404.1], [1.68666966E12, 7976.4], [1.68666864E12, 11550.6], [1.68667026E12, 7307.1], [1.68666804E12, 13593.0], [1.68666696E12, 23225.4], [1.6866702E12, 6789.6], [1.68666798E12, 13116.9], [1.68666636E12, 55379.4], [1.68666858E12, 11661.0], [1.6866708E12, 2235.6], [1.68666918E12, 7182.9], [1.68666816E12, 12909.9], [1.68666756E12, 17388.0], [1.68666978E12, 5954.7], [1.68666618E12, 8211.0], [1.68666942E12, 9715.2], [1.6866684E12, 11385.0], [1.6866678E12, 13938.0], [1.68667002E12, 6644.7], [1.686669E12, 7003.5], [1.68667062E12, 4077.9], [1.68666738E12, 17719.2], [1.68666678E12, 30028.8], [1.6866696E12, 7348.5]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6866708E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 117.51358086219766, "minX": 1.68666612E12, "maxY": 7129.824150058615, "series": [{"data": [[1.68666894E12, 5017.031587697419], [1.68666792E12, 3476.3749274521224], [1.68666732E12, 2435.1966156325566], [1.68666954E12, 5079.028428093637], [1.6866669E12, 1660.576688815059], [1.68666852E12, 3509.681606519215], [1.68667014E12, 7129.824150058615], [1.6866663E12, 280.1504687201076], [1.68667074E12, 2803.035935563815], [1.68666912E12, 5113.725875320231], [1.68666876E12, 4432.497393894264], [1.68667038E12, 1272.188524590164], [1.68666714E12, 2158.799496040328], [1.68666654E12, 351.22165927802376], [1.68666936E12, 5040.553138075314], [1.68666996E12, 6390.68123667377], [1.68666672E12, 1205.4117411340442], [1.68666774E12, 3149.4626708727633], [1.68666612E12, 958.9868049010378], [1.68666834E12, 3475.098901098899], [1.68667056E12, 3061.562080536916], [1.68666666E12, 956.7728973803457], [1.68666828E12, 3718.7816728167286], [1.6866699E12, 6064.207000000005], [1.68666888E12, 4311.380372492833], [1.6866705E12, 4492.130566801616], [1.68666786E12, 2881.256091734347], [1.68666948E12, 4815.698854337151], [1.68666624E12, 1090.051149425287], [1.68666726E12, 1976.382695507487], [1.68667008E12, 6323.79978471475], [1.68666972E12, 5925.057768924305], [1.68666648E12, 554.9296894409923], [1.6866675E12, 2568.3750533959815], [1.6866681E12, 3438.955517042173], [1.68667032E12, 4290.484814398207], [1.6866687E12, 4103.657552973341], [1.68666768E12, 2911.901114881244], [1.68666708E12, 2033.0850051003033], [1.6866693E12, 4465.87733732236], [1.68666762E12, 3008.393252769386], [1.68666924E12, 4705.840534171237], [1.68666702E12, 2013.7046370967746], [1.68666984E12, 6860.607264472189], [1.68666822E12, 3770.754430379745], [1.68667044E12, 3780.9203925845154], [1.6866672E12, 2260.0957566654133], [1.6866666E12, 370.0284396617964], [1.68666882E12, 3945.8371939113144], [1.68666846E12, 3759.052664576801], [1.68667068E12, 3897.379665379666], [1.68666744E12, 2289.9192189892797], [1.68666684E12, 1589.2259857105068], [1.68666906E12, 5712.405534351152], [1.68666642E12, 343.01142670584375], [1.68666966E12, 5194.415224913496], [1.68666864E12, 3557.2915173237757], [1.68667026E12, 5574.05004721435], [1.68666804E12, 3041.685786802034], [1.68666696E12, 1777.2742127153888], [1.6866702E12, 6145.071138211381], [1.68666798E12, 3154.0915307732753], [1.68666636E12, 117.51358086219766], [1.68666858E12, 3554.6023668639077], [1.6866708E12, 2031.4320987654332], [1.68666918E12, 5853.822286263214], [1.68666816E12, 3212.761090326029], [1.68666756E12, 2381.0678571428543], [1.68666978E12, 6861.652375434529], [1.68666618E12, 939.7134453781536], [1.68666942E12, 4303.351562499996], [1.6866684E12, 3629.506666666664], [1.6866678E12, 2963.7396039603973], [1.68667002E12, 6260.183800623056], [1.686669E12, 5832.029556650236], [1.68667062E12, 3036.165820642976], [1.68666738E12, 2329.442757009345], [1.68666678E12, 1370.9025735294163], [1.6866696E12, 5576.294835680748]], "isOverall": false, "label": "create cin", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6866708E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 117.49999999999999, "minX": 1.68666612E12, "maxY": 7129.810082063308, "series": [{"data": [[1.68666894E12, 5017.015793848715], [1.68666792E12, 3476.3644805571707], [1.68666732E12, 2435.1821112006387], [1.68666954E12, 5079.016722408019], [1.6866669E12, 1660.5661683278001], [1.68666852E12, 3509.671129220021], [1.68667014E12, 7129.810082063308], [1.6866663E12, 280.1390855175051], [1.68667074E12, 2803.0148698884705], [1.68666912E12, 5113.716481639633], [1.68666876E12, 4432.486969471336], [1.68667038E12, 1272.169398907103], [1.68666714E12, 2158.784737221029], [1.68666654E12, 351.2096263457881], [1.68666936E12, 5040.538075313806], [1.68666996E12, 6390.668443496805], [1.68666672E12, 1205.4001202163856], [1.68666774E12, 3149.451104100944], [1.68666612E12, 836.2648444863344], [1.68666834E12, 3475.0769230769197], [1.68667056E12, 3061.552013422819], [1.68666666E12, 956.7634429781367], [1.68666828E12, 3718.7712177121753], [1.6866699E12, 6064.182999999999], [1.68666888E12, 4311.361747850999], [1.6866705E12, 4492.112348178134], [1.68666786E12, 2881.239847109411], [1.68666948E12, 4815.683306055642], [1.68666624E12, 1090.0321839080434], [1.68666726E12, 1976.3710482529107], [1.68667008E12, 6323.776103336915], [1.68666972E12, 5925.041832669323], [1.68666648E12, 554.9146583850924], [1.6866675E12, 2568.359675352414], [1.6866681E12, 3438.940496822644], [1.68667032E12, 4290.471316085487], [1.6866687E12, 4103.647983595357], [1.68666768E12, 2911.8880271449325], [1.68666708E12, 2033.069364161846], [1.6866693E12, 4465.854151084521], [1.68666762E12, 3008.378650553878], [1.68666924E12, 4705.809897879028], [1.68666702E12, 2013.6932123655872], [1.68666984E12, 6860.593643586834], [1.68666822E12, 3770.7360759493663], [1.68667044E12, 3780.8898582333727], [1.6866672E12, 2260.0803604956814], [1.6866666E12, 370.0125544452993], [1.68666882E12, 3945.8186631369967], [1.68666846E12, 3759.038871473355], [1.68667068E12, 3897.3667953667946], [1.68666744E12, 2289.909647779483], [1.68666684E12, 1589.211696215928], [1.68666906E12, 5712.384541984728], [1.68666642E12, 342.99836761345205], [1.68666966E12, 5194.4031141868545], [1.68666864E12, 3557.2753882915185], [1.68667026E12, 5574.035882908398], [1.68666804E12, 3041.673604060912], [1.68666696E12, 1777.259358288769], [1.6866702E12, 6145.051829268285], [1.68666798E12, 3154.073119410831], [1.68666636E12, 117.49999999999999], [1.68666858E12, 3554.5905325443805], [1.6866708E12, 2031.4012345679023], [1.68666918E12, 5853.805955811722], [1.68666816E12, 3212.747194013896], [1.68666756E12, 2381.050793650796], [1.68666978E12, 6861.64078794902], [1.68666618E12, 939.6831932773121], [1.68666942E12, 4303.335227272729], [1.6866684E12, 3629.4963636363623], [1.6866678E12, 2963.725247524751], [1.68667002E12, 6260.16199376947], [1.686669E12, 5832.014778325126], [1.68667062E12, 3036.159052453468], [1.68666738E12, 2329.429906542052], [1.68666678E12, 1370.889705882352], [1.6866696E12, 5576.272300469487]], "isOverall": false, "label": "create cin", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6866708E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.3783240864740768, "minX": 1.68666612E12, "maxY": 123.28934967012266, "series": [{"data": [[1.68666894E12, 0.9800498753117199], [1.68666792E12, 0.7875798026697625], [1.68666732E12, 0.6559226430298155], [1.68666954E12, 0.9339464882943135], [1.6866669E12, 0.582225913621262], [1.68666852E12, 0.8294528521536674], [1.68667014E12, 1.1184056271981249], [1.6866663E12, 0.3783240864740768], [1.68667074E12, 0.7484510532837668], [1.68666912E12, 1.15542271562767], [1.68666876E12, 0.6366344005956809], [1.68667038E12, 1.1639344262295075], [1.68666714E12, 0.7152627789776806], [1.68666654E12, 0.4463267891070283], [1.68666936E12, 0.9288702928870303], [1.68666996E12, 0.877398720682303], [1.68666672E12, 0.4616309356842318], [1.68666774E12, 0.8811777076761301], [1.68666612E12, 123.28934967012266], [1.68666834E12, 0.704453441295547], [1.68667056E12, 0.9563758389261743], [1.68666666E12, 0.5444159936970654], [1.68666828E12, 0.7656826568265682], [1.6866699E12, 1.028999999999999], [1.68666888E12, 0.91189111747851], [1.6866705E12, 0.7064777327935222], [1.68666786E12, 0.7773530817009074], [1.68666948E12, 0.7209492635024545], [1.68666624E12, 0.6252873563218385], [1.68666726E12, 0.7034941763727114], [1.68667008E12, 0.9526372443487616], [1.68666972E12, 1.4731075697211164], [1.68666648E12, 0.42136645962732727], [1.6866675E12, 0.633917129431866], [1.6866681E12, 0.7654534950895427], [1.68667032E12, 0.6929133858267728], [1.6866687E12, 1.032809295967191], [1.68666768E12, 0.6980126030053311], [1.68666708E12, 0.8262495749744977], [1.6866693E12, 0.8915482423335833], [1.68666762E12, 0.8756294058408856], [1.68666924E12, 1.067556952081696], [1.68666702E12, 0.618615591397848], [1.68666984E12, 0.9704880817253118], [1.68666822E12, 0.8056962025316468], [1.68667044E12, 0.6564885496183199], [1.6866672E12, 0.6316184754036797], [1.6866666E12, 0.5096079938508832], [1.68666882E12, 0.8491065519523502], [1.68666846E12, 0.7097178683385578], [1.68667068E12, 0.7528957528957524], [1.68666744E12, 0.6918070444104133], [1.68666684E12, 0.5813707329981463], [1.68666906E12, 0.7595419847328243], [1.68666642E12, 0.4279029274132113], [1.68666966E12, 0.6972318339100345], [1.68666864E12, 1.0173237753882887], [1.68667026E12, 0.884796978281398], [1.68666804E12, 0.7878172588832495], [1.68666696E12, 0.6286393345216874], [1.6866702E12, 0.8028455284552851], [1.68666798E12, 0.7880063124671235], [1.68666636E12, 0.8164714677298799], [1.68666858E12, 0.8508875739644973], [1.6866708E12, 2.4753086419753103], [1.68666918E12, 1.2737752161383293], [1.68666816E12, 0.7504008551576692], [1.68666756E12, 0.7273809523809535], [1.68666978E12, 1.3024333719582863], [1.68666618E12, 0.6462184873949572], [1.68666942E12, 0.8522727272727268], [1.6866684E12, 0.7484848484848478], [1.6866678E12, 0.9653465346534637], [1.68667002E12, 0.9885773624091384], [1.686669E12, 1.3665024630541864], [1.68667062E12, 0.952622673434857], [1.68666738E12, 0.7262461059190037], [1.68666678E12, 0.5498621323529426], [1.6866696E12, 1.2845070422535236]], "isOverall": false, "label": "create cin", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6866708E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 40.0, "minX": 1.68666612E12, "maxY": 15719.0, "series": [{"data": [[1.68666894E12, 8995.0], [1.68666792E12, 6082.0], [1.68666732E12, 4932.0], [1.68666954E12, 9753.0], [1.6866669E12, 3383.0], [1.68666852E12, 6699.0], [1.68667014E12, 13255.0], [1.6866663E12, 1840.0], [1.68667074E12, 6373.0], [1.68666912E12, 10753.0], [1.68666876E12, 8988.0], [1.68667038E12, 3507.0], [1.68666714E12, 4420.0], [1.68666654E12, 1156.0], [1.68666936E12, 10207.0], [1.68666996E12, 10909.0], [1.68666672E12, 2371.0], [1.68666774E12, 5942.0], [1.68666612E12, 1192.0], [1.68666834E12, 6884.0], [1.68667056E12, 6772.0], [1.68666666E12, 2221.0], [1.68666828E12, 6956.0], [1.6866699E12, 11453.0], [1.68666888E12, 10561.0], [1.6866705E12, 8400.0], [1.68666786E12, 5969.0], [1.68666948E12, 8792.0], [1.68666624E12, 2068.0], [1.68666726E12, 5237.0], [1.68667008E12, 11615.0], [1.68666972E12, 14148.0], [1.68666648E12, 1222.0], [1.6866675E12, 5326.0], [1.6866681E12, 6776.0], [1.68667032E12, 9080.0], [1.6866687E12, 8660.0], [1.68666768E12, 6213.0], [1.68666708E12, 4233.0], [1.6866693E12, 9980.0], [1.68666762E12, 5803.0], [1.68666924E12, 12236.0], [1.68666702E12, 4009.0], [1.68666984E12, 13708.0], [1.68666822E12, 7386.0], [1.68667044E12, 8437.0], [1.6866672E12, 4444.0], [1.6866666E12, 1543.0], [1.68666882E12, 8887.0], [1.68666846E12, 8412.0], [1.68667068E12, 6188.0], [1.68666744E12, 4881.0], [1.68666684E12, 3304.0], [1.68666906E12, 10986.0], [1.68666642E12, 1116.0], [1.68666966E12, 11458.0], [1.68666864E12, 7564.0], [1.68667026E12, 11068.0], [1.68666804E12, 5409.0], [1.68666696E12, 3511.0], [1.6866702E12, 11836.0], [1.68666798E12, 5864.0], [1.68666636E12, 343.0], [1.68666858E12, 7690.0], [1.6866708E12, 4040.0], [1.68666918E12, 15636.0], [1.68666816E12, 6912.0], [1.68666756E12, 4705.0], [1.68666978E12, 15719.0], [1.68666618E12, 1297.0], [1.68666942E12, 9493.0], [1.6866684E12, 6843.0], [1.6866678E12, 5812.0], [1.68667002E12, 10404.0], [1.686669E12, 9566.0], [1.68667062E12, 7255.0], [1.68666738E12, 4628.0], [1.68666678E12, 2782.0], [1.6866696E12, 10306.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.68666894E12, 6865.500000000001], [1.68666792E12, 4764.2], [1.68666732E12, 3483.0], [1.68666954E12, 7307.5], [1.6866669E12, 2416.4000000000005], [1.68666852E12, 5225.6], [1.68667014E12, 9821.5], [1.6866663E12, 693.0], [1.68667074E12, 4975.0], [1.68666912E12, 7635.7], [1.68666876E12, 6516.0], [1.68667038E12, 2582.6], [1.68666714E12, 3202.0], [1.68666654E12, 662.0], [1.68666936E12, 7000.800000000001], [1.68666996E12, 8463.8], [1.68666672E12, 1841.1999999999998], [1.68666774E12, 4478.1], [1.68666612E12, 1026.0], [1.68666834E12, 5253.4], [1.68667056E12, 5020.0], [1.68666666E12, 1554.0], [1.68666828E12, 5249.3], [1.6866699E12, 8223.0], [1.68666888E12, 6461.0], [1.6866705E12, 6334.5], [1.68666786E12, 4288.800000000001], [1.68666948E12, 6775.0], [1.68666624E12, 1841.0], [1.68666726E12, 3053.0], [1.68667008E12, 9190.699999999999], [1.68666972E12, 9150.0], [1.68666648E12, 872.0], [1.6866675E12, 3772.8999999999996], [1.6866681E12, 4816.0], [1.68667032E12, 6101.700000000001], [1.6866687E12, 5909.4], [1.68666768E12, 4217.6], [1.68666708E12, 2974.2], [1.6866693E12, 6391.8], [1.68666762E12, 4209.0], [1.68666924E12, 7206.8], [1.68666702E12, 3014.0], [1.68666984E12, 10362.000000000002], [1.68666822E12, 5595.8], [1.68667044E12, 6142.0], [1.6866672E12, 3255.4], [1.6866666E12, 751.0], [1.68666882E12, 5842.8], [1.68666846E12, 5652.0], [1.68667068E12, 5135.0], [1.68666744E12, 3466.4000000000005], [1.68666684E12, 2370.8], [1.68666906E12, 8047.2], [1.68666642E12, 682.3000000000002], [1.68666966E12, 7228.0], [1.68666864E12, 5274.4], [1.68667026E12, 8425.0], [1.68666804E12, 4340.0], [1.68666696E12, 2613.2], [1.6866702E12, 8665.8], [1.68666798E12, 4492.0], [1.68666636E12, 211.0], [1.68666858E12, 5368.200000000001], [1.6866708E12, 3240.3999999999996], [1.68666918E12, 9688.400000000001], [1.68666816E12, 4684.0], [1.68666756E12, 3591.0], [1.68666978E12, 10623.300000000003], [1.68666618E12, 1200.0], [1.68666942E12, 6324.0], [1.6866684E12, 5084.8], [1.6866678E12, 4290.4], [1.68667002E12, 8272.0], [1.686669E12, 7698.1], [1.68667062E12, 4965.900000000001], [1.68666738E12, 3439.6], [1.68666678E12, 2053.7000000000003], [1.6866696E12, 7883.8]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.68666894E12, 8163.54], [1.68666792E12, 5643.359999999997], [1.68666732E12, 4118.889999999999], [1.68666954E12, 8592.0], [1.6866669E12, 2840.169999999998], [1.68666852E12, 6124.480000000002], [1.68667014E12, 12062.25], [1.6866663E12, 1605.659999999998], [1.68667074E12, 5595.57], [1.68666912E12, 9743.320000000002], [1.68666876E12, 7912.799999999981], [1.68667038E12, 3177.989999999999], [1.68666714E12, 3920.2000000000007], [1.68666654E12, 815.0], [1.68666936E12, 8462.839999999998], [1.68666996E12, 10320.840000000002], [1.68666672E12, 2148.5499999999993], [1.68666774E12, 5336.1], [1.68666612E12, 1117.0000000000005], [1.68666834E12, 6454.880000000003], [1.68667056E12, 6307.800000000001], [1.68666666E12, 1875.7600000000002], [1.68666828E12, 6309.710000000001], [1.6866699E12, 9639.479999999996], [1.68666888E12, 8237.599999999991], [1.6866705E12, 7741.350000000003], [1.68666786E12, 5124.459999999999], [1.68666948E12, 7842.0], [1.68666624E12, 2013.4000000000005], [1.68666726E12, 3775.700000000002], [1.68667008E12, 10399.15], [1.68666972E12, 12006.500000000013], [1.68666648E12, 1021.4099999999999], [1.6866675E12, 4553.68], [1.6866681E12, 5675.799999999999], [1.68667032E12, 8451.329999999989], [1.6866687E12, 7367.189999999996], [1.68666768E12, 4967.900000000001], [1.68666708E12, 3576.76], [1.6866693E12, 8114.32000000001], [1.68666762E12, 5048.9400000000005], [1.68666924E12, 9344.040000000005], [1.68666702E12, 3574.4900000000007], [1.68666984E12, 13035.159999999998], [1.68666822E12, 6726.16], [1.68667044E12, 7986.799999999998], [1.6866672E12, 3756.1200000000013], [1.6866666E12, 1052.3500000000022], [1.68666882E12, 7049.5199999999995], [1.68666846E12, 7437.399999999996], [1.68667068E12, 5756.799999999999], [1.68666744E12, 4239.36], [1.68666684E12, 2846.560000000004], [1.68666906E12, 9531.87], [1.68666642E12, 843.5299999999997], [1.68666966E12, 9594.0], [1.68666864E12, 6305.769999999997], [1.68667026E12, 9869.650000000001], [1.68666804E12, 5093.5], [1.68666696E12, 3022.42], [1.6866702E12, 10315.16], [1.68666798E12, 5147.68], [1.68666636E12, 289.0], [1.68666858E12, 6667.559999999999], [1.6866708E12, 3752.4800000000005], [1.68666918E12, 12744.360000000006], [1.68666816E12, 5449.799999999999], [1.68666756E12, 4176.0], [1.68666978E12, 13151.80000000001], [1.68666618E12, 1256.0], [1.68666942E12, 8329.31], [1.6866684E12, 5938.25], [1.6866678E12, 5141.99], [1.68667002E12, 9359.0], [1.686669E12, 8938.159999999998], [1.68667062E12, 6042.210000000005], [1.68666738E12, 4038.9300000000003], [1.68666678E12, 2431.57], [1.6866696E12, 9359.319999999996]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.68666894E12, 7314.65], [1.68666792E12, 5078.399999999999], [1.68666732E12, 3661.8999999999996], [1.68666954E12, 7794.25], [1.6866669E12, 2537.0], [1.68666852E12, 5533.2], [1.68667014E12, 10363.0], [1.6866663E12, 1186.6500000000005], [1.68667074E12, 5223.7], [1.68666912E12, 8448.0], [1.68666876E12, 7006.0], [1.68667038E12, 2783.4499999999985], [1.68666714E12, 3459.5], [1.68666654E12, 717.0], [1.68666936E12, 7416.0], [1.68666996E12, 8881.400000000001], [1.68666672E12, 1930.5499999999997], [1.68666774E12, 4742.2], [1.68666612E12, 1052.0], [1.68666834E12, 5928.399999999995], [1.68667056E12, 5508.0], [1.68666666E12, 1671.0], [1.68666828E12, 5595.549999999999], [1.6866699E12, 8724.599999999999], [1.68666888E12, 7007.0], [1.6866705E12, 6807.75], [1.68666786E12, 4562.299999999999], [1.68666948E12, 7184.0], [1.68666624E12, 1904.0], [1.68666726E12, 3290.75], [1.68667008E12, 9672.9], [1.68666972E12, 9841.5], [1.68666648E12, 923.0], [1.6866675E12, 4041.95], [1.6866681E12, 5111.8], [1.68667032E12, 6995.999999999996], [1.6866687E12, 6262.799999999999], [1.68666768E12, 4497.299999999999], [1.68666708E12, 3177.5999999999995], [1.6866693E12, 6926.0], [1.68666762E12, 4464.099999999999], [1.68666924E12, 7884.799999999999], [1.68666702E12, 3179.0], [1.68666984E12, 11712.0], [1.68666822E12, 5939.299999999997], [1.68667044E12, 6962.0], [1.6866672E12, 3450.3999999999996], [1.6866666E12, 839.4499999999998], [1.68666882E12, 6247.0], [1.68666846E12, 6093.0], [1.68667068E12, 5318.599999999999], [1.68666744E12, 3752.9999999999986], [1.68666684E12, 2541.0], [1.68666906E12, 8587.65], [1.68666642E12, 742.0], [1.68666966E12, 7631.25], [1.68666864E12, 5624.199999999999], [1.68667026E12, 8857.0], [1.68666804E12, 4615.5], [1.68666696E12, 2740.0999999999995], [1.6866702E12, 9202.95], [1.68666798E12, 4685.0], [1.68666636E12, 234.0], [1.68666858E12, 5795.199999999999], [1.6866708E12, 3569.1], [1.68666918E12, 10566.85], [1.68666816E12, 5029.5], [1.68666756E12, 3784.5], [1.68666978E12, 11382.3], [1.68666618E12, 1222.8999999999999], [1.68666942E12, 6977.4], [1.6866684E12, 5394.150000000001], [1.6866678E12, 4562.799999999999], [1.68667002E12, 8553.0], [1.686669E12, 8054.999999999999], [1.68667062E12, 5328.849999999999], [1.68666738E12, 3646.2999999999997], [1.68666678E12, 2175.85], [1.6866696E12, 8434.199999999997]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.68666894E12, 2975.0], [1.68666792E12, 1935.0], [1.68666732E12, 1285.0], [1.68666954E12, 2808.0], [1.6866669E12, 979.0], [1.68666852E12, 2071.0], [1.68667014E12, 4597.0], [1.6866663E12, 74.0], [1.68667074E12, 907.0], [1.68666912E12, 2755.0], [1.68666876E12, 2656.0], [1.68667038E12, 422.0], [1.68666714E12, 1257.0], [1.68666654E12, 91.0], [1.68666936E12, 2922.0], [1.68666996E12, 3461.0], [1.68666672E12, 765.0], [1.68666774E12, 1387.0], [1.68666612E12, 578.0], [1.68666834E12, 1905.0], [1.68667056E12, 890.0], [1.68666666E12, 449.0], [1.68666828E12, 1999.0], [1.6866699E12, 3523.0], [1.68666888E12, 1688.0], [1.6866705E12, 2466.0], [1.68666786E12, 1480.0], [1.68666948E12, 2062.0], [1.68666624E12, 347.0], [1.68666726E12, 1230.0], [1.68667008E12, 3604.0], [1.68666972E12, 3424.0], [1.68666648E12, 246.0], [1.6866675E12, 1494.0], [1.6866681E12, 2142.0], [1.68667032E12, 1813.0], [1.6866687E12, 2516.0], [1.68666768E12, 1850.0], [1.68666708E12, 1238.0], [1.6866693E12, 2700.0], [1.68666762E12, 1865.0], [1.68666924E12, 2598.0], [1.68666702E12, 1131.0], [1.68666984E12, 3358.0], [1.68666822E12, 1770.0], [1.68667044E12, 1395.0], [1.6866672E12, 1380.0], [1.6866666E12, 91.0], [1.68666882E12, 2443.0], [1.68666846E12, 2340.0], [1.68667068E12, 2391.0], [1.68666744E12, 1451.0], [1.68666684E12, 1027.0], [1.68666906E12, 2937.0], [1.68666642E12, 79.0], [1.68666966E12, 2447.0], [1.68666864E12, 2483.0], [1.68667026E12, 2296.0], [1.68666804E12, 1800.0], [1.68666696E12, 1100.0], [1.6866702E12, 3719.0], [1.68666798E12, 1488.0], [1.68666636E12, 40.0], [1.68666858E12, 1997.0], [1.6866708E12, 890.0], [1.68666918E12, 3072.0], [1.68666816E12, 1656.0], [1.68666756E12, 1299.0], [1.68666978E12, 3010.0], [1.68666618E12, 299.0], [1.68666942E12, 2788.0], [1.6866684E12, 2200.0], [1.6866678E12, 1862.0], [1.68667002E12, 3943.0], [1.686669E12, 3804.0], [1.68667062E12, 1378.0], [1.68666738E12, 1453.0], [1.68666678E12, 848.0], [1.6866696E12, 3056.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.68666894E12, 5450.5], [1.68666792E12, 3892.0], [1.68666732E12, 2808.5], [1.68666954E12, 5826.5], [1.6866669E12, 1993.0], [1.68666852E12, 4154.0], [1.68667014E12, 7869.0], [1.6866663E12, 216.0], [1.68667074E12, 2767.5], [1.68666912E12, 5555.0], [1.68666876E12, 4956.0], [1.68667038E12, 1137.5], [1.68666714E12, 2499.0], [1.68666654E12, 439.5], [1.68666936E12, 5687.0], [1.68666996E12, 7029.0], [1.68666672E12, 1509.0], [1.68666774E12, 3619.5], [1.68666612E12, 951.0], [1.68666834E12, 3988.0], [1.68667056E12, 3347.0], [1.68666666E12, 1148.0], [1.68666828E12, 4226.5], [1.6866699E12, 6613.0], [1.68666888E12, 4862.0], [1.6866705E12, 4928.5], [1.68666786E12, 3321.0], [1.68666948E12, 5419.0], [1.68666624E12, 1087.0], [1.68666726E12, 2402.0], [1.68667008E12, 6952.0], [1.68666972E12, 6337.5], [1.68666648E12, 707.0], [1.6866675E12, 3028.0], [1.6866681E12, 3879.0], [1.68667032E12, 4468.0], [1.6866687E12, 4666.0], [1.68666768E12, 3344.5], [1.68666708E12, 2351.0], [1.6866693E12, 5093.0], [1.68666762E12, 3420.5], [1.68666924E12, 5308.0], [1.68666702E12, 2366.0], [1.68666984E12, 7334.0], [1.68666822E12, 4278.0], [1.68667044E12, 4241.5], [1.6866672E12, 2627.0], [1.6866666E12, 375.0], [1.68666882E12, 4499.0], [1.68666846E12, 4326.0], [1.68667068E12, 4411.0], [1.68666744E12, 2793.0], [1.68666684E12, 1877.0], [1.68666906E12, 6378.0], [1.68666642E12, 422.0], [1.68666966E12, 5764.5], [1.68666864E12, 4191.5], [1.68667026E12, 6661.0], [1.68666804E12, 3559.0], [1.68666696E12, 2127.0], [1.6866702E12, 6623.5], [1.68666798E12, 3644.5], [1.68666636E12, 139.0], [1.68666858E12, 4179.0], [1.6866708E12, 2155.0], [1.68666918E12, 6254.5], [1.68666816E12, 3751.0], [1.68666756E12, 2927.0], [1.68666978E12, 7283.0], [1.68666618E12, 1110.0], [1.68666942E12, 4990.0], [1.6866684E12, 4097.0], [1.6866678E12, 3434.5], [1.68667002E12, 6929.0], [1.686669E12, 6444.5], [1.68667062E12, 3630.5], [1.68666738E12, 2771.5], [1.68666678E12, 1669.0], [1.6866696E12, 6376.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6866708E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 32.0, "minX": 1.0, "maxY": 6083.0, "series": [{"data": [[2.0, 3295.5], [3.0, 2904.0], [4.0, 3013.5], [5.0, 4327.0], [6.0, 5644.5], [7.0, 5124.0], [8.0, 4942.0], [9.0, 5251.5], [10.0, 5456.0], [11.0, 5782.5], [12.0, 5333.0], [13.0, 5155.0], [14.0, 5390.0], [15.0, 5297.0], [16.0, 5220.0], [17.0, 5324.0], [18.0, 5315.0], [19.0, 4744.5], [20.0, 5010.0], [21.0, 4807.0], [22.0, 4833.0], [23.0, 4790.5], [24.0, 4755.5], [25.0, 3853.0], [26.0, 4292.0], [27.0, 4287.5], [28.0, 4429.0], [29.0, 4070.5], [30.0, 4061.0], [31.0, 4043.0], [33.0, 3665.5], [32.0, 3740.0], [35.0, 3480.0], [34.0, 3732.5], [37.0, 3577.0], [36.0, 3442.0], [39.0, 3373.0], [38.0, 3362.0], [40.0, 3100.0], [41.0, 3272.0], [43.0, 2863.0], [42.0, 3121.0], [45.0, 3020.0], [44.0, 3045.0], [46.0, 2640.5], [47.0, 2748.0], [48.0, 2583.5], [49.0, 2577.0], [50.0, 2706.0], [51.0, 2530.0], [53.0, 2448.0], [52.0, 2632.0], [54.0, 2424.0], [55.0, 2330.0], [57.0, 2263.0], [56.0, 2339.0], [58.0, 1999.0], [59.0, 2176.0], [61.0, 2210.5], [60.0, 2181.5], [63.0, 1928.5], [62.0, 2263.5], [66.0, 1955.0], [65.0, 1996.5], [67.0, 1799.0], [64.0, 2030.0], [68.0, 1961.5], [71.0, 1792.0], [69.0, 1646.0], [70.0, 1654.5], [72.0, 1981.0], [74.0, 1391.0], [73.0, 1552.5], [75.0, 1530.0], [77.0, 755.0], [79.0, 1488.5], [76.0, 1580.0], [78.0, 1203.5], [83.0, 898.0], [81.0, 1159.0], [80.0, 1677.5], [82.0, 1594.0], [86.0, 1532.5], [84.0, 1498.5], [85.0, 1424.0], [87.0, 1149.0], [89.0, 1214.0], [88.0, 462.0], [90.0, 1342.0], [91.0, 1430.5], [93.0, 597.0], [95.0, 306.0], [94.0, 387.0], [92.0, 1375.0], [97.0, 92.0], [96.0, 907.0], [99.0, 1332.5], [98.0, 1311.5], [103.0, 655.0], [102.0, 1129.0], [100.0, 1240.0], [101.0, 1428.0], [107.0, 486.5], [104.0, 785.0], [106.0, 633.5], [105.0, 516.5], [111.0, 274.0], [110.0, 962.0], [109.0, 476.0], [108.0, 492.0], [115.0, 143.5], [114.0, 608.5], [112.0, 519.0], [113.0, 1552.0], [118.0, 690.0], [117.0, 467.0], [116.0, 672.0], [119.0, 490.0], [122.0, 760.0], [123.0, 756.0], [121.0, 635.5], [120.0, 552.0], [125.0, 653.5], [124.0, 526.0], [127.0, 624.5], [132.0, 598.5], [128.0, 502.0], [129.0, 596.0], [134.0, 572.5], [133.0, 670.0], [135.0, 669.0], [131.0, 697.0], [130.0, 736.0], [138.0, 132.5], [143.0, 619.0], [139.0, 466.0], [136.0, 527.0], [140.0, 644.0], [141.0, 621.0], [137.0, 701.0], [148.0, 528.0], [151.0, 365.0], [145.0, 656.5], [147.0, 654.0], [144.0, 476.0], [149.0, 652.0], [146.0, 745.5], [150.0, 527.0], [159.0, 131.0], [152.0, 162.0], [157.0, 512.0], [155.0, 584.0], [158.0, 675.0], [154.0, 367.0], [164.0, 229.0], [167.0, 274.0], [162.0, 522.0], [166.0, 329.0], [165.0, 336.5], [160.0, 467.0], [161.0, 687.5], [168.0, 166.0], [170.0, 254.0], [173.0, 141.5], [172.0, 184.0], [174.0, 235.0], [175.0, 318.0], [171.0, 530.5], [179.0, 138.0], [177.0, 183.0], [178.0, 278.0], [176.0, 212.5], [183.0, 345.0], [190.0, 127.0], [185.0, 97.0], [184.0, 173.0], [195.0, 126.5], [197.0, 104.0], [205.0, 180.0], [203.0, 171.0], [204.0, 165.0], [212.0, 162.5], [214.0, 143.0], [209.0, 297.0], [221.0, 167.0], [217.0, 124.5], [227.0, 184.0], [225.0, 135.0], [247.0, 182.0], [241.0, 144.0], [254.0, 217.5], [250.0, 235.0], [251.0, 201.0], [248.0, 150.5], [249.0, 127.0], [252.0, 97.0], [261.0, 258.0], [263.0, 234.5], [270.0, 208.0], [268.0, 189.0], [257.0, 173.0], [286.0, 221.0], [273.0, 225.0], [276.0, 216.0], [281.0, 202.0], [278.0, 177.0], [291.0, 223.0], [307.0, 206.0], [310.0, 161.0], [326.0, 204.0], [323.0, 217.0], [320.0, 208.0], [328.0, 210.0], [336.0, 196.0], [343.0, 205.0], [367.0, 184.0], [362.0, 186.5], [359.0, 191.0], [416.0, 179.0], [1.0, 1216.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 6083.0], [3.0, 2292.5], [4.0, 2170.0], [5.0, 2914.0], [6.0, 3074.0], [7.0, 2931.0], [8.0, 2529.0], [9.0, 2912.0], [10.0, 3038.0], [11.0, 3464.0], [12.0, 2799.0], [13.0, 3015.5], [14.0, 2945.0], [15.0, 2766.5], [16.0, 3131.0], [17.0, 2838.0], [18.0, 2738.0], [19.0, 2727.0], [20.0, 2649.0], [21.0, 2502.0], [22.0, 2360.0], [23.0, 2553.0], [24.0, 2457.0], [25.0, 1864.0], [26.0, 2012.0], [27.0, 2107.5], [28.0, 1857.5], [29.0, 1864.5], [30.0, 1773.0], [31.0, 1721.0], [33.0, 1593.0], [32.0, 1538.5], [35.0, 1400.0], [34.0, 1579.0], [36.0, 1438.0], [37.0, 1577.0], [39.0, 1584.0], [38.0, 1465.0], [40.0, 1285.0], [41.0, 1243.5], [43.0, 1159.0], [42.0, 1564.0], [45.0, 1144.0], [44.0, 1206.0], [46.0, 1179.0], [47.0, 1125.0], [48.0, 1043.5], [49.0, 1030.0], [50.0, 953.0], [51.0, 1029.0], [53.0, 1030.0], [52.0, 1039.0], [54.0, 978.5], [55.0, 875.0], [57.0, 1007.0], [56.0, 872.0], [58.0, 883.0], [59.0, 874.5], [61.0, 875.0], [60.0, 831.0], [63.0, 757.0], [62.0, 853.5], [66.0, 739.0], [65.0, 672.5], [67.0, 635.0], [64.0, 805.0], [68.0, 673.0], [71.0, 660.0], [69.0, 565.0], [70.0, 778.0], [72.0, 748.0], [74.0, 522.0], [73.0, 568.5], [75.0, 561.5], [77.0, 521.0], [79.0, 556.0], [76.0, 539.0], [78.0, 462.5], [83.0, 433.0], [81.0, 426.0], [80.0, 629.0], [82.0, 573.0], [86.0, 559.0], [84.0, 496.0], [85.0, 503.0], [87.0, 380.5], [89.0, 434.0], [88.0, 233.5], [90.0, 473.5], [91.0, 433.0], [93.0, 319.0], [95.0, 134.0], [94.0, 274.0], [92.0, 420.5], [97.0, 376.0], [96.0, 294.0], [99.0, 389.0], [98.0, 417.5], [103.0, 209.5], [102.0, 364.0], [100.0, 402.0], [101.0, 471.0], [107.0, 167.0], [104.0, 290.5], [106.0, 223.0], [105.0, 199.0], [111.0, 146.0], [110.0, 360.0], [109.0, 202.0], [108.0, 173.0], [115.0, 72.0], [114.0, 272.0], [112.0, 174.0], [113.0, 464.5], [118.0, 280.0], [117.0, 134.0], [116.0, 230.0], [119.0, 176.0], [122.0, 307.0], [123.0, 266.5], [121.0, 216.5], [120.0, 199.0], [125.0, 301.0], [124.0, 136.0], [127.0, 211.0], [132.0, 169.5], [128.0, 201.0], [129.0, 247.0], [134.0, 243.0], [133.0, 251.5], [135.0, 245.0], [131.0, 304.0], [130.0, 249.0], [138.0, 166.5], [143.0, 219.0], [139.0, 176.0], [136.0, 190.0], [140.0, 227.0], [141.0, 214.0], [137.0, 256.0], [148.0, 184.0], [151.0, 134.0], [145.0, 223.0], [147.0, 230.0], [144.0, 111.5], [149.0, 233.0], [146.0, 264.0], [150.0, 175.0], [159.0, 61.0], [152.0, 57.0], [157.0, 187.0], [155.0, 210.0], [158.0, 211.0], [154.0, 105.0], [164.0, 82.0], [167.0, 157.0], [162.0, 172.0], [166.0, 156.0], [165.0, 104.0], [160.0, 186.0], [161.0, 194.0], [168.0, 81.0], [170.0, 87.0], [173.0, 66.0], [172.0, 59.0], [174.0, 94.0], [175.0, 117.0], [171.0, 145.5], [179.0, 55.0], [177.0, 108.0], [178.0, 111.0], [176.0, 72.0], [183.0, 97.5], [190.0, 68.0], [185.0, 42.5], [184.0, 65.0], [195.0, 49.0], [197.0, 69.0], [205.0, 80.0], [203.0, 55.5], [204.0, 57.0], [212.0, 76.5], [214.0, 55.0], [209.0, 114.5], [221.0, 63.0], [217.0, 45.0], [227.0, 67.0], [225.0, 50.0], [247.0, 69.0], [241.0, 57.5], [254.0, 90.0], [250.0, 82.0], [251.0, 77.0], [248.0, 51.5], [249.0, 48.0], [252.0, 32.0], [261.0, 107.0], [263.0, 104.0], [270.0, 79.0], [268.0, 73.5], [257.0, 60.0], [286.0, 79.0], [273.0, 75.5], [276.0, 76.0], [281.0, 73.0], [278.0, 66.0], [291.0, 80.0], [307.0, 74.0], [310.0, 60.5], [326.0, 75.0], [323.0, 75.0], [320.0, 76.0], [328.0, 78.0], [336.0, 77.5], [343.0, 71.0], [367.0, 70.0], [362.0, 73.5], [359.0, 69.0], [416.0, 65.0], [1.0, 321.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 416.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 6083.0, "series": [{"data": [[2.0, 3295.5], [3.0, 2904.0], [4.0, 3013.5], [5.0, 4327.0], [6.0, 5644.5], [7.0, 5124.0], [8.0, 4942.0], [9.0, 5251.5], [10.0, 5456.0], [11.0, 5782.5], [12.0, 5333.0], [13.0, 5155.0], [14.0, 5390.0], [15.0, 5297.0], [16.0, 5220.0], [17.0, 5324.0], [18.0, 5315.0], [19.0, 4744.5], [20.0, 5010.0], [21.0, 4807.0], [22.0, 4833.0], [23.0, 4790.5], [24.0, 4755.5], [25.0, 3853.0], [26.0, 4292.0], [27.0, 4287.5], [28.0, 4429.0], [29.0, 4070.5], [30.0, 4061.0], [31.0, 4043.0], [33.0, 3665.5], [32.0, 3740.0], [35.0, 3480.0], [34.0, 3732.5], [37.0, 3577.0], [36.0, 3442.0], [39.0, 3373.0], [38.0, 3362.0], [40.0, 3100.0], [41.0, 3272.0], [43.0, 2863.0], [42.0, 3121.0], [45.0, 3020.0], [44.0, 3045.0], [46.0, 2640.5], [47.0, 2748.0], [48.0, 2583.5], [49.0, 2577.0], [50.0, 2706.0], [51.0, 2530.0], [53.0, 2448.0], [52.0, 2632.0], [54.0, 2424.0], [55.0, 2330.0], [57.0, 2263.0], [56.0, 2339.0], [58.0, 1999.0], [59.0, 2176.0], [61.0, 2210.5], [60.0, 2181.5], [63.0, 1928.5], [62.0, 2263.5], [66.0, 1955.0], [65.0, 1996.5], [67.0, 1799.0], [64.0, 2030.0], [68.0, 1961.5], [71.0, 1792.0], [69.0, 1646.0], [70.0, 1654.5], [72.0, 1981.0], [74.0, 1391.0], [73.0, 1552.5], [75.0, 1530.0], [77.0, 755.0], [79.0, 1488.5], [76.0, 1580.0], [78.0, 1203.5], [83.0, 898.0], [81.0, 1159.0], [80.0, 1677.5], [82.0, 1594.0], [86.0, 1532.0], [84.0, 1498.5], [85.0, 1424.0], [87.0, 1149.0], [89.0, 1214.0], [88.0, 462.0], [90.0, 1342.0], [91.0, 1430.5], [93.0, 597.0], [95.0, 306.0], [94.0, 387.0], [92.0, 1375.0], [97.0, 92.0], [96.0, 907.0], [99.0, 1332.5], [98.0, 1311.5], [103.0, 655.0], [102.0, 1129.0], [100.0, 1240.0], [101.0, 1428.0], [107.0, 486.5], [104.0, 785.0], [106.0, 633.5], [105.0, 516.5], [111.0, 274.0], [110.0, 962.0], [109.0, 476.0], [108.0, 492.0], [115.0, 143.5], [114.0, 608.5], [112.0, 519.0], [113.0, 1552.0], [118.0, 690.0], [117.0, 467.0], [116.0, 672.0], [119.0, 490.0], [122.0, 760.0], [123.0, 756.0], [121.0, 635.5], [120.0, 552.0], [125.0, 653.5], [124.0, 526.0], [127.0, 624.5], [132.0, 598.5], [128.0, 502.0], [129.0, 596.0], [134.0, 572.5], [133.0, 670.0], [135.0, 669.0], [131.0, 697.0], [130.0, 736.0], [138.0, 132.5], [143.0, 619.0], [139.0, 466.0], [136.0, 527.0], [140.0, 644.0], [141.0, 621.0], [137.0, 701.0], [148.0, 528.0], [151.0, 365.0], [145.0, 656.5], [147.0, 654.0], [144.0, 476.0], [149.0, 651.5], [146.0, 745.5], [150.0, 527.0], [159.0, 131.0], [152.0, 162.0], [157.0, 512.0], [155.0, 584.0], [158.0, 675.0], [154.0, 367.0], [164.0, 229.0], [167.0, 274.0], [162.0, 522.0], [166.0, 329.0], [165.0, 336.5], [160.0, 467.0], [161.0, 687.5], [168.0, 165.0], [170.0, 254.0], [173.0, 141.5], [172.0, 184.0], [174.0, 235.0], [175.0, 318.0], [171.0, 530.5], [179.0, 138.0], [177.0, 183.0], [178.0, 278.0], [176.0, 212.5], [183.0, 345.0], [190.0, 127.0], [185.0, 97.0], [184.0, 173.0], [195.0, 126.5], [197.0, 104.0], [205.0, 180.0], [203.0, 171.0], [204.0, 165.0], [212.0, 162.5], [214.0, 143.0], [209.0, 297.0], [221.0, 167.0], [217.0, 124.5], [227.0, 184.0], [225.0, 135.0], [247.0, 182.0], [241.0, 144.0], [254.0, 217.5], [250.0, 235.0], [251.0, 201.0], [248.0, 150.5], [249.0, 127.0], [252.0, 97.0], [261.0, 258.0], [263.0, 234.5], [270.0, 208.0], [268.0, 189.0], [257.0, 173.0], [286.0, 221.0], [273.0, 225.0], [276.0, 216.0], [281.0, 202.0], [278.0, 177.0], [291.0, 223.0], [307.0, 206.0], [310.0, 161.0], [326.0, 204.0], [323.0, 217.0], [320.0, 208.0], [328.0, 210.0], [336.0, 196.0], [343.0, 205.0], [367.0, 184.0], [362.0, 186.5], [359.0, 191.0], [416.0, 179.0], [1.0, 1216.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 6083.0], [3.0, 2292.5], [4.0, 1294.0], [5.0, 2914.0], [6.0, 3074.0], [7.0, 2761.0], [8.0, 2529.0], [9.0, 2912.0], [10.0, 2936.5], [11.0, 3463.5], [12.0, 2799.0], [13.0, 2875.5], [14.0, 2945.0], [15.0, 2766.5], [16.0, 3131.0], [17.0, 2838.0], [18.0, 2738.0], [19.0, 2727.0], [20.0, 2649.0], [21.0, 2502.0], [22.0, 2360.0], [23.0, 2553.0], [24.0, 2457.0], [25.0, 1864.0], [26.0, 2012.0], [27.0, 2107.5], [28.0, 1857.5], [29.0, 1864.5], [30.0, 1773.0], [31.0, 1721.0], [33.0, 1593.0], [32.0, 1538.5], [35.0, 1400.0], [34.0, 1579.0], [36.0, 1438.0], [37.0, 1577.0], [39.0, 1584.0], [38.0, 1465.0], [40.0, 1285.0], [41.0, 1243.0], [43.0, 1159.0], [42.0, 1564.0], [45.0, 1144.0], [44.0, 1206.0], [46.0, 1179.0], [47.0, 1125.0], [48.0, 1043.5], [49.0, 1030.0], [50.0, 953.0], [51.0, 1029.0], [53.0, 1030.0], [52.0, 1039.0], [54.0, 978.0], [55.0, 875.0], [57.0, 1007.0], [56.0, 872.0], [58.0, 883.0], [59.0, 874.5], [61.0, 874.5], [60.0, 831.0], [63.0, 757.0], [62.0, 853.5], [66.0, 739.0], [65.0, 672.5], [67.0, 635.0], [64.0, 805.0], [68.0, 673.0], [71.0, 660.0], [69.0, 565.0], [70.0, 778.0], [72.0, 748.0], [74.0, 522.0], [73.0, 568.5], [75.0, 561.5], [77.0, 521.0], [79.0, 556.0], [76.0, 539.0], [78.0, 462.5], [83.0, 433.0], [81.0, 426.0], [80.0, 629.0], [82.0, 573.0], [86.0, 559.0], [84.0, 496.0], [85.0, 503.0], [87.0, 380.5], [89.0, 434.0], [88.0, 233.5], [90.0, 473.5], [91.0, 433.0], [93.0, 319.0], [95.0, 134.0], [94.0, 274.0], [92.0, 420.5], [97.0, 376.0], [96.0, 294.0], [99.0, 389.0], [98.0, 417.5], [103.0, 209.5], [102.0, 364.0], [100.0, 402.0], [101.0, 471.0], [107.0, 167.0], [104.0, 290.5], [106.0, 223.0], [105.0, 199.0], [111.0, 146.0], [110.0, 360.0], [109.0, 202.0], [108.0, 173.0], [115.0, 72.0], [114.0, 272.0], [112.0, 174.0], [113.0, 464.5], [118.0, 280.0], [117.0, 134.0], [116.0, 230.0], [119.0, 176.0], [122.0, 307.0], [123.0, 266.5], [121.0, 216.5], [120.0, 199.0], [125.0, 301.0], [124.0, 136.0], [127.0, 211.0], [132.0, 169.5], [128.0, 201.0], [129.0, 247.0], [134.0, 243.0], [133.0, 251.5], [135.0, 245.0], [131.0, 304.0], [130.0, 249.0], [138.0, 166.5], [143.0, 219.0], [139.0, 176.0], [136.0, 190.0], [140.0, 227.0], [141.0, 214.0], [137.0, 256.0], [148.0, 184.0], [151.0, 134.0], [145.0, 223.0], [147.0, 230.0], [144.0, 111.5], [149.0, 233.0], [146.0, 264.0], [150.0, 175.0], [159.0, 61.0], [152.0, 57.0], [157.0, 187.0], [155.0, 210.0], [158.0, 211.0], [154.0, 105.0], [164.0, 82.0], [167.0, 157.0], [162.0, 172.0], [166.0, 156.0], [165.0, 104.0], [160.0, 186.0], [161.0, 194.0], [168.0, 81.0], [170.0, 87.0], [173.0, 66.0], [172.0, 59.0], [174.0, 94.0], [175.0, 116.0], [171.0, 145.5], [179.0, 54.5], [177.0, 108.0], [178.0, 111.0], [176.0, 72.0], [183.0, 97.5], [190.0, 68.0], [185.0, 42.5], [184.0, 65.0], [195.0, 49.0], [197.0, 69.0], [205.0, 80.0], [203.0, 55.5], [204.0, 57.0], [212.0, 76.5], [214.0, 55.0], [209.0, 114.5], [221.0, 63.0], [217.0, 45.0], [227.0, 67.0], [225.0, 50.0], [247.0, 69.0], [241.0, 57.5], [254.0, 90.0], [250.0, 82.0], [251.0, 77.0], [248.0, 51.5], [249.0, 47.0], [252.0, 32.0], [261.0, 107.0], [263.0, 104.0], [270.0, 79.0], [268.0, 73.5], [257.0, 59.5], [286.0, 79.0], [273.0, 75.5], [276.0, 76.0], [281.0, 72.0], [278.0, 66.0], [291.0, 80.0], [307.0, 74.0], [310.0, 60.5], [326.0, 75.0], [323.0, 75.0], [320.0, 76.0], [328.0, 78.0], [336.0, 77.5], [343.0, 71.0], [367.0, 70.0], [362.0, 73.5], [359.0, 69.0], [416.0, 65.0], [1.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 416.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 4.983333333333333, "minX": 1.68666612E12, "maxY": 174.01666666666668, "series": [{"data": [[1.68666894E12, 20.05], [1.68666792E12, 28.716666666666665], [1.68666732E12, 41.36666666666667], [1.68666954E12, 19.933333333333334], [1.6866669E12, 60.2], [1.68666852E12, 28.633333333333333], [1.68667014E12, 14.216666666666667], [1.6866663E12, 174.01666666666668], [1.68667074E12, 13.016666666666667], [1.68666912E12, 19.516666666666666], [1.68666876E12, 22.383333333333333], [1.68667038E12, 12.3], [1.68666714E12, 46.3], [1.68666654E12, 104.26666666666667], [1.68666936E12, 19.916666666666668], [1.68666996E12, 15.633333333333333], [1.68666672E12, 83.18333333333334], [1.68666774E12, 31.7], [1.68666612E12, 18.1], [1.68666834E12, 28.816666666666666], [1.68667056E12, 9.0], [1.68666666E12, 85.38333333333334], [1.68666828E12, 27.1], [1.6866699E12, 16.666666666666668], [1.68666888E12, 23.266666666666666], [1.6866705E12, 16.216666666666665], [1.68666786E12, 34.88333333333333], [1.68666948E12, 20.366666666666667], [1.68666624E12, 29.766666666666666], [1.68666726E12, 50.083333333333336], [1.68667008E12, 15.483333333333333], [1.68666972E12, 16.733333333333334], [1.68666648E12, 134.03333333333333], [1.6866675E12, 39.016666666666666], [1.6866681E12, 28.85], [1.68667032E12, 13.783333333333333], [1.6866687E12, 24.383333333333333], [1.68666768E12, 34.38333333333333], [1.68666708E12, 49.016666666666666], [1.6866693E12, 22.283333333333335], [1.68666762E12, 33.1], [1.68666924E12, 21.216666666666665], [1.68666702E12, 49.6], [1.68666984E12, 14.683333333333334], [1.68666822E12, 26.35], [1.68667044E12, 15.966666666666667], [1.6866672E12, 44.38333333333333], [1.6866666E12, 65.83333333333333], [1.68666882E12, 25.183333333333334], [1.68666846E12, 26.583333333333332], [1.68667068E12, 12.966666666666667], [1.68666744E12, 43.53333333333333], [1.68666684E12, 62.983333333333334], [1.68666906E12, 17.466666666666665], [1.68666642E12, 154.0], [1.68666966E12, 19.266666666666666], [1.68666864E12, 27.9], [1.68667026E12, 17.483333333333334], [1.68666804E12, 32.833333333333336], [1.68666696E12, 56.1], [1.6866702E12, 16.4], [1.68666798E12, 31.683333333333334], [1.68666636E12, 133.55], [1.68666858E12, 28.166666666666668], [1.6866708E12, 4.983333333333333], [1.68666918E12, 17.35], [1.68666816E12, 31.166666666666668], [1.68666756E12, 42.0], [1.68666978E12, 14.383333333333333], [1.68666618E12, 19.483333333333334], [1.68666942E12, 23.466666666666665], [1.6866684E12, 27.5], [1.6866678E12, 33.666666666666664], [1.68667002E12, 16.05], [1.686669E12, 16.916666666666668], [1.68667062E12, 10.616666666666667], [1.68666738E12, 42.8], [1.68666678E12, 72.53333333333333], [1.6866696E12, 17.75]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6866708E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68666612E12, "maxY": 100.76666666666667, "series": [{"data": [[1.68666894E12, 16.033333333333335], [1.68666792E12, 21.95], [1.68666732E12, 30.166666666666668], [1.68666954E12, 14.566666666666666], [1.6866669E12, 42.53333333333333], [1.68666852E12, 20.55], [1.68667014E12, 10.4], [1.6866663E12, 96.46666666666667], [1.68667074E12, 10.7], [1.68666912E12, 14.8], [1.68666876E12, 16.15], [1.68667038E12, 9.5], [1.68666714E12, 33.06666666666667], [1.68666654E12, 70.43333333333334], [1.68666936E12, 15.183333333333334], [1.68666996E12, 12.116666666666667], [1.68666672E12, 56.8], [1.68666774E12, 23.3], [1.68666612E12, 14.65], [1.68666834E12, 20.516666666666666], [1.68667056E12, 8.15], [1.68666666E12, 58.516666666666666], [1.68666828E12, 20.433333333333334], [1.6866699E12, 12.85], [1.68666888E12, 16.983333333333334], [1.6866705E12, 12.733333333333333], [1.68666786E12, 24.95], [1.68666948E12, 15.233333333333333], [1.68666624E12, 10.65], [1.68666726E12, 34.233333333333334], [1.68667008E12, 11.833333333333334], [1.68666972E12, 12.733333333333333], [1.68666648E12, 87.63333333333334], [1.6866675E12, 27.1], [1.6866681E12, 22.05], [1.68667032E12, 11.966666666666667], [1.6866687E12, 18.533333333333335], [1.68666768E12, 25.433333333333334], [1.68666708E12, 35.85], [1.6866693E12, 16.516666666666666], [1.68666762E12, 25.033333333333335], [1.68666924E12, 15.05], [1.68666702E12, 35.46666666666667], [1.68666984E12, 10.183333333333334], [1.68666822E12, 19.016666666666666], [1.68667044E12, 11.4], [1.6866672E12, 32.583333333333336], [1.6866666E12, 48.166666666666664], [1.68666882E12, 18.716666666666665], [1.68666846E12, 18.65], [1.68667068E12, 9.916666666666666], [1.68666744E12, 29.783333333333335], [1.68666684E12, 45.18333333333333], [1.68666906E12, 13.133333333333333], [1.68666642E12, 100.76666666666667], [1.68666966E12, 14.566666666666666], [1.68666864E12, 19.766666666666666], [1.68667026E12, 11.9], [1.68666804E12, 24.15], [1.68666696E12, 39.63333333333333], [1.6866702E12, 12.666666666666666], [1.68666798E12, 23.033333333333335], [1.68666636E12, 90.0], [1.68666858E12, 19.883333333333333], [1.6866708E12, 4.216666666666667], [1.68666918E12, 12.1], [1.68666816E12, 22.816666666666666], [1.68666756E12, 29.15], [1.68666978E12, 10.266666666666667], [1.68666618E12, 17.833333333333332], [1.68666942E12, 16.633333333333333], [1.6866684E12, 20.833333333333332], [1.6866678E12, 24.033333333333335], [1.68667002E12, 12.483333333333333], [1.686669E12, 12.8], [1.68667062E12, 6.466666666666667], [1.68666738E12, 30.1], [1.68666678E12, 50.7], [1.6866696E12, 12.783333333333333]], "isOverall": false, "label": "201", "isController": false}, {"data": [[1.68666894E12, 4.016666666666667], [1.68666792E12, 6.766666666666667], [1.68666732E12, 11.183333333333334], [1.68666954E12, 5.366666666666666], [1.6866669E12, 17.666666666666668], [1.68666852E12, 8.083333333333334], [1.68667014E12, 3.816666666666667], [1.6866663E12, 77.76666666666667], [1.68667074E12, 2.75], [1.68666912E12, 4.716666666666667], [1.68666876E12, 6.233333333333333], [1.68667038E12, 2.7], [1.68666714E12, 13.233333333333333], [1.68666654E12, 34.833333333333336], [1.68666936E12, 4.733333333333333], [1.68666996E12, 3.5166666666666666], [1.68666672E12, 26.366666666666667], [1.68666774E12, 8.4], [1.68666612E12, 2.183333333333333], [1.68666834E12, 8.3], [1.68667056E12, 1.7833333333333334], [1.68666666E12, 26.083333333333332], [1.68666828E12, 6.666666666666667], [1.6866699E12, 3.816666666666667], [1.68666888E12, 6.283333333333333], [1.6866705E12, 3.7333333333333334], [1.68666786E12, 9.933333333333334], [1.68666948E12, 5.1], [1.68666624E12, 18.35], [1.68666726E12, 15.85], [1.68667008E12, 3.65], [1.68666972E12, 4.0], [1.68666648E12, 46.53333333333333], [1.6866675E12, 11.916666666666666], [1.6866681E12, 6.8], [1.68667032E12, 2.85], [1.6866687E12, 5.85], [1.68666768E12, 8.95], [1.68666708E12, 13.166666666666666], [1.6866693E12, 5.766666666666667], [1.68666762E12, 8.066666666666666], [1.68666924E12, 6.166666666666667], [1.68666702E12, 14.133333333333333], [1.68666984E12, 4.5], [1.68666822E12, 7.316666666666666], [1.68667044E12, 3.8833333333333333], [1.6866672E12, 11.8], [1.6866666E12, 16.883333333333333], [1.68666882E12, 6.466666666666667], [1.68666846E12, 7.933333333333334], [1.68667068E12, 3.033333333333333], [1.68666744E12, 13.733333333333333], [1.68666684E12, 17.8], [1.68666906E12, 4.333333333333333], [1.68666642E12, 52.38333333333333], [1.68666966E12, 4.7], [1.68666864E12, 8.133333333333333], [1.68667026E12, 5.75], [1.68666804E12, 8.683333333333334], [1.68666696E12, 16.466666666666665], [1.6866702E12, 3.7333333333333334], [1.68666798E12, 8.65], [1.68666636E12, 43.766666666666666], [1.68666858E12, 8.283333333333333], [1.6866708E12, 1.1833333333333333], [1.68666918E12, 5.25], [1.68666816E12, 8.366666666666667], [1.68666756E12, 12.85], [1.68666978E12, 4.1], [1.68666618E12, 2.0], [1.68666942E12, 6.833333333333333], [1.6866684E12, 6.666666666666667], [1.6866678E12, 9.633333333333333], [1.68667002E12, 3.566666666666667], [1.686669E12, 4.116666666666666], [1.68667062E12, 3.3833333333333333], [1.68666738E12, 12.7], [1.68666678E12, 21.833333333333332], [1.6866696E12, 4.966666666666667]], "isOverall": false, "label": "500", "isController": false}, {"data": [[1.68666612E12, 0.85]], "isOverall": false, "label": "Non HTTP response code: java.net.NoRouteToHostException", "isController": false}, {"data": [[1.68666666E12, 0.016666666666666666], [1.68666744E12, 0.016666666666666666], [1.68666732E12, 0.016666666666666666], [1.68666948E12, 0.03333333333333333], [1.68666672E12, 0.016666666666666666], [1.68666978E12, 0.016666666666666666]], "isOverall": false, "label": "409", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6866708E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 1.1833333333333333, "minX": 1.68666612E12, "maxY": 100.76666666666667, "series": [{"data": [[1.68666894E12, 16.033333333333335], [1.68666792E12, 21.95], [1.68666732E12, 30.166666666666668], [1.68666954E12, 14.566666666666666], [1.6866669E12, 42.53333333333333], [1.68666852E12, 20.55], [1.68667014E12, 10.4], [1.6866663E12, 96.46666666666667], [1.68667074E12, 10.7], [1.68666912E12, 14.8], [1.68666876E12, 16.15], [1.68667038E12, 9.5], [1.68666714E12, 33.06666666666667], [1.68666654E12, 70.43333333333334], [1.68666936E12, 15.183333333333334], [1.68666996E12, 12.116666666666667], [1.68666672E12, 56.8], [1.68666774E12, 23.3], [1.68666612E12, 14.65], [1.68666834E12, 20.516666666666666], [1.68667056E12, 8.15], [1.68666666E12, 58.516666666666666], [1.68666828E12, 20.433333333333334], [1.6866699E12, 12.85], [1.68666888E12, 16.983333333333334], [1.6866705E12, 12.733333333333333], [1.68666786E12, 24.95], [1.68666948E12, 15.233333333333333], [1.68666624E12, 10.65], [1.68666726E12, 34.233333333333334], [1.68667008E12, 11.833333333333334], [1.68666972E12, 12.733333333333333], [1.68666648E12, 87.63333333333334], [1.6866675E12, 27.1], [1.6866681E12, 22.05], [1.68667032E12, 11.966666666666667], [1.6866687E12, 18.533333333333335], [1.68666768E12, 25.433333333333334], [1.68666708E12, 35.85], [1.6866693E12, 16.516666666666666], [1.68666762E12, 25.033333333333335], [1.68666924E12, 15.05], [1.68666702E12, 35.46666666666667], [1.68666984E12, 10.183333333333334], [1.68666822E12, 19.016666666666666], [1.68667044E12, 11.4], [1.6866672E12, 32.583333333333336], [1.6866666E12, 48.166666666666664], [1.68666882E12, 18.716666666666665], [1.68666846E12, 18.65], [1.68667068E12, 9.916666666666666], [1.68666744E12, 29.783333333333335], [1.68666684E12, 45.18333333333333], [1.68666906E12, 13.133333333333333], [1.68666642E12, 100.76666666666667], [1.68666966E12, 14.566666666666666], [1.68666864E12, 19.766666666666666], [1.68667026E12, 11.9], [1.68666804E12, 24.15], [1.68666696E12, 39.63333333333333], [1.6866702E12, 12.666666666666666], [1.68666798E12, 23.033333333333335], [1.68666636E12, 90.0], [1.68666858E12, 19.883333333333333], [1.6866708E12, 4.216666666666667], [1.68666918E12, 12.1], [1.68666816E12, 22.816666666666666], [1.68666756E12, 29.15], [1.68666978E12, 10.266666666666667], [1.68666618E12, 17.833333333333332], [1.68666942E12, 16.633333333333333], [1.6866684E12, 20.833333333333332], [1.6866678E12, 24.033333333333335], [1.68667002E12, 12.483333333333333], [1.686669E12, 12.8], [1.68667062E12, 6.466666666666667], [1.68666738E12, 30.1], [1.68666678E12, 50.7], [1.6866696E12, 12.783333333333333]], "isOverall": false, "label": "create cin-success", "isController": false}, {"data": [[1.68666894E12, 4.016666666666667], [1.68666792E12, 6.766666666666667], [1.68666732E12, 11.2], [1.68666954E12, 5.366666666666666], [1.6866669E12, 17.666666666666668], [1.68666852E12, 8.083333333333334], [1.68667014E12, 3.816666666666667], [1.6866663E12, 77.76666666666667], [1.68667074E12, 2.75], [1.68666912E12, 4.716666666666667], [1.68666876E12, 6.233333333333333], [1.68667038E12, 2.7], [1.68666714E12, 13.233333333333333], [1.68666654E12, 34.833333333333336], [1.68666936E12, 4.733333333333333], [1.68666996E12, 3.5166666666666666], [1.68666672E12, 26.383333333333333], [1.68666774E12, 8.4], [1.68666612E12, 3.033333333333333], [1.68666834E12, 8.3], [1.68667056E12, 1.7833333333333334], [1.68666666E12, 26.1], [1.68666828E12, 6.666666666666667], [1.6866699E12, 3.816666666666667], [1.68666888E12, 6.283333333333333], [1.6866705E12, 3.7333333333333334], [1.68666786E12, 9.933333333333334], [1.68666948E12, 5.133333333333334], [1.68666624E12, 18.35], [1.68666726E12, 15.85], [1.68667008E12, 3.65], [1.68666972E12, 4.0], [1.68666648E12, 46.53333333333333], [1.6866675E12, 11.916666666666666], [1.6866681E12, 6.8], [1.68667032E12, 2.85], [1.6866687E12, 5.85], [1.68666768E12, 8.95], [1.68666708E12, 13.166666666666666], [1.6866693E12, 5.766666666666667], [1.68666762E12, 8.066666666666666], [1.68666924E12, 6.166666666666667], [1.68666702E12, 14.133333333333333], [1.68666984E12, 4.5], [1.68666822E12, 7.316666666666666], [1.68667044E12, 3.8833333333333333], [1.6866672E12, 11.8], [1.6866666E12, 16.883333333333333], [1.68666882E12, 6.466666666666667], [1.68666846E12, 7.933333333333334], [1.68667068E12, 3.033333333333333], [1.68666744E12, 13.75], [1.68666684E12, 17.8], [1.68666906E12, 4.333333333333333], [1.68666642E12, 52.38333333333333], [1.68666966E12, 4.7], [1.68666864E12, 8.133333333333333], [1.68667026E12, 5.75], [1.68666804E12, 8.683333333333334], [1.68666696E12, 16.466666666666665], [1.6866702E12, 3.7333333333333334], [1.68666798E12, 8.65], [1.68666636E12, 43.766666666666666], [1.68666858E12, 8.283333333333333], [1.6866708E12, 1.1833333333333333], [1.68666918E12, 5.25], [1.68666816E12, 8.366666666666667], [1.68666756E12, 12.85], [1.68666978E12, 4.116666666666666], [1.68666618E12, 2.0], [1.68666942E12, 6.833333333333333], [1.6866684E12, 6.666666666666667], [1.6866678E12, 9.633333333333333], [1.68667002E12, 3.566666666666667], [1.686669E12, 4.116666666666666], [1.68667062E12, 3.3833333333333333], [1.68666738E12, 12.7], [1.68666678E12, 21.833333333333332], [1.6866696E12, 4.966666666666667]], "isOverall": false, "label": "create cin-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6866708E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 1.1833333333333333, "minX": 1.68666612E12, "maxY": 100.76666666666667, "series": [{"data": [[1.68666894E12, 16.033333333333335], [1.68666792E12, 21.95], [1.68666732E12, 30.166666666666668], [1.68666954E12, 14.566666666666666], [1.6866669E12, 42.53333333333333], [1.68666852E12, 20.55], [1.68667014E12, 10.4], [1.6866663E12, 96.46666666666667], [1.68667074E12, 10.7], [1.68666912E12, 14.8], [1.68666876E12, 16.15], [1.68667038E12, 9.5], [1.68666714E12, 33.06666666666667], [1.68666654E12, 70.43333333333334], [1.68666936E12, 15.183333333333334], [1.68666996E12, 12.116666666666667], [1.68666672E12, 56.8], [1.68666774E12, 23.3], [1.68666612E12, 14.65], [1.68666834E12, 20.516666666666666], [1.68667056E12, 8.15], [1.68666666E12, 58.516666666666666], [1.68666828E12, 20.433333333333334], [1.6866699E12, 12.85], [1.68666888E12, 16.983333333333334], [1.6866705E12, 12.733333333333333], [1.68666786E12, 24.95], [1.68666948E12, 15.233333333333333], [1.68666624E12, 10.65], [1.68666726E12, 34.233333333333334], [1.68667008E12, 11.833333333333334], [1.68666972E12, 12.733333333333333], [1.68666648E12, 87.63333333333334], [1.6866675E12, 27.1], [1.6866681E12, 22.05], [1.68667032E12, 11.966666666666667], [1.6866687E12, 18.533333333333335], [1.68666768E12, 25.433333333333334], [1.68666708E12, 35.85], [1.6866693E12, 16.516666666666666], [1.68666762E12, 25.033333333333335], [1.68666924E12, 15.05], [1.68666702E12, 35.46666666666667], [1.68666984E12, 10.183333333333334], [1.68666822E12, 19.016666666666666], [1.68667044E12, 11.4], [1.6866672E12, 32.583333333333336], [1.6866666E12, 48.166666666666664], [1.68666882E12, 18.716666666666665], [1.68666846E12, 18.65], [1.68667068E12, 9.916666666666666], [1.68666744E12, 29.783333333333335], [1.68666684E12, 45.18333333333333], [1.68666906E12, 13.133333333333333], [1.68666642E12, 100.76666666666667], [1.68666966E12, 14.566666666666666], [1.68666864E12, 19.766666666666666], [1.68667026E12, 11.9], [1.68666804E12, 24.15], [1.68666696E12, 39.63333333333333], [1.6866702E12, 12.666666666666666], [1.68666798E12, 23.033333333333335], [1.68666636E12, 90.0], [1.68666858E12, 19.883333333333333], [1.6866708E12, 4.216666666666667], [1.68666918E12, 12.1], [1.68666816E12, 22.816666666666666], [1.68666756E12, 29.15], [1.68666978E12, 10.266666666666667], [1.68666618E12, 17.833333333333332], [1.68666942E12, 16.633333333333333], [1.6866684E12, 20.833333333333332], [1.6866678E12, 24.033333333333335], [1.68667002E12, 12.483333333333333], [1.686669E12, 12.8], [1.68667062E12, 6.466666666666667], [1.68666738E12, 30.1], [1.68666678E12, 50.7], [1.6866696E12, 12.783333333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.68666894E12, 4.016666666666667], [1.68666792E12, 6.766666666666667], [1.68666732E12, 11.2], [1.68666954E12, 5.366666666666666], [1.6866669E12, 17.666666666666668], [1.68666852E12, 8.083333333333334], [1.68667014E12, 3.816666666666667], [1.6866663E12, 77.76666666666667], [1.68667074E12, 2.75], [1.68666912E12, 4.716666666666667], [1.68666876E12, 6.233333333333333], [1.68667038E12, 2.7], [1.68666714E12, 13.233333333333333], [1.68666654E12, 34.833333333333336], [1.68666936E12, 4.733333333333333], [1.68666996E12, 3.5166666666666666], [1.68666672E12, 26.383333333333333], [1.68666774E12, 8.4], [1.68666612E12, 3.033333333333333], [1.68666834E12, 8.3], [1.68667056E12, 1.7833333333333334], [1.68666666E12, 26.1], [1.68666828E12, 6.666666666666667], [1.6866699E12, 3.816666666666667], [1.68666888E12, 6.283333333333333], [1.6866705E12, 3.7333333333333334], [1.68666786E12, 9.933333333333334], [1.68666948E12, 5.133333333333334], [1.68666624E12, 18.35], [1.68666726E12, 15.85], [1.68667008E12, 3.65], [1.68666972E12, 4.0], [1.68666648E12, 46.53333333333333], [1.6866675E12, 11.916666666666666], [1.6866681E12, 6.8], [1.68667032E12, 2.85], [1.6866687E12, 5.85], [1.68666768E12, 8.95], [1.68666708E12, 13.166666666666666], [1.6866693E12, 5.766666666666667], [1.68666762E12, 8.066666666666666], [1.68666924E12, 6.166666666666667], [1.68666702E12, 14.133333333333333], [1.68666984E12, 4.5], [1.68666822E12, 7.316666666666666], [1.68667044E12, 3.8833333333333333], [1.6866672E12, 11.8], [1.6866666E12, 16.883333333333333], [1.68666882E12, 6.466666666666667], [1.68666846E12, 7.933333333333334], [1.68667068E12, 3.033333333333333], [1.68666744E12, 13.75], [1.68666684E12, 17.8], [1.68666906E12, 4.333333333333333], [1.68666642E12, 52.38333333333333], [1.68666966E12, 4.7], [1.68666864E12, 8.133333333333333], [1.68667026E12, 5.75], [1.68666804E12, 8.683333333333334], [1.68666696E12, 16.466666666666665], [1.6866702E12, 3.7333333333333334], [1.68666798E12, 8.65], [1.68666636E12, 43.766666666666666], [1.68666858E12, 8.283333333333333], [1.6866708E12, 1.1833333333333333], [1.68666918E12, 5.25], [1.68666816E12, 8.366666666666667], [1.68666756E12, 12.85], [1.68666978E12, 4.116666666666666], [1.68666618E12, 2.0], [1.68666942E12, 6.833333333333333], [1.6866684E12, 6.666666666666667], [1.6866678E12, 9.633333333333333], [1.68667002E12, 3.566666666666667], [1.686669E12, 4.116666666666666], [1.68667062E12, 3.3833333333333333], [1.68666738E12, 12.7], [1.68666678E12, 21.833333333333332], [1.6866696E12, 4.966666666666667]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6866708E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

