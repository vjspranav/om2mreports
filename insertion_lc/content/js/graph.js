/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 9.0, "minX": 0.0, "maxY": 15964.0, "series": [{"data": [[0.0, 9.0], [0.1, 45.0], [0.2, 48.0], [0.3, 51.0], [0.4, 53.0], [0.5, 55.0], [0.6, 57.0], [0.7, 61.0], [0.8, 66.0], [0.9, 71.0], [1.0, 77.0], [1.1, 83.0], [1.2, 88.0], [1.3, 92.0], [1.4, 96.0], [1.5, 100.0], [1.6, 105.0], [1.7, 109.0], [1.8, 114.0], [1.9, 118.0], [2.0, 121.0], [2.1, 124.0], [2.2, 128.0], [2.3, 130.0], [2.4, 133.0], [2.5, 136.0], [2.6, 139.0], [2.7, 142.0], [2.8, 145.0], [2.9, 148.0], [3.0, 150.0], [3.1, 153.0], [3.2, 155.0], [3.3, 158.0], [3.4, 160.0], [3.5, 163.0], [3.6, 165.0], [3.7, 168.0], [3.8, 170.0], [3.9, 174.0], [4.0, 176.0], [4.1, 179.0], [4.2, 182.0], [4.3, 184.0], [4.4, 187.0], [4.5, 189.0], [4.6, 192.0], [4.7, 195.0], [4.8, 198.0], [4.9, 201.0], [5.0, 204.0], [5.1, 207.0], [5.2, 210.0], [5.3, 213.0], [5.4, 216.0], [5.5, 220.0], [5.6, 222.0], [5.7, 226.0], [5.8, 228.0], [5.9, 231.0], [6.0, 235.0], [6.1, 238.0], [6.2, 242.0], [6.3, 245.0], [6.4, 248.0], [6.5, 252.0], [6.6, 255.0], [6.7, 258.0], [6.8, 261.0], [6.9, 264.0], [7.0, 268.0], [7.1, 271.0], [7.2, 275.0], [7.3, 278.0], [7.4, 282.0], [7.5, 286.0], [7.6, 290.0], [7.7, 294.0], [7.8, 297.0], [7.9, 300.0], [8.0, 304.0], [8.1, 308.0], [8.2, 312.0], [8.3, 315.0], [8.4, 319.0], [8.5, 322.0], [8.6, 326.0], [8.7, 329.0], [8.8, 332.0], [8.9, 336.0], [9.0, 338.0], [9.1, 341.0], [9.2, 345.0], [9.3, 348.0], [9.4, 352.0], [9.5, 355.0], [9.6, 358.0], [9.7, 361.0], [9.8, 365.0], [9.9, 368.0], [10.0, 371.0], [10.1, 374.0], [10.2, 376.0], [10.3, 379.0], [10.4, 382.0], [10.5, 385.0], [10.6, 388.0], [10.7, 391.0], [10.8, 393.0], [10.9, 396.0], [11.0, 399.0], [11.1, 401.0], [11.2, 404.0], [11.3, 406.0], [11.4, 408.0], [11.5, 410.0], [11.6, 413.0], [11.7, 415.0], [11.8, 418.0], [11.9, 420.0], [12.0, 422.0], [12.1, 424.0], [12.2, 427.0], [12.3, 429.0], [12.4, 432.0], [12.5, 434.0], [12.6, 436.0], [12.7, 438.0], [12.8, 440.0], [12.9, 443.0], [13.0, 445.0], [13.1, 447.0], [13.2, 449.0], [13.3, 451.0], [13.4, 453.0], [13.5, 456.0], [13.6, 458.0], [13.7, 460.0], [13.8, 462.0], [13.9, 464.0], [14.0, 466.0], [14.1, 469.0], [14.2, 471.0], [14.3, 473.0], [14.4, 475.0], [14.5, 477.0], [14.6, 479.0], [14.7, 481.0], [14.8, 483.0], [14.9, 485.0], [15.0, 487.0], [15.1, 489.0], [15.2, 492.0], [15.3, 494.0], [15.4, 496.0], [15.5, 498.0], [15.6, 500.0], [15.7, 502.0], [15.8, 504.0], [15.9, 506.0], [16.0, 508.0], [16.1, 510.0], [16.2, 512.0], [16.3, 515.0], [16.4, 517.0], [16.5, 519.0], [16.6, 521.0], [16.7, 523.0], [16.8, 525.0], [16.9, 527.0], [17.0, 529.0], [17.1, 532.0], [17.2, 534.0], [17.3, 535.0], [17.4, 537.0], [17.5, 540.0], [17.6, 542.0], [17.7, 543.0], [17.8, 546.0], [17.9, 548.0], [18.0, 550.0], [18.1, 552.0], [18.2, 554.0], [18.3, 556.0], [18.4, 559.0], [18.5, 561.0], [18.6, 563.0], [18.7, 565.0], [18.8, 567.0], [18.9, 570.0], [19.0, 572.0], [19.1, 574.0], [19.2, 576.0], [19.3, 578.0], [19.4, 580.0], [19.5, 582.0], [19.6, 584.0], [19.7, 587.0], [19.8, 589.0], [19.9, 591.0], [20.0, 593.0], [20.1, 595.0], [20.2, 597.0], [20.3, 599.0], [20.4, 601.0], [20.5, 603.0], [20.6, 605.0], [20.7, 607.0], [20.8, 610.0], [20.9, 612.0], [21.0, 614.0], [21.1, 616.0], [21.2, 619.0], [21.3, 621.0], [21.4, 623.0], [21.5, 626.0], [21.6, 628.0], [21.7, 630.0], [21.8, 633.0], [21.9, 635.0], [22.0, 637.0], [22.1, 640.0], [22.2, 642.0], [22.3, 644.0], [22.4, 647.0], [22.5, 649.0], [22.6, 652.0], [22.7, 654.0], [22.8, 656.0], [22.9, 658.0], [23.0, 661.0], [23.1, 664.0], [23.2, 666.0], [23.3, 668.0], [23.4, 671.0], [23.5, 674.0], [23.6, 676.0], [23.7, 679.0], [23.8, 682.0], [23.9, 684.0], [24.0, 686.0], [24.1, 689.0], [24.2, 691.0], [24.3, 694.0], [24.4, 696.0], [24.5, 699.0], [24.6, 701.0], [24.7, 703.0], [24.8, 706.0], [24.9, 708.0], [25.0, 711.0], [25.1, 713.0], [25.2, 716.0], [25.3, 719.0], [25.4, 721.0], [25.5, 724.0], [25.6, 726.0], [25.7, 729.0], [25.8, 732.0], [25.9, 735.0], [26.0, 737.0], [26.1, 740.0], [26.2, 742.0], [26.3, 745.0], [26.4, 748.0], [26.5, 750.0], [26.6, 753.0], [26.7, 755.0], [26.8, 758.0], [26.9, 761.0], [27.0, 764.0], [27.1, 766.0], [27.2, 769.0], [27.3, 771.0], [27.4, 774.0], [27.5, 777.0], [27.6, 779.0], [27.7, 782.0], [27.8, 785.0], [27.9, 788.0], [28.0, 790.0], [28.1, 793.0], [28.2, 796.0], [28.3, 799.0], [28.4, 802.0], [28.5, 805.0], [28.6, 808.0], [28.7, 811.0], [28.8, 814.0], [28.9, 817.0], [29.0, 820.0], [29.1, 823.0], [29.2, 826.0], [29.3, 829.0], [29.4, 831.0], [29.5, 834.0], [29.6, 837.0], [29.7, 840.0], [29.8, 843.0], [29.9, 845.0], [30.0, 848.0], [30.1, 851.0], [30.2, 854.0], [30.3, 857.0], [30.4, 860.0], [30.5, 863.0], [30.6, 866.0], [30.7, 869.0], [30.8, 872.0], [30.9, 875.0], [31.0, 878.0], [31.1, 881.0], [31.2, 884.0], [31.3, 887.0], [31.4, 890.0], [31.5, 893.0], [31.6, 895.0], [31.7, 899.0], [31.8, 902.0], [31.9, 905.0], [32.0, 908.0], [32.1, 911.0], [32.2, 913.0], [32.3, 916.0], [32.4, 919.0], [32.5, 922.0], [32.6, 925.0], [32.7, 928.0], [32.8, 931.0], [32.9, 934.0], [33.0, 937.0], [33.1, 940.0], [33.2, 943.0], [33.3, 946.0], [33.4, 949.0], [33.5, 952.0], [33.6, 956.0], [33.7, 959.0], [33.8, 962.0], [33.9, 965.0], [34.0, 968.0], [34.1, 970.0], [34.2, 973.0], [34.3, 976.0], [34.4, 979.0], [34.5, 982.0], [34.6, 986.0], [34.7, 989.0], [34.8, 992.0], [34.9, 995.0], [35.0, 997.0], [35.1, 1001.0], [35.2, 1004.0], [35.3, 1007.0], [35.4, 1010.0], [35.5, 1013.0], [35.6, 1016.0], [35.7, 1019.0], [35.8, 1022.0], [35.9, 1026.0], [36.0, 1029.0], [36.1, 1032.0], [36.2, 1035.0], [36.3, 1039.0], [36.4, 1042.0], [36.5, 1046.0], [36.6, 1049.0], [36.7, 1052.0], [36.8, 1055.0], [36.9, 1058.0], [37.0, 1061.0], [37.1, 1064.0], [37.2, 1068.0], [37.3, 1071.0], [37.4, 1074.0], [37.5, 1077.0], [37.6, 1080.0], [37.7, 1083.0], [37.8, 1087.0], [37.9, 1090.0], [38.0, 1093.0], [38.1, 1097.0], [38.2, 1100.0], [38.3, 1103.0], [38.4, 1106.0], [38.5, 1109.0], [38.6, 1112.0], [38.7, 1116.0], [38.8, 1119.0], [38.9, 1122.0], [39.0, 1125.0], [39.1, 1129.0], [39.2, 1132.0], [39.3, 1135.0], [39.4, 1138.0], [39.5, 1141.0], [39.6, 1144.0], [39.7, 1147.0], [39.8, 1151.0], [39.9, 1154.0], [40.0, 1157.0], [40.1, 1160.0], [40.2, 1164.0], [40.3, 1167.0], [40.4, 1170.0], [40.5, 1173.0], [40.6, 1176.0], [40.7, 1179.0], [40.8, 1183.0], [40.9, 1186.0], [41.0, 1189.0], [41.1, 1193.0], [41.2, 1196.0], [41.3, 1200.0], [41.4, 1203.0], [41.5, 1206.0], [41.6, 1209.0], [41.7, 1213.0], [41.8, 1216.0], [41.9, 1220.0], [42.0, 1223.0], [42.1, 1227.0], [42.2, 1230.0], [42.3, 1233.0], [42.4, 1237.0], [42.5, 1240.0], [42.6, 1243.0], [42.7, 1246.0], [42.8, 1250.0], [42.9, 1253.0], [43.0, 1256.0], [43.1, 1259.0], [43.2, 1262.0], [43.3, 1265.0], [43.4, 1269.0], [43.5, 1272.0], [43.6, 1276.0], [43.7, 1279.0], [43.8, 1282.0], [43.9, 1285.0], [44.0, 1288.0], [44.1, 1292.0], [44.2, 1295.0], [44.3, 1298.0], [44.4, 1302.0], [44.5, 1305.0], [44.6, 1308.0], [44.7, 1312.0], [44.8, 1315.0], [44.9, 1319.0], [45.0, 1322.0], [45.1, 1326.0], [45.2, 1329.0], [45.3, 1333.0], [45.4, 1336.0], [45.5, 1339.0], [45.6, 1343.0], [45.7, 1346.0], [45.8, 1349.0], [45.9, 1352.0], [46.0, 1356.0], [46.1, 1359.0], [46.2, 1362.0], [46.3, 1365.0], [46.4, 1369.0], [46.5, 1372.0], [46.6, 1376.0], [46.7, 1379.0], [46.8, 1383.0], [46.9, 1387.0], [47.0, 1390.0], [47.1, 1393.0], [47.2, 1397.0], [47.3, 1400.0], [47.4, 1404.0], [47.5, 1408.0], [47.6, 1411.0], [47.7, 1415.0], [47.8, 1418.0], [47.9, 1421.0], [48.0, 1425.0], [48.1, 1428.0], [48.2, 1431.0], [48.3, 1435.0], [48.4, 1438.0], [48.5, 1442.0], [48.6, 1445.0], [48.7, 1448.0], [48.8, 1452.0], [48.9, 1455.0], [49.0, 1458.0], [49.1, 1462.0], [49.2, 1465.0], [49.3, 1468.0], [49.4, 1472.0], [49.5, 1475.0], [49.6, 1478.0], [49.7, 1481.0], [49.8, 1485.0], [49.9, 1488.0], [50.0, 1492.0], [50.1, 1495.0], [50.2, 1499.0], [50.3, 1502.0], [50.4, 1505.0], [50.5, 1509.0], [50.6, 1512.0], [50.7, 1515.0], [50.8, 1518.0], [50.9, 1522.0], [51.0, 1525.0], [51.1, 1528.0], [51.2, 1531.0], [51.3, 1535.0], [51.4, 1538.0], [51.5, 1541.0], [51.6, 1545.0], [51.7, 1548.0], [51.8, 1551.0], [51.9, 1555.0], [52.0, 1558.0], [52.1, 1562.0], [52.2, 1566.0], [52.3, 1569.0], [52.4, 1573.0], [52.5, 1577.0], [52.6, 1580.0], [52.7, 1584.0], [52.8, 1587.0], [52.9, 1590.0], [53.0, 1594.0], [53.1, 1597.0], [53.2, 1601.0], [53.3, 1605.0], [53.4, 1608.0], [53.5, 1612.0], [53.6, 1616.0], [53.7, 1619.0], [53.8, 1622.0], [53.9, 1626.0], [54.0, 1630.0], [54.1, 1633.0], [54.2, 1637.0], [54.3, 1641.0], [54.4, 1644.0], [54.5, 1648.0], [54.6, 1651.0], [54.7, 1654.0], [54.8, 1658.0], [54.9, 1661.0], [55.0, 1665.0], [55.1, 1668.0], [55.2, 1672.0], [55.3, 1675.0], [55.4, 1679.0], [55.5, 1682.0], [55.6, 1686.0], [55.7, 1689.0], [55.8, 1692.0], [55.9, 1696.0], [56.0, 1699.0], [56.1, 1703.0], [56.2, 1706.0], [56.3, 1710.0], [56.4, 1713.0], [56.5, 1717.0], [56.6, 1721.0], [56.7, 1724.0], [56.8, 1728.0], [56.9, 1732.0], [57.0, 1735.0], [57.1, 1738.0], [57.2, 1742.0], [57.3, 1746.0], [57.4, 1749.0], [57.5, 1753.0], [57.6, 1756.0], [57.7, 1760.0], [57.8, 1764.0], [57.9, 1767.0], [58.0, 1771.0], [58.1, 1774.0], [58.2, 1778.0], [58.3, 1781.0], [58.4, 1785.0], [58.5, 1788.0], [58.6, 1792.0], [58.7, 1795.0], [58.8, 1799.0], [58.9, 1803.0], [59.0, 1807.0], [59.1, 1810.0], [59.2, 1814.0], [59.3, 1817.0], [59.4, 1820.0], [59.5, 1824.0], [59.6, 1828.0], [59.7, 1832.0], [59.8, 1836.0], [59.9, 1841.0], [60.0, 1844.0], [60.1, 1848.0], [60.2, 1851.0], [60.3, 1855.0], [60.4, 1858.0], [60.5, 1862.0], [60.6, 1866.0], [60.7, 1869.0], [60.8, 1873.0], [60.9, 1876.0], [61.0, 1880.0], [61.1, 1884.0], [61.2, 1888.0], [61.3, 1892.0], [61.4, 1896.0], [61.5, 1899.0], [61.6, 1904.0], [61.7, 1908.0], [61.8, 1911.0], [61.9, 1915.0], [62.0, 1919.0], [62.1, 1923.0], [62.2, 1927.0], [62.3, 1931.0], [62.4, 1935.0], [62.5, 1939.0], [62.6, 1943.0], [62.7, 1947.0], [62.8, 1951.0], [62.9, 1954.0], [63.0, 1958.0], [63.1, 1962.0], [63.2, 1966.0], [63.3, 1970.0], [63.4, 1974.0], [63.5, 1978.0], [63.6, 1982.0], [63.7, 1986.0], [63.8, 1990.0], [63.9, 1993.0], [64.0, 1998.0], [64.1, 2001.0], [64.2, 2005.0], [64.3, 2008.0], [64.4, 2012.0], [64.5, 2016.0], [64.6, 2020.0], [64.7, 2024.0], [64.8, 2029.0], [64.9, 2032.0], [65.0, 2036.0], [65.1, 2040.0], [65.2, 2044.0], [65.3, 2048.0], [65.4, 2053.0], [65.5, 2057.0], [65.6, 2061.0], [65.7, 2064.0], [65.8, 2069.0], [65.9, 2073.0], [66.0, 2077.0], [66.1, 2081.0], [66.2, 2085.0], [66.3, 2089.0], [66.4, 2093.0], [66.5, 2098.0], [66.6, 2103.0], [66.7, 2107.0], [66.8, 2111.0], [66.9, 2115.0], [67.0, 2118.0], [67.1, 2122.0], [67.2, 2127.0], [67.3, 2131.0], [67.4, 2135.0], [67.5, 2139.0], [67.6, 2143.0], [67.7, 2147.0], [67.8, 2151.0], [67.9, 2155.0], [68.0, 2159.0], [68.1, 2163.0], [68.2, 2167.0], [68.3, 2171.0], [68.4, 2176.0], [68.5, 2180.0], [68.6, 2184.0], [68.7, 2188.0], [68.8, 2192.0], [68.9, 2196.0], [69.0, 2200.0], [69.1, 2204.0], [69.2, 2209.0], [69.3, 2214.0], [69.4, 2218.0], [69.5, 2222.0], [69.6, 2227.0], [69.7, 2231.0], [69.8, 2235.0], [69.9, 2239.0], [70.0, 2244.0], [70.1, 2248.0], [70.2, 2252.0], [70.3, 2256.0], [70.4, 2261.0], [70.5, 2266.0], [70.6, 2270.0], [70.7, 2275.0], [70.8, 2280.0], [70.9, 2284.0], [71.0, 2289.0], [71.1, 2294.0], [71.2, 2299.0], [71.3, 2303.0], [71.4, 2307.0], [71.5, 2312.0], [71.6, 2317.0], [71.7, 2321.0], [71.8, 2327.0], [71.9, 2332.0], [72.0, 2336.0], [72.1, 2341.0], [72.2, 2346.0], [72.3, 2350.0], [72.4, 2355.0], [72.5, 2359.0], [72.6, 2364.0], [72.7, 2368.0], [72.8, 2373.0], [72.9, 2378.0], [73.0, 2382.0], [73.1, 2387.0], [73.2, 2392.0], [73.3, 2397.0], [73.4, 2401.0], [73.5, 2406.0], [73.6, 2410.0], [73.7, 2415.0], [73.8, 2420.0], [73.9, 2424.0], [74.0, 2429.0], [74.1, 2434.0], [74.2, 2439.0], [74.3, 2444.0], [74.4, 2448.0], [74.5, 2453.0], [74.6, 2458.0], [74.7, 2462.0], [74.8, 2467.0], [74.9, 2473.0], [75.0, 2478.0], [75.1, 2483.0], [75.2, 2488.0], [75.3, 2494.0], [75.4, 2498.0], [75.5, 2503.0], [75.6, 2508.0], [75.7, 2513.0], [75.8, 2518.0], [75.9, 2523.0], [76.0, 2528.0], [76.1, 2532.0], [76.2, 2538.0], [76.3, 2542.0], [76.4, 2548.0], [76.5, 2554.0], [76.6, 2559.0], [76.7, 2564.0], [76.8, 2569.0], [76.9, 2575.0], [77.0, 2580.0], [77.1, 2586.0], [77.2, 2591.0], [77.3, 2596.0], [77.4, 2602.0], [77.5, 2607.0], [77.6, 2612.0], [77.7, 2618.0], [77.8, 2623.0], [77.9, 2629.0], [78.0, 2634.0], [78.1, 2639.0], [78.2, 2645.0], [78.3, 2650.0], [78.4, 2656.0], [78.5, 2661.0], [78.6, 2666.0], [78.7, 2671.0], [78.8, 2677.0], [78.9, 2683.0], [79.0, 2689.0], [79.1, 2695.0], [79.2, 2700.0], [79.3, 2705.0], [79.4, 2711.0], [79.5, 2716.0], [79.6, 2722.0], [79.7, 2728.0], [79.8, 2733.0], [79.9, 2739.0], [80.0, 2744.0], [80.1, 2750.0], [80.2, 2756.0], [80.3, 2763.0], [80.4, 2768.0], [80.5, 2775.0], [80.6, 2781.0], [80.7, 2788.0], [80.8, 2794.0], [80.9, 2800.0], [81.0, 2806.0], [81.1, 2811.0], [81.2, 2817.0], [81.3, 2824.0], [81.4, 2829.0], [81.5, 2836.0], [81.6, 2842.0], [81.7, 2848.0], [81.8, 2854.0], [81.9, 2860.0], [82.0, 2865.0], [82.1, 2872.0], [82.2, 2878.0], [82.3, 2884.0], [82.4, 2890.0], [82.5, 2896.0], [82.6, 2903.0], [82.7, 2909.0], [82.8, 2915.0], [82.9, 2921.0], [83.0, 2927.0], [83.1, 2934.0], [83.2, 2940.0], [83.3, 2946.0], [83.4, 2953.0], [83.5, 2959.0], [83.6, 2966.0], [83.7, 2973.0], [83.8, 2979.0], [83.9, 2985.0], [84.0, 2992.0], [84.1, 3000.0], [84.2, 3006.0], [84.3, 3013.0], [84.4, 3020.0], [84.5, 3026.0], [84.6, 3033.0], [84.7, 3039.0], [84.8, 3046.0], [84.9, 3052.0], [85.0, 3059.0], [85.1, 3065.0], [85.2, 3073.0], [85.3, 3080.0], [85.4, 3086.0], [85.5, 3094.0], [85.6, 3102.0], [85.7, 3109.0], [85.8, 3117.0], [85.9, 3125.0], [86.0, 3133.0], [86.1, 3140.0], [86.2, 3147.0], [86.3, 3155.0], [86.4, 3161.0], [86.5, 3168.0], [86.6, 3176.0], [86.7, 3184.0], [86.8, 3192.0], [86.9, 3199.0], [87.0, 3206.0], [87.1, 3214.0], [87.2, 3223.0], [87.3, 3231.0], [87.4, 3240.0], [87.5, 3248.0], [87.6, 3256.0], [87.7, 3264.0], [87.8, 3272.0], [87.9, 3279.0], [88.0, 3288.0], [88.1, 3295.0], [88.2, 3304.0], [88.3, 3312.0], [88.4, 3320.0], [88.5, 3329.0], [88.6, 3337.0], [88.7, 3345.0], [88.8, 3354.0], [88.9, 3363.0], [89.0, 3371.0], [89.1, 3379.0], [89.2, 3388.0], [89.3, 3398.0], [89.4, 3407.0], [89.5, 3416.0], [89.6, 3425.0], [89.7, 3435.0], [89.8, 3444.0], [89.9, 3454.0], [90.0, 3464.0], [90.1, 3474.0], [90.2, 3482.0], [90.3, 3492.0], [90.4, 3502.0], [90.5, 3512.0], [90.6, 3523.0], [90.7, 3532.0], [90.8, 3542.0], [90.9, 3551.0], [91.0, 3562.0], [91.1, 3571.0], [91.2, 3580.0], [91.3, 3591.0], [91.4, 3601.0], [91.5, 3611.0], [91.6, 3624.0], [91.7, 3635.0], [91.8, 3646.0], [91.9, 3658.0], [92.0, 3670.0], [92.1, 3682.0], [92.2, 3693.0], [92.3, 3705.0], [92.4, 3718.0], [92.5, 3731.0], [92.6, 3742.0], [92.7, 3755.0], [92.8, 3767.0], [92.9, 3781.0], [93.0, 3794.0], [93.1, 3808.0], [93.2, 3822.0], [93.3, 3836.0], [93.4, 3850.0], [93.5, 3864.0], [93.6, 3878.0], [93.7, 3892.0], [93.8, 3905.0], [93.9, 3919.0], [94.0, 3932.0], [94.1, 3947.0], [94.2, 3963.0], [94.3, 3980.0], [94.4, 3995.0], [94.5, 4012.0], [94.6, 4028.0], [94.7, 4043.0], [94.8, 4060.0], [94.9, 4077.0], [95.0, 4096.0], [95.1, 4114.0], [95.2, 4134.0], [95.3, 4154.0], [95.4, 4171.0], [95.5, 4194.0], [95.6, 4213.0], [95.7, 4233.0], [95.8, 4253.0], [95.9, 4276.0], [96.0, 4298.0], [96.1, 4318.0], [96.2, 4342.0], [96.3, 4363.0], [96.4, 4386.0], [96.5, 4414.0], [96.6, 4442.0], [96.7, 4471.0], [96.8, 4501.0], [96.9, 4530.0], [97.0, 4561.0], [97.1, 4591.0], [97.2, 4623.0], [97.3, 4657.0], [97.4, 4697.0], [97.5, 4737.0], [97.6, 4774.0], [97.7, 4818.0], [97.8, 4862.0], [97.9, 4909.0], [98.0, 4956.0], [98.1, 5010.0], [98.2, 5065.0], [98.3, 5130.0], [98.4, 5196.0], [98.5, 5272.0], [98.6, 5343.0], [98.7, 5428.0], [98.8, 5513.0], [98.9, 5599.0], [99.0, 5722.0], [99.1, 5848.0], [99.2, 5995.0], [99.3, 6165.0], [99.4, 6361.0], [99.5, 6557.0], [99.6, 6824.0], [99.7, 7159.0], [99.8, 7722.0], [99.9, 8669.0]], "isOverall": false, "label": "create cin", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 11021.0, "series": [{"data": [[0.0, 3442.0], [100.0, 7831.0], [200.0, 7035.0], [300.0, 7341.0], [400.0, 10642.0], [500.0, 11021.0], [600.0, 9820.0], [700.0, 8764.0], [800.0, 7956.0], [900.0, 7763.0], [1000.0, 7307.0], [1100.0, 7220.0], [1200.0, 7066.0], [1300.0, 6848.0], [1400.0, 6859.0], [1500.0, 6840.0], [1600.0, 6628.0], [1700.0, 6521.0], [1800.0, 6270.0], [1900.0, 5947.0], [2000.0, 5746.0], [2100.0, 5707.0], [2200.0, 5231.0], [2300.0, 4985.0], [2400.0, 4796.0], [2500.0, 4512.0], [2600.0, 4231.0], [2800.0, 3841.0], [2700.0, 3988.0], [2900.0, 3615.0], [3000.0, 3420.0], [3100.0, 3105.0], [3300.0, 2723.0], [3200.0, 2906.0], [3400.0, 2447.0], [3500.0, 2352.0], [3700.0, 1813.0], [3600.0, 2041.0], [3800.0, 1673.0], [3900.0, 1558.0], [4000.0, 1384.0], [4200.0, 1102.0], [4100.0, 1194.0], [4300.0, 1023.0], [4600.0, 661.0], [4500.0, 769.0], [4400.0, 808.0], [4700.0, 584.0], [4800.0, 520.0], [5100.0, 346.0], [4900.0, 463.0], [5000.0, 409.0], [5200.0, 323.0], [5300.0, 287.0], [5400.0, 266.0], [5600.0, 193.0], [5500.0, 282.0], [5800.0, 161.0], [5700.0, 196.0], [5900.0, 154.0], [6000.0, 138.0], [6100.0, 130.0], [6200.0, 122.0], [6300.0, 120.0], [6500.0, 105.0], [6600.0, 85.0], [6400.0, 118.0], [6800.0, 85.0], [6700.0, 79.0], [6900.0, 84.0], [7000.0, 61.0], [7100.0, 54.0], [7400.0, 48.0], [7300.0, 48.0], [7200.0, 39.0], [7500.0, 36.0], [7600.0, 33.0], [7800.0, 40.0], [7900.0, 30.0], [7700.0, 30.0], [8100.0, 24.0], [8000.0, 26.0], [8600.0, 10.0], [8700.0, 13.0], [8300.0, 23.0], [8200.0, 29.0], [8400.0, 21.0], [8500.0, 8.0], [8800.0, 16.0], [9100.0, 6.0], [9200.0, 16.0], [9000.0, 14.0], [8900.0, 9.0], [9400.0, 7.0], [9700.0, 16.0], [9500.0, 10.0], [9300.0, 13.0], [9600.0, 14.0], [9800.0, 12.0], [10000.0, 6.0], [10200.0, 6.0], [10100.0, 6.0], [9900.0, 7.0], [10700.0, 5.0], [10400.0, 5.0], [10500.0, 3.0], [10300.0, 4.0], [10600.0, 1.0], [11100.0, 2.0], [11000.0, 3.0], [10800.0, 4.0], [10900.0, 4.0], [11200.0, 2.0], [11500.0, 2.0], [11300.0, 2.0], [11400.0, 3.0], [11600.0, 1.0], [11700.0, 1.0], [11900.0, 1.0], [12000.0, 2.0], [12100.0, 1.0], [12200.0, 2.0], [12400.0, 1.0], [13000.0, 2.0], [13200.0, 1.0], [13800.0, 1.0], [13500.0, 1.0], [14300.0, 1.0], [14100.0, 1.0], [14700.0, 1.0], [15900.0, 1.0]], "isOverall": false, "label": "create cin", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 15900.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 8742.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 96573.0, "series": [{"data": [[0.0, 8742.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 46257.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 96573.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 81219.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 18.644637053087767, "minX": 1.68693972E12, "maxY": 100.0, "series": [{"data": [[1.68694338E12, 100.0], [1.68694176E12, 100.0], [1.68693996E12, 35.61423779351481], [1.68694116E12, 100.0], [1.68694278E12, 100.0], [1.68694056E12, 100.0], [1.68694218E12, 100.0], [1.6869444E12, 22.529032258064493], [1.68694158E12, 100.0], [1.6869438E12, 100.0], [1.68694098E12, 100.0], [1.6869432E12, 100.0], [1.68693978E12, 24.832197920401583], [1.6869426E12, 100.0], [1.68694422E12, 22.685927940176743], [1.68694362E12, 100.0], [1.68694038E12, 100.0], [1.686942E12, 100.0], [1.6869414E12, 100.0], [1.68694302E12, 100.0], [1.68694272E12, 100.0], [1.68694434E12, 45.5744406196214], [1.68694374E12, 100.0], [1.68694212E12, 100.0], [1.68694152E12, 100.0], [1.68694314E12, 100.0], [1.6869399E12, 49.264776119403024], [1.68694092E12, 100.0], [1.6869405E12, 100.0], [1.68694254E12, 100.0], [1.68694014E12, 59.79373288713119], [1.68694194E12, 100.0], [1.68694416E12, 51.97440000000003], [1.68694134E12, 100.0], [1.68694356E12, 100.0], [1.68694074E12, 100.0], [1.68694296E12, 100.0], [1.68693972E12, 18.644637053087767], [1.68694236E12, 100.0], [1.68694398E12, 29.28631201434548], [1.68694032E12, 99.0702285871656], [1.68694146E12, 100.0], [1.68694368E12, 100.0], [1.68694026E12, 62.31053550640273], [1.68694086E12, 100.0], [1.68694308E12, 100.0], [1.68694248E12, 100.0], [1.6869441E12, 74.80793226381465], [1.6869435E12, 100.0], [1.68694188E12, 100.0], [1.68693984E12, 22.934049829018072], [1.68694128E12, 100.0], [1.6869429E12, 100.0], [1.68694008E12, 73.17680022415253], [1.6869423E12, 100.0], [1.6869417E12, 100.0], [1.68694068E12, 100.0], [1.68694392E12, 80.07549234135665], [1.6869411E12, 100.0], [1.68694332E12, 100.0], [1.6869408E12, 100.0], [1.68694062E12, 100.0], [1.68694242E12, 100.0], [1.68694182E12, 100.0], [1.68694404E12, 42.293095564700515], [1.68694122E12, 100.0], [1.68694344E12, 100.0], [1.6869402E12, 18.965902410346864], [1.68694284E12, 100.0], [1.68694224E12, 100.0], [1.68694386E12, 100.0], [1.68694044E12, 100.0], [1.68694164E12, 100.0], [1.68694326E12, 100.0], [1.68694104E12, 100.0], [1.68694266E12, 100.0], [1.68694002E12, 36.27793240556655], [1.68694206E12, 100.0], [1.68694428E12, 49.19390902081725]], "isOverall": false, "label": "OM2M-Insertion Testing", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6869444E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 448.1157024793388, "minX": 1.0, "maxY": 1968.8391608391607, "series": [{"data": [[2.0, 504.95744680851055], [3.0, 496.93055555555554], [4.0, 484.3653846153846], [5.0, 448.1157024793388], [6.0, 490.6732026143792], [7.0, 498.96089385474875], [8.0, 506.7119565217391], [9.0, 490.99134199134204], [10.0, 478.07792207792215], [11.0, 520.4477611940301], [12.0, 503.5851851851853], [13.0, 492.35142857142864], [14.0, 493.1711409395975], [15.0, 493.5209424083769], [16.0, 487.3532467532469], [17.0, 478.2818791946309], [18.0, 491.281030444965], [19.0, 525.2361445783134], [20.0, 533.9152542372879], [21.0, 558.5023923444973], [22.0, 578.194063926941], [23.0, 574.2203791469194], [24.0, 571.3762541806027], [25.0, 592.998235553594], [26.0, 589.3021390374333], [27.0, 635.6883720930234], [28.0, 621.8513189448445], [29.0, 726.9400921658987], [30.0, 720.366576819407], [31.0, 773.3436018957348], [32.0, 693.6879120879121], [33.0, 713.8208955223879], [34.0, 725.4824016563147], [35.0, 646.1863117870726], [36.0, 762.0291262135916], [37.0, 760.5996055226823], [38.0, 757.9596153846154], [39.0, 863.0519750519759], [40.0, 887.8250539956802], [41.0, 950.071090047394], [42.0, 854.5968169761267], [43.0, 931.3903345724909], [44.0, 1058.3064182194616], [45.0, 1007.8215158924208], [46.0, 1043.181578947368], [47.0, 1066.8896247240627], [48.0, 1003.7537688442216], [49.0, 1037.502664298402], [50.0, 1017.7737468011454], [51.0, 1192.2822677925228], [52.0, 1200.4390243902437], [53.0, 1232.20737327189], [54.0, 1276.4866920152099], [55.0, 976.6510791366902], [56.0, 1156.5567010309276], [57.0, 1167.1838709677418], [58.0, 1260.509803921569], [59.0, 1118.887133182844], [60.0, 1058.8984126984137], [61.0, 1056.9358974358977], [62.0, 982.3656387665195], [63.0, 1178.5028248587573], [64.0, 1301.1871345029242], [65.0, 1375.309278350516], [66.0, 1247.9519230769235], [67.0, 1318.1991869918697], [68.0, 1138.6266318537864], [69.0, 1103.844290657439], [70.0, 1402.2830626450107], [71.0, 1313.5972602739732], [72.0, 1441.208633093525], [73.0, 1503.22966507177], [74.0, 1417.9800000000002], [75.0, 1542.4292729288754], [76.0, 1111.4067796610168], [77.0, 1344.431578947369], [78.0, 1846.2117647058822], [79.0, 1487.6249999999995], [80.0, 1519.120603015076], [81.0, 1280.1284403669727], [82.0, 1274.8055555555554], [83.0, 1364.2500000000005], [84.0, 1058.972972972973], [85.0, 1779.9323308270677], [86.0, 1806.988505747126], [87.0, 1513.598591549296], [88.0, 1631.2763157894735], [89.0, 1436.6504854368925], [90.0, 1341.6], [91.0, 1467.802469135803], [92.0, 1501.6390977443602], [93.0, 1696.2317073170732], [94.0, 1384.7471264367819], [95.0, 1671.0215053763445], [96.0, 1225.9499999999998], [97.0, 1681.2280701754385], [98.0, 1968.8391608391607], [99.0, 1695.3451327433625], [100.0, 1926.6847146197488], [1.0, 553.2857142857143]], "isOverall": false, "label": "create cin", "isController": false}, {"data": [[89.5876773586598, 1742.7531648560496]], "isOverall": false, "label": "create cin-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 6337.933333333333, "minX": 1.68693972E12, "maxY": 31624.583333333332, "series": [{"data": [[1.68694338E12, 25519.433333333334], [1.68694176E12, 25632.033333333333], [1.68693996E12, 25034.4], [1.68694116E12, 28941.65], [1.68694278E12, 26412.733333333334], [1.68694056E12, 31479.0], [1.68694218E12, 27597.216666666667], [1.6869444E12, 16231.616666666667], [1.68694158E12, 26117.183333333334], [1.6869438E12, 24342.566666666666], [1.68694098E12, 31204.416666666668], [1.6869432E12, 24582.85], [1.68693978E12, 26576.283333333333], [1.6869426E12, 26580.183333333334], [1.68694422E12, 14113.1], [1.68694362E12, 23297.9], [1.68694038E12, 30407.916666666668], [1.686942E12, 28182.85], [1.6869414E12, 29084.016666666666], [1.68694302E12, 25549.616666666665], [1.68694272E12, 25877.483333333334], [1.68694434E12, 21484.283333333333], [1.68694374E12, 23670.8], [1.68694212E12, 25757.733333333334], [1.68694152E12, 28611.466666666667], [1.68694314E12, 25369.116666666665], [1.6869399E12, 30282.3], [1.68694092E12, 29833.166666666668], [1.6869405E12, 29114.066666666666], [1.68694254E12, 25558.2], [1.68694014E12, 29578.583333333332], [1.68694194E12, 26405.683333333334], [1.68694416E12, 22475.433333333334], [1.68694134E12, 27152.433333333334], [1.68694356E12, 24784.583333333332], [1.68694074E12, 31584.333333333332], [1.68694296E12, 26111.5], [1.68693972E12, 9016.45], [1.68694236E12, 24700.466666666667], [1.68694398E12, 15735.0], [1.68694032E12, 31412.033333333333], [1.68694146E12, 27857.666666666668], [1.68694368E12, 24837.4], [1.68694026E12, 29616.766666666666], [1.68694086E12, 28374.9], [1.68694308E12, 26436.5], [1.68694248E12, 26326.083333333332], [1.6869441E12, 20727.866666666665], [1.6869435E12, 25408.833333333332], [1.68694188E12, 28934.816666666666], [1.68693984E12, 19369.583333333332], [1.68694128E12, 29237.2], [1.6869429E12, 25540.716666666667], [1.68694008E12, 31624.583333333332], [1.6869423E12, 23833.883333333335], [1.6869417E12, 26837.05], [1.68694068E12, 30261.983333333334], [1.68694392E12, 24415.933333333334], [1.6869411E12, 29491.083333333332], [1.68694332E12, 24706.15], [1.6869408E12, 29390.066666666666], [1.68694062E12, 30889.8], [1.68694242E12, 25665.55], [1.68694182E12, 26800.05], [1.68694404E12, 20199.05], [1.68694122E12, 29699.95], [1.68694344E12, 25045.8], [1.6869402E12, 16675.85], [1.68694284E12, 24897.65], [1.68694224E12, 27901.416666666668], [1.68694386E12, 24986.0], [1.68694044E12, 30060.55], [1.68694164E12, 27000.65], [1.68694326E12, 25040.8], [1.68694104E12, 29104.416666666668], [1.68694266E12, 26093.883333333335], [1.68694002E12, 23210.016666666666], [1.68694206E12, 26328.116666666665], [1.68694428E12, 22260.883333333335]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.68694338E12, 20188.0], [1.68694176E12, 19343.4], [1.68693996E12, 18423.266666666666], [1.68694116E12, 23044.533333333333], [1.68694278E12, 21362.2], [1.68694056E12, 25111.4], [1.68694218E12, 21650.6], [1.6869444E12, 11707.666666666666], [1.68694158E12, 20586.266666666666], [1.6869438E12, 19267.866666666665], [1.68694098E12, 25138.866666666665], [1.6869432E12, 19322.8], [1.68693978E12, 19151.133333333335], [1.6869426E12, 20902.133333333335], [1.68694422E12, 10100.866666666667], [1.68694362E12, 18100.533333333333], [1.68694038E12, 23525.2], [1.686942E12, 22419.666666666668], [1.6869414E12, 23099.466666666667], [1.68694302E12, 20593.133333333335], [1.68694272E12, 20318.466666666667], [1.68694434E12, 15958.133333333333], [1.68694374E12, 18684.2], [1.68694212E12, 19954.533333333333], [1.68694152E12, 22412.8], [1.68694314E12, 19576.866666666665], [1.6869399E12, 23003.333333333332], [1.68694092E12, 23971.533333333333], [1.6869405E12, 22934.666666666668], [1.68694254E12, 20497.0], [1.68694014E12, 22570.733333333334], [1.68694194E12, 20771.666666666668], [1.68694416E12, 17166.666666666668], [1.68694134E12, 21053.2], [1.68694356E12, 19521.933333333334], [1.68694074E12, 25262.466666666667], [1.68694296E12, 21025.733333333334], [1.68693972E12, 6337.933333333333], [1.68694236E12, 18649.866666666665], [1.68694398E12, 11487.933333333332], [1.68694032E12, 24932.866666666665], [1.68694146E12, 22035.133333333335], [1.68694368E12, 19570.0], [1.68694026E12, 23593.866666666665], [1.68694086E12, 22158.733333333334], [1.68694308E12, 21341.6], [1.68694248E12, 20826.6], [1.6869441E12, 15408.8], [1.6869435E12, 20071.266666666666], [1.68694188E12, 23655.666666666668], [1.68693984E12, 14056.066666666668], [1.68694128E12, 23099.466666666667], [1.6869429E12, 20036.933333333334], [1.68694008E12, 24507.133333333335], [1.6869423E12, 18766.6], [1.6869417E12, 20799.133333333335], [1.68694068E12, 24136.333333333332], [1.68694392E12, 18828.4], [1.6869411E12, 23250.533333333333], [1.68694332E12, 19391.466666666667], [1.6869408E12, 23532.066666666666], [1.68694062E12, 24603.266666666666], [1.68694242E12, 20105.6], [1.68694182E12, 20874.666666666668], [1.68694404E12, 15017.4], [1.68694122E12, 23964.666666666668], [1.68694344E12, 19624.933333333334], [1.6869402E12, 11680.2], [1.68694284E12, 19508.2], [1.68694224E12, 21973.333333333332], [1.68694386E12, 19982.0], [1.68694044E12, 23950.933333333334], [1.68694164E12, 21231.733333333334], [1.68694326E12, 19666.133333333335], [1.68694104E12, 22330.4], [1.68694266E12, 20215.466666666667], [1.68694002E12, 17269.666666666668], [1.68694206E12, 20490.133333333335], [1.68694428E12, 17812.133333333335]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6869444E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 472.61430119176595, "minX": 1.68693972E12, "maxY": 2293.51138088012, "series": [{"data": [[1.68694338E12, 2047.7568027210918], [1.68694176E12, 2137.378771742991], [1.68693996E12, 661.4014163250084], [1.68694116E12, 1780.1629916567338], [1.68694278E12, 1936.1481838637121], [1.68694056E12, 1642.2228602679813], [1.68694218E12, 1893.8940691405], [1.6869444E12, 704.0692082111434], [1.68694158E12, 1989.7928619079407], [1.6869438E12, 2147.7640769779064], [1.68694098E12, 1646.0904124556118], [1.6869432E12, 2154.5689410092386], [1.68693978E12, 534.4248834707777], [1.6869426E12, 1970.857095926414], [1.68694422E12, 675.1624745071383], [1.68694362E12, 2293.51138088012], [1.68694038E12, 1738.2942206655005], [1.686942E12, 1861.04471669219], [1.6869414E12, 1783.9423305588555], [1.68694302E12, 2011.175058352786], [1.68694272E12, 2032.842514362964], [1.68694434E12, 1186.415662650602], [1.68694374E12, 2193.0654171260544], [1.68694212E12, 2087.394356503778], [1.68694152E12, 1837.3109681372555], [1.68694314E12, 2080.7744650999643], [1.6869399E12, 879.9423880596999], [1.68694092E12, 1717.7725580062988], [1.6869405E12, 1805.2634730538919], [1.68694254E12, 2012.8636515912954], [1.68694014E12, 1076.6038941283857], [1.68694194E12, 1970.7986776859498], [1.68694416E12, 1250.6780000000006], [1.68694134E12, 1959.6709067188524], [1.68694356E12, 2097.3686246922243], [1.68694074E12, 1626.232943734711], [1.68694296E12, 1950.9973873285433], [1.68693972E12, 472.61430119176595], [1.68694236E12, 2210.6012518409443], [1.68694398E12, 828.5265989240886], [1.68694032E12, 1628.487469016799], [1.68694146E12, 1876.5098161420945], [1.68694368E12, 2106.965614035077], [1.68694026E12, 1028.0241559953456], [1.68694086E12, 1846.7052990393568], [1.68694308E12, 1927.05855855856], [1.68694248E12, 1973.514012528851], [1.6869441E12, 1972.8342245989297], [1.6869435E12, 2052.5566199110463], [1.68694188E12, 1727.8656023222063], [1.68693984E12, 488.40986809965796], [1.68694128E12, 1777.6489298454221], [1.6869429E12, 2053.6932830705964], [1.68694008E12, 1227.1372933594855], [1.6869423E12, 2175.3450420783056], [1.6869417E12, 1987.5110597556925], [1.68694068E12, 1710.159317211945], [1.68694392E12, 1770.817651349376], [1.6869411E12, 1777.8600118133463], [1.68694332E12, 2125.7659348441966], [1.6869408E12, 1761.137437992417], [1.68694062E12, 1671.40580519118], [1.68694242E12, 2062.1673497267734], [1.68694182E12, 1984.7059210526293], [1.68694404E12, 1076.2789208962038], [1.68694122E12, 1722.6464183381083], [1.68694344E12, 2089.6203638908323], [1.6869402E12, 535.0964138741911], [1.68694284E12, 2112.285462865187], [1.68694224E12, 1888.0224999999969], [1.68694386E12, 2064.7515463917534], [1.68694044E12, 1726.250000000001], [1.68694164E12, 1927.696636481244], [1.68694326E12, 2086.2199720670396], [1.68694104E12, 1837.4630996309954], [1.68694266E12, 2032.224184782608], [1.68694002E12, 708.2763419483096], [1.68694206E12, 1983.324731903481], [1.68694428E12, 1129.8727833461844]], "isOverall": false, "label": "create cin", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6869444E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 472.5622968580714, "minX": 1.68693972E12, "maxY": 2293.500379362666, "series": [{"data": [[1.68694338E12, 2047.750680272109], [1.68694176E12, 2137.3677671281525], [1.68693996E12, 661.3917256802081], [1.68694116E12, 1780.1519666269378], [1.68694278E12, 1936.1327547412395], [1.68694056E12, 1642.2075471698142], [1.68694218E12, 1893.8842372343804], [1.6869444E12, 704.0598240469199], [1.68694158E12, 1989.7778519012652], [1.6869438E12, 2147.748039914468], [1.68694098E12, 1646.0745697896732], [1.6869432E12, 2154.55828002843], [1.68693978E12, 534.4005019720325], [1.6869426E12, 1970.841655716166], [1.68694422E12, 675.1454792658064], [1.68694362E12, 2293.500379362666], [1.68694038E12, 1738.2828371278465], [1.686942E12, 1861.0303215926492], [1.6869414E12, 1783.9307372175983], [1.68694302E12, 2011.1650550183344], [1.68694272E12, 2032.831361946602], [1.68694434E12, 1186.399311531846], [1.68694374E12, 2193.0521866960667], [1.68694212E12, 2087.38196834136], [1.68694152E12, 1837.2953431372534], [1.68694314E12, 2080.761136443352], [1.6869399E12, 879.9301492537314], [1.68694092E12, 1717.7636780292196], [1.6869405E12, 1805.253293413177], [1.68694254E12, 2012.8522613065347], [1.68694014E12, 1076.5895953757245], [1.68694194E12, 1970.7854545454543], [1.68694416E12, 1250.665599999997], [1.68694134E12, 1959.6591650358744], [1.68694356E12, 2097.3584241997874], [1.68694074E12, 1626.2228866539874], [1.68694296E12, 1950.9869366427192], [1.68693972E12, 472.5622968580714], [1.68694236E12, 2210.58946980854], [1.68694398E12, 828.5128511655707], [1.68694032E12, 1628.4794822362953], [1.68694146E12, 1876.4967279526306], [1.68694368E12, 2106.9501754385947], [1.68694026E12, 1028.0093131548292], [1.68694086E12, 1846.6894948868887], [1.68694308E12, 1927.0479407979428], [1.68694248E12, 1973.5024727992068], [1.6869441E12, 1972.823529411763], [1.6869435E12, 2052.544303797465], [1.68694188E12, 1727.8537010159664], [1.68693984E12, 488.39276990718156], [1.68694128E12, 1777.6349583828753], [1.6869429E12, 2053.682659355719], [1.68694008E12, 1227.1272065004196], [1.6869423E12, 2175.332967435049], [1.6869417E12, 1987.4981842192105], [1.68694068E12, 1710.1462304409672], [1.68694392E12, 1770.8092633114506], [1.6869411E12, 1777.8458357944478], [1.68694332E12, 2125.758498583562], [1.6869408E12, 1761.123139772396], [1.68694062E12, 1671.3926876918758], [1.68694242E12, 2062.1571038251395], [1.68694182E12, 1984.693421052636], [1.68694404E12, 1076.2638317329684], [1.68694122E12, 1722.633237822349], [1.68694344E12, 2089.6123163051107], [1.6869402E12, 535.0799529688422], [1.68694284E12, 2112.272439281938], [1.68694224E12, 1888.0109375000025], [1.68694386E12, 2064.73883161512], [1.68694044E12, 1726.2393922018384], [1.68694164E12, 1927.6824062095718], [1.68694326E12, 2086.2077513966447], [1.68694104E12, 1837.448954489546], [1.68694266E12, 2032.2119565217417], [1.68694002E12, 708.2656063618293], [1.68694206E12, 1983.3130026809627], [1.68694428E12, 1129.8596761757913]], "isOverall": false, "label": "create cin", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6869444E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.5220483641536299, "minX": 1.68693972E12, "maxY": 0.8580715059588303, "series": [{"data": [[1.68694338E12, 0.6741496598639444], [1.68694176E12, 0.6173233936812206], [1.68693996E12, 0.5821841222512112], [1.68694116E12, 0.5643623361144212], [1.68694278E12, 0.6129861780777892], [1.68694056E12, 0.578616352201259], [1.68694218E12, 0.5845226768157317], [1.6869444E12, 0.6463343108504408], [1.68694158E12, 0.6327551701134084], [1.6869438E12, 0.5730577334283667], [1.68694098E12, 0.5951925703359751], [1.6869432E12, 0.6051883439943156], [1.68693978E12, 0.6941556113302253], [1.6869426E12, 0.7049934296977656], [1.68694422E12, 0.658055744391571], [1.68694362E12, 0.5428679817905915], [1.68694038E12, 0.5843549328663165], [1.686942E12, 0.5849923430321582], [1.6869414E12, 0.5656956004756247], [1.68694302E12, 0.5648549516505516], [1.68694272E12, 0.5964852990875285], [1.68694434E12, 0.6962134251290873], [1.68694374E12, 0.6475560455714816], [1.68694212E12, 0.6052993805918776], [1.68694152E12, 0.5756740196078424], [1.68694314E12, 0.5959312521922144], [1.6869399E12, 0.6089552238805972], [1.68694092E12, 0.5665998281294788], [1.6869405E12, 0.6350299401197615], [1.68694254E12, 0.5758793969849257], [1.68694014E12, 0.6041983571645879], [1.68694194E12, 0.6016528925619835], [1.68694416E12, 0.6196000000000007], [1.68694134E12, 0.6180691454664078], [1.68694356E12, 0.6401688357368982], [1.68694074E12, 0.5686327806469161], [1.68694296E12, 0.5983017635532324], [1.68693972E12, 0.8580715059588303], [1.68694236E12, 0.6546391752577334], [1.68694398E12, 0.5923490735206209], [1.68694032E12, 0.5833103828146541], [1.68694146E12, 0.6301028357743842], [1.68694368E12, 0.6084210526315792], [1.68694026E12, 0.6379511059371353], [1.68694086E12, 0.5863030678648905], [1.68694308E12, 0.5788288288288287], [1.68694248E12, 0.5700626442466206], [1.6869441E12, 0.696078431372549], [1.6869435E12, 0.5819363667464956], [1.68694188E12, 0.5663280116110291], [1.68693984E12, 0.7386419149975569], [1.68694128E12, 0.5270511296076106], [1.6869429E12, 0.6182316655243314], [1.68694008E12, 0.5575791538246003], [1.6869423E12, 0.7420417124039512], [1.6869417E12, 0.6130736216573136], [1.68694068E12, 0.5220483641536299], [1.68694392E12, 0.5787746170678343], [1.6869411E12, 0.6515062020082685], [1.68694332E12, 0.6497875354107646], [1.6869408E12, 0.5803910125474186], [1.68694062E12, 0.6031258721741557], [1.68694242E12, 0.5864071038251374], [1.68694182E12, 0.6374999999999982], [1.68694404E12, 0.7151348879743944], [1.68694122E12, 0.5782234957020056], [1.68694344E12, 0.6990902729181243], [1.6869402E12, 0.6778365667254579], [1.68694284E12, 0.6307638155579033], [1.68694224E12, 0.5896874999999996], [1.68694386E12, 0.7199312714776644], [1.68694044E12, 0.585149082568808], [1.68694164E12, 0.5857050452781373], [1.68694326E12, 0.6291899441340787], [1.68694104E12, 0.5504305043050447], [1.68694266E12, 0.5917119565217378], [1.68694002E12, 0.6675944333996032], [1.68694206E12, 0.5821045576407519], [1.68694428E12, 0.6368542791056286]], "isOverall": false, "label": "create cin", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6869444E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 224.0, "minX": 1.68693972E12, "maxY": 15964.0, "series": [{"data": [[1.68694338E12, 10900.0], [1.68694176E12, 15964.0], [1.68693996E12, 4030.0], [1.68694116E12, 10740.0], [1.68694278E12, 7828.0], [1.68694056E12, 8790.0], [1.68694218E12, 9264.0], [1.6869444E12, 3489.0], [1.68694158E12, 7676.0], [1.6869438E12, 13013.0], [1.68694098E12, 9262.0], [1.6869432E12, 13228.0], [1.68693978E12, 2677.0], [1.6869426E12, 7820.0], [1.68694422E12, 2749.0], [1.68694362E12, 10231.0], [1.68694038E12, 8669.0], [1.686942E12, 11497.0], [1.6869414E12, 9838.0], [1.68694302E12, 9176.0], [1.68694272E12, 10643.0], [1.68694434E12, 8114.0], [1.68694374E12, 10278.0], [1.68694212E12, 14330.0], [1.68694152E12, 9229.0], [1.68694314E12, 7611.0], [1.6869399E12, 11160.0], [1.68694092E12, 8319.0], [1.6869405E12, 9312.0], [1.68694254E12, 7392.0], [1.68694014E12, 8134.0], [1.68694194E12, 11035.0], [1.68694416E12, 6855.0], [1.68694134E12, 11594.0], [1.68694356E12, 10715.0], [1.68694074E12, 12084.0], [1.68694296E12, 9298.0], [1.68693972E12, 2038.0], [1.68694236E12, 14709.0], [1.68694398E12, 5962.0], [1.68694032E12, 11119.0], [1.68694146E12, 10816.0], [1.68694368E12, 8080.0], [1.68694026E12, 6557.0], [1.68694086E12, 10056.0], [1.68694308E12, 9847.0], [1.68694248E12, 8352.0], [1.6869441E12, 10385.0], [1.6869435E12, 10252.0], [1.68694188E12, 10502.0], [1.68693984E12, 2938.0], [1.68694128E12, 8414.0], [1.6869429E12, 10000.0], [1.68694008E12, 9833.0], [1.6869423E12, 13080.0], [1.6869417E12, 13823.0], [1.68694068E12, 9288.0], [1.68694392E12, 8997.0], [1.6869411E12, 10122.0], [1.68694332E12, 6691.0], [1.6869408E12, 10429.0], [1.68694062E12, 10953.0], [1.68694242E12, 8937.0], [1.68694182E12, 11089.0], [1.68694404E12, 5768.0], [1.68694122E12, 8674.0], [1.68694344E12, 10772.0], [1.6869402E12, 2820.0], [1.68694284E12, 9736.0], [1.68694224E12, 8485.0], [1.68694386E12, 9767.0], [1.68694044E12, 11922.0], [1.68694164E12, 9098.0], [1.68694326E12, 8908.0], [1.68694104E12, 8523.0], [1.68694266E12, 11723.0], [1.68694002E12, 3481.0], [1.68694206E12, 9064.0], [1.68694428E12, 7723.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.68694338E12, 3924.7], [1.68694176E12, 4709.0], [1.68693996E12, 1285.0], [1.68694116E12, 3431.8], [1.68694278E12, 4001.2], [1.68694056E12, 3397.2], [1.68694218E12, 3628.0], [1.6869444E12, 1173.5], [1.68694158E12, 4212.0], [1.6869438E12, 4496.0], [1.68694098E12, 3137.0000000000005], [1.6869432E12, 4542.0], [1.68693978E12, 848.0], [1.6869426E12, 3925.500000000001], [1.68694422E12, 1191.0], [1.68694362E12, 4431.8], [1.68694038E12, 3512.0], [1.686942E12, 3497.2], [1.6869414E12, 3617.4], [1.68694302E12, 4045.0000000000005], [1.68694272E12, 4126.8], [1.68694434E12, 2771.4000000000005], [1.68694374E12, 4124.0], [1.68694212E12, 4354.9], [1.68694152E12, 3522.4], [1.68694314E12, 4150.6], [1.6869399E12, 1728.4000000000005], [1.68694092E12, 3484.5000000000005], [1.6869405E12, 4011.7999999999997], [1.68694254E12, 4198.0], [1.68694014E12, 2133.6000000000004], [1.68694194E12, 3979.3], [1.68694416E12, 2857.600000000001], [1.68694134E12, 3895.2000000000003], [1.68694356E12, 4405.000000000001], [1.68694074E12, 3261.6000000000004], [1.68694296E12, 4025.4000000000005], [1.68693972E12, 763.0999999999998], [1.68694236E12, 4216.1], [1.68694398E12, 1575.5], [1.68694032E12, 3265.2000000000003], [1.68694146E12, 3849.8], [1.68694368E12, 4095.2], [1.68694026E12, 2406.0], [1.68694086E12, 3712.7], [1.68694308E12, 3684.0], [1.68694248E12, 4136.8], [1.6869441E12, 4336.8], [1.6869435E12, 4081.4], [1.68694188E12, 3562.8000000000006], [1.68693984E12, 805.0], [1.68694128E12, 3624.8999999999996], [1.6869429E12, 4173.0], [1.68694008E12, 2514.2000000000003], [1.6869423E12, 4689.5], [1.6869417E12, 4204.400000000001], [1.68694068E12, 3296.0], [1.68694392E12, 3988.0], [1.6869411E12, 3391.0], [1.68694332E12, 4110.0], [1.6869408E12, 3481.0], [1.68694062E12, 3522.0], [1.68694242E12, 3932.6000000000004], [1.68694182E12, 4003.6000000000004], [1.68694404E12, 2329.5], [1.68694122E12, 3490.8], [1.68694344E12, 4010.8], [1.6869402E12, 892.5], [1.68694284E12, 4259.1], [1.68694224E12, 3756.0], [1.68694386E12, 4133.0], [1.68694044E12, 3390.7999999999997], [1.68694164E12, 3968.0], [1.68694326E12, 3987.3], [1.68694104E12, 3506.0], [1.68694266E12, 3897.4], [1.68694002E12, 1537.4000000000005], [1.68694206E12, 3750.2000000000003], [1.68694428E12, 2396.8]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.68694338E12, 6979.48], [1.68694176E12, 7590.5], [1.68693996E12, 2111.79999999999], [1.68694116E12, 5990.800000000015], [1.68694278E12, 5485.180000000002], [1.68694056E12, 5433.9199999999955], [1.68694218E12, 6295.409999999992], [1.6869444E12, 1910.0], [1.68694158E12, 6108.4], [1.6869438E12, 7168.750000000002], [1.68694098E12, 5910.2800000000025], [1.6869432E12, 6001.679999999993], [1.68693978E12, 1619.4200000000037], [1.6869426E12, 5972.250000000002], [1.68694422E12, 1952.659999999997], [1.68694362E12, 7147.000000000013], [1.68694038E12, 5889.000000000024], [1.686942E12, 6683.720000000019], [1.6869414E12, 5887.479999999967], [1.68694302E12, 5863.299999999998], [1.68694272E12, 6906.889999999999], [1.68694434E12, 5114.180000000001], [1.68694374E12, 6843.399999999996], [1.68694212E12, 8152.08999999999], [1.68694152E12, 5622.920000000002], [1.68694314E12, 5982.379999999999], [1.6869399E12, 4248.16], [1.68694092E12, 6074.339999999999], [1.6869405E12, 6235.599999999995], [1.68694254E12, 5805.700000000001], [1.68694014E12, 4473.450000000001], [1.68694194E12, 7288.71], [1.68694416E12, 4817.36], [1.68694134E12, 5957.01], [1.68694356E12, 7428.38], [1.68694074E12, 6617.610000000017], [1.68694296E12, 5651.239999999997], [1.68693972E12, 1168.749999999999], [1.68694236E12, 7753.010000000003], [1.68694398E12, 3973.5], [1.68694032E12, 5873.5599999999995], [1.68694146E12, 6465.879999999996], [1.68694368E12, 5682.600000000002], [1.68694026E12, 4366.4], [1.68694086E12, 6723.339999999996], [1.68694308E12, 5507.880000000005], [1.68694248E12, 5999.61000000001], [1.6869441E12, 6401.079999999999], [1.6869435E12, 6242.0199999999995], [1.68694188E12, 6201.199999999997], [1.68693984E12, 1476.3599999999974], [1.68694128E12, 5400.310000000025], [1.6869429E12, 6278.959999999998], [1.68694008E12, 5548.880000000001], [1.6869423E12, 7620.300000000003], [1.6869417E12, 7934.570000000004], [1.68694068E12, 5148.899999999996], [1.68694392E12, 5680.120000000004], [1.6869411E12, 6140.60000000002], [1.68694332E12, 5185.92], [1.6869408E12, 6585.300000000004], [1.68694062E12, 6044.940000000001], [1.68694242E12, 6555.519999999999], [1.68694182E12, 6350.9], [1.68694404E12, 3489.76], [1.68694122E12, 5878.239999999998], [1.68694344E12, 6381.13], [1.6869402E12, 1539.5000000000027], [1.68694284E12, 6330.079999999999], [1.68694224E12, 6056.180000000001], [1.68694386E12, 6444.799999999994], [1.68694044E12, 7522.319999999989], [1.68694164E12, 5687.799999999999], [1.68694326E12, 6079.909999999996], [1.68694104E12, 5479.400000000009], [1.68694266E12, 6475.259999999999], [1.68694002E12, 2783.3600000000006], [1.68694206E12, 6630.2800000000025], [1.68694428E12, 4236.339999999997]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.68694338E12, 4507.4], [1.68694176E12, 5361.0], [1.68693996E12, 1505.1999999999998], [1.68694116E12, 3938.9999999999973], [1.68694278E12, 4365.799999999999], [1.68694056E12, 3914.199999999999], [1.68694218E12, 4275.25], [1.6869444E12, 1384.0], [1.68694158E12, 4792.0], [1.6869438E12, 5031.75], [1.68694098E12, 3531.999999999999], [1.6869432E12, 5041.4], [1.68693978E12, 992.9499999999996], [1.6869426E12, 4377.4], [1.68694422E12, 1359.0], [1.68694362E12, 5132.0], [1.68694038E12, 4099.0], [1.686942E12, 4136.499999999998], [1.6869414E12, 4225.299999999998], [1.68694302E12, 4536.099999999999], [1.68694272E12, 4838.0], [1.68694434E12, 3575.5], [1.68694374E12, 4660.0], [1.68694212E12, 5618.149999999997], [1.68694152E12, 3938.199999999999], [1.68694314E12, 4695.299999999999], [1.6869399E12, 2356.400000000001], [1.68694092E12, 4311.399999999998], [1.6869405E12, 4630.599999999999], [1.68694254E12, 4720.0], [1.68694014E12, 2484.249999999999], [1.68694194E12, 4726.849999999996], [1.68694416E12, 3586.0999999999995], [1.68694134E12, 4506.199999999999], [1.68694356E12, 4906.4], [1.68694074E12, 4217.000000000004], [1.68694296E12, 4573.6], [1.68693972E12, 865.7999999999997], [1.68694236E12, 5048.15], [1.68694398E12, 2389.75], [1.68694032E12, 3760.2999999999997], [1.68694146E12, 4375.6], [1.68694368E12, 4491.0], [1.68694026E12, 2833.0], [1.68694086E12, 4397.299999999998], [1.68694308E12, 4142.799999999999], [1.68694248E12, 4509.9], [1.6869441E12, 4987.0], [1.6869435E12, 4632.799999999999], [1.68694188E12, 4141.199999999999], [1.68693984E12, 944.0], [1.68694128E12, 4036.2999999999997], [1.6869429E12, 4948.0], [1.68694008E12, 3005.899999999999], [1.6869423E12, 5474.5], [1.6869417E12, 4927.899999999996], [1.68694068E12, 3751.0], [1.68694392E12, 4415.399999999998], [1.6869411E12, 3805.0], [1.68694332E12, 4442.599999999999], [1.6869408E12, 4268.25], [1.68694062E12, 4108.999999999997], [1.68694242E12, 4538.199999999999], [1.68694182E12, 4577.799999999999], [1.68694404E12, 2724.5999999999985], [1.68694122E12, 3936.3999999999996], [1.68694344E12, 4599.0], [1.6869402E12, 1056.5], [1.68694284E12, 4827.0], [1.68694224E12, 4211.199999999999], [1.68694386E12, 4608.5999999999985], [1.68694044E12, 4398.200000000002], [1.68694164E12, 4473.0], [1.68694326E12, 4530.649999999994], [1.68694104E12, 3954.9000000000005], [1.68694266E12, 4475.799999999999], [1.68694002E12, 2061.85], [1.68694206E12, 4278.2], [1.68694428E12, 2724.7999999999975]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.68694338E12, 409.0], [1.68694176E12, 347.0], [1.68693996E12, 246.0], [1.68694116E12, 309.0], [1.68694278E12, 332.0], [1.68694056E12, 292.0], [1.68694218E12, 334.0], [1.6869444E12, 330.0], [1.68694158E12, 273.0], [1.6869438E12, 401.0], [1.68694098E12, 297.0], [1.6869432E12, 391.0], [1.68693978E12, 228.0], [1.6869426E12, 287.0], [1.68694422E12, 322.0], [1.68694362E12, 392.0], [1.68694038E12, 326.0], [1.686942E12, 334.0], [1.6869414E12, 277.0], [1.68694302E12, 332.0], [1.68694272E12, 352.0], [1.68694434E12, 330.0], [1.68694374E12, 405.0], [1.68694212E12, 399.0], [1.68694152E12, 323.0], [1.68694314E12, 407.0], [1.6869399E12, 225.0], [1.68694092E12, 292.0], [1.6869405E12, 300.0], [1.68694254E12, 337.0], [1.68694014E12, 235.0], [1.68694194E12, 364.0], [1.68694416E12, 299.0], [1.68694134E12, 347.0], [1.68694356E12, 384.0], [1.68694074E12, 315.0], [1.68694296E12, 353.0], [1.68693972E12, 244.0], [1.68694236E12, 333.0], [1.68694398E12, 344.0], [1.68694032E12, 251.0], [1.68694146E12, 345.0], [1.68694368E12, 424.0], [1.68694026E12, 260.0], [1.68694086E12, 302.0], [1.68694308E12, 424.0], [1.68694248E12, 355.0], [1.6869441E12, 374.0], [1.6869435E12, 394.0], [1.68694188E12, 345.0], [1.68693984E12, 224.0], [1.68694128E12, 306.0], [1.6869429E12, 427.0], [1.68694008E12, 231.0], [1.6869423E12, 388.0], [1.6869417E12, 318.0], [1.68694068E12, 267.0], [1.68694392E12, 429.0], [1.6869411E12, 340.0], [1.68694332E12, 404.0], [1.6869408E12, 262.0], [1.68694062E12, 293.0], [1.68694242E12, 337.0], [1.68694182E12, 320.0], [1.68694404E12, 345.0], [1.68694122E12, 273.0], [1.68694344E12, 338.0], [1.6869402E12, 240.0], [1.68694284E12, 410.0], [1.68694224E12, 317.0], [1.68694386E12, 432.0], [1.68694044E12, 241.0], [1.68694164E12, 327.0], [1.68694326E12, 399.0], [1.68694104E12, 256.0], [1.68694266E12, 349.0], [1.68694002E12, 227.0], [1.68694206E12, 366.0], [1.68694428E12, 376.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.68694338E12, 2385.5], [1.68694176E12, 2153.0], [1.68693996E12, 658.0], [1.68694116E12, 2136.0], [1.68694278E12, 2356.0], [1.68694056E12, 1867.0], [1.68694218E12, 2216.0], [1.6869444E12, 738.0], [1.68694158E12, 2338.0], [1.6869438E12, 2614.0], [1.68694098E12, 1963.0], [1.6869432E12, 2525.0], [1.68693978E12, 558.0], [1.6869426E12, 2471.5], [1.68694422E12, 680.0], [1.68694362E12, 2758.0], [1.68694038E12, 1972.0], [1.686942E12, 2163.0], [1.6869414E12, 2058.0], [1.68694302E12, 2487.0], [1.68694272E12, 2233.5], [1.68694434E12, 968.0], [1.68694374E12, 2501.0], [1.68694212E12, 2134.0], [1.68694152E12, 2183.0], [1.68694314E12, 2419.0], [1.6869399E12, 760.0], [1.68694092E12, 2015.5], [1.6869405E12, 1987.0], [1.68694254E12, 2417.0], [1.68694014E12, 1034.0], [1.68694194E12, 2105.5], [1.68694416E12, 1150.0], [1.68694134E12, 2247.0], [1.68694356E12, 2441.0], [1.68694074E12, 1877.0], [1.68694296E12, 2279.0], [1.68693972E12, 480.5], [1.68694236E12, 2383.0], [1.68694398E12, 707.0], [1.68694032E12, 1915.0], [1.68694146E12, 2188.0], [1.68694368E12, 2532.0], [1.68694026E12, 993.0], [1.68694086E12, 2080.0], [1.68694308E12, 2406.0], [1.68694248E12, 2317.5], [1.6869441E12, 1878.0], [1.6869435E12, 2457.0], [1.68694188E12, 2093.0], [1.68693984E12, 504.0], [1.68694128E12, 2091.0], [1.6869429E12, 2230.0], [1.68694008E12, 1226.0], [1.6869423E12, 2392.5], [1.6869417E12, 2086.5], [1.68694068E12, 2076.0], [1.68694392E12, 1741.0], [1.6869411E12, 2085.0], [1.68694332E12, 2594.0], [1.6869408E12, 2006.5], [1.68694062E12, 1813.0], [1.68694242E12, 2427.0], [1.68694182E12, 2243.0], [1.68694404E12, 1044.0], [1.68694122E12, 1949.0], [1.68694344E12, 2488.5], [1.6869402E12, 540.0], [1.68694284E12, 2417.0], [1.68694224E12, 2328.0], [1.68694386E12, 2496.0], [1.68694044E12, 1965.0], [1.68694164E12, 2201.0], [1.68694326E12, 2432.5], [1.68694104E12, 2150.0], [1.68694266E12, 2322.0], [1.68694002E12, 650.5], [1.68694206E12, 2310.0], [1.68694428E12, 1193.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6869444E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 192.0, "minX": 1.0, "maxY": 2256.0, "series": [{"data": [[2.0, 445.5], [3.0, 478.0], [4.0, 491.0], [5.0, 549.0], [6.0, 488.0], [7.0, 500.0], [8.0, 576.5], [9.0, 673.0], [10.0, 547.0], [11.0, 531.0], [12.0, 541.0], [13.0, 605.0], [14.0, 632.0], [15.0, 552.0], [16.0, 605.0], [17.0, 648.0], [18.0, 638.5], [19.0, 534.0], [20.0, 497.0], [21.0, 546.5], [22.0, 506.0], [23.0, 550.5], [24.0, 649.0], [25.0, 716.0], [26.0, 1002.5], [27.0, 758.5], [28.0, 823.5], [29.0, 666.0], [30.0, 975.5], [31.0, 1192.0], [33.0, 1030.0], [32.0, 1371.5], [34.0, 1367.5], [35.0, 1719.0], [37.0, 1783.0], [36.0, 1687.5], [38.0, 1484.5], [39.0, 1853.0], [41.0, 1899.0], [40.0, 1748.5], [43.0, 2019.0], [42.0, 1847.0], [45.0, 2018.0], [44.0, 2073.0], [46.0, 2008.0], [47.0, 1998.0], [48.0, 2123.0], [49.0, 2080.5], [50.0, 2088.0], [51.0, 2042.0], [52.0, 2058.5], [53.0, 2083.0], [54.0, 2093.0], [55.0, 2028.0], [56.0, 2065.0], [57.0, 2078.0], [59.0, 2028.0], [58.0, 2004.0], [61.0, 2022.0], [60.0, 1930.0], [62.0, 1881.5], [63.0, 1912.0], [65.0, 1973.0], [67.0, 1941.5], [64.0, 1995.5], [66.0, 2012.0], [71.0, 1772.0], [68.0, 1958.0], [69.0, 1881.0], [70.0, 1905.5], [74.0, 1784.0], [73.0, 1844.0], [72.0, 2003.0], [75.0, 2167.5], [78.0, 1677.5], [76.0, 1889.0], [77.0, 1131.5], [79.0, 1808.0], [81.0, 1916.0], [80.0, 1857.0], [82.0, 2028.5], [83.0, 1817.5], [84.0, 1998.0], [86.0, 1979.0], [87.0, 1877.0], [85.0, 1931.5], [88.0, 1799.0], [90.0, 2256.0], [89.0, 1949.0], [94.0, 2041.0], [102.0, 2034.0], [1.0, 556.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[6.0, 192.0], [7.0, 294.0], [9.0, 430.5], [10.0, 320.0], [11.0, 247.0], [12.0, 460.5], [13.0, 328.0], [14.0, 329.0], [15.0, 234.0], [16.0, 618.5], [17.0, 401.0], [18.0, 308.5], [19.0, 218.5], [20.0, 293.0], [21.0, 258.0], [22.0, 301.0], [23.0, 217.0], [24.0, 333.5], [25.0, 877.0], [26.0, 620.0], [27.0, 336.0], [28.0, 539.5], [29.0, 422.5], [30.0, 698.0], [31.0, 739.5], [33.0, 680.0], [32.0, 831.5], [34.0, 876.0], [35.0, 952.0], [37.0, 934.0], [36.0, 975.5], [38.0, 843.5], [39.0, 1016.0], [41.0, 938.0], [40.0, 957.0], [43.0, 998.0], [42.0, 987.0], [45.0, 1003.5], [44.0, 997.5], [46.0, 954.5], [47.0, 915.5], [48.0, 940.0], [49.0, 921.0], [50.0, 977.0], [51.0, 879.5], [52.0, 921.0], [53.0, 851.0], [54.0, 810.0], [55.0, 819.0], [56.0, 832.0], [57.0, 799.0], [59.0, 740.0], [58.0, 776.0], [61.0, 731.5], [60.0, 754.0], [62.0, 707.0], [63.0, 680.0], [65.0, 694.0], [67.0, 688.5], [64.0, 773.0], [66.0, 724.0], [71.0, 611.0], [68.0, 710.5], [69.0, 594.0], [70.0, 581.5], [74.0, 607.0], [73.0, 601.0], [72.0, 616.0], [75.0, 634.0], [78.0, 527.0], [76.0, 569.0], [77.0, 559.0], [79.0, 599.0], [81.0, 524.0], [80.0, 623.0], [82.0, 666.5], [83.0, 587.0], [84.0, 578.0], [86.0, 517.5], [87.0, 441.5], [85.0, 497.0], [88.0, 543.5], [90.0, 417.0], [89.0, 345.0], [94.0, 732.0], [102.0, 311.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 102.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 192.0, "minX": 1.0, "maxY": 2256.0, "series": [{"data": [[2.0, 445.5], [3.0, 478.0], [4.0, 491.0], [5.0, 549.0], [6.0, 488.0], [7.0, 500.0], [8.0, 576.5], [9.0, 673.0], [10.0, 547.0], [11.0, 531.0], [12.0, 541.0], [13.0, 605.0], [14.0, 632.0], [15.0, 552.0], [16.0, 605.0], [17.0, 648.0], [18.0, 638.5], [19.0, 534.0], [20.0, 497.0], [21.0, 546.5], [22.0, 506.0], [23.0, 550.5], [24.0, 649.0], [25.0, 716.0], [26.0, 1002.5], [27.0, 758.5], [28.0, 823.5], [29.0, 666.0], [30.0, 975.5], [31.0, 1192.0], [33.0, 1030.0], [32.0, 1371.5], [34.0, 1367.5], [35.0, 1719.0], [37.0, 1783.0], [36.0, 1687.5], [38.0, 1484.5], [39.0, 1853.0], [41.0, 1899.0], [40.0, 1748.5], [43.0, 2019.0], [42.0, 1847.0], [45.0, 2018.0], [44.0, 2073.0], [46.0, 2008.0], [47.0, 1998.0], [48.0, 2123.0], [49.0, 2080.5], [50.0, 2088.0], [51.0, 2042.0], [52.0, 2058.5], [53.0, 2083.0], [54.0, 2093.0], [55.0, 2028.0], [56.0, 2065.0], [57.0, 2078.0], [59.0, 2028.0], [58.0, 2004.0], [61.0, 2022.0], [60.0, 1930.0], [62.0, 1881.5], [63.0, 1912.0], [65.0, 1973.0], [67.0, 1941.5], [64.0, 1995.5], [66.0, 2012.0], [71.0, 1772.0], [68.0, 1958.0], [69.0, 1881.0], [70.0, 1905.5], [74.0, 1784.0], [73.0, 1844.0], [72.0, 2003.0], [75.0, 2167.5], [78.0, 1677.5], [76.0, 1889.0], [77.0, 1131.5], [79.0, 1808.0], [81.0, 1916.0], [80.0, 1857.0], [82.0, 2028.5], [83.0, 1817.5], [84.0, 1998.0], [86.0, 1979.0], [87.0, 1877.0], [85.0, 1931.5], [88.0, 1799.0], [90.0, 2256.0], [89.0, 1949.0], [94.0, 2041.0], [102.0, 2034.0], [1.0, 556.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[6.0, 192.0], [7.0, 294.0], [9.0, 430.5], [10.0, 320.0], [11.0, 247.0], [12.0, 460.5], [13.0, 328.0], [14.0, 329.0], [15.0, 234.0], [16.0, 618.5], [17.0, 401.0], [18.0, 308.5], [19.0, 218.5], [20.0, 293.0], [21.0, 258.0], [22.0, 301.0], [23.0, 217.0], [24.0, 333.5], [25.0, 877.0], [26.0, 620.0], [27.0, 336.0], [28.0, 539.5], [29.0, 422.5], [30.0, 698.0], [31.0, 739.5], [33.0, 680.0], [32.0, 831.5], [34.0, 876.0], [35.0, 952.0], [37.0, 934.0], [36.0, 975.5], [38.0, 843.5], [39.0, 1016.0], [41.0, 938.0], [40.0, 957.0], [43.0, 998.0], [42.0, 987.0], [45.0, 1003.5], [44.0, 997.5], [46.0, 954.5], [47.0, 915.5], [48.0, 940.0], [49.0, 921.0], [50.0, 977.0], [51.0, 879.5], [52.0, 921.0], [53.0, 851.0], [54.0, 810.0], [55.0, 819.0], [56.0, 832.0], [57.0, 799.0], [59.0, 740.0], [58.0, 776.0], [61.0, 731.5], [60.0, 754.0], [62.0, 707.0], [63.0, 680.0], [65.0, 694.0], [67.0, 688.5], [64.0, 773.0], [66.0, 724.0], [71.0, 611.0], [68.0, 710.5], [69.0, 594.0], [70.0, 581.5], [74.0, 607.0], [73.0, 601.0], [72.0, 616.0], [75.0, 634.0], [78.0, 527.0], [76.0, 569.0], [77.0, 559.0], [79.0, 599.0], [81.0, 524.0], [80.0, 623.0], [82.0, 666.5], [83.0, 587.0], [84.0, 578.0], [86.0, 517.5], [87.0, 441.5], [85.0, 497.0], [88.0, 543.5], [90.0, 417.0], [89.0, 345.0], [94.0, 732.0], [102.0, 311.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 102.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 15.8, "minX": 1.68693972E12, "maxY": 61.31666666666667, "series": [{"data": [[1.68694338E12, 49.0], [1.68694176E12, 46.95], [1.68693996E12, 43.88333333333333], [1.68694116E12, 55.93333333333333], [1.68694278E12, 51.85], [1.68694056E12, 60.95], [1.68694218E12, 52.55], [1.6869444E12, 28.0], [1.68694158E12, 49.96666666666667], [1.6869438E12, 46.766666666666666], [1.68694098E12, 61.016666666666666], [1.6869432E12, 46.9], [1.68693978E12, 46.4], [1.6869426E12, 50.733333333333334], [1.68694422E12, 24.85], [1.68694362E12, 43.93333333333333], [1.68694038E12, 57.1], [1.686942E12, 54.416666666666664], [1.6869414E12, 56.06666666666667], [1.68694302E12, 49.983333333333334], [1.68694272E12, 49.31666666666667], [1.68694434E12, 38.31666666666667], [1.68694374E12, 45.35], [1.68694212E12, 48.43333333333333], [1.68694152E12, 54.4], [1.68694314E12, 47.516666666666666], [1.6869399E12, 56.0], [1.68694092E12, 58.18333333333333], [1.6869405E12, 55.666666666666664], [1.68694254E12, 49.75], [1.68694014E12, 54.03333333333333], [1.68694194E12, 50.416666666666664], [1.68694416E12, 40.75], [1.68694134E12, 51.1], [1.68694356E12, 47.38333333333333], [1.68694074E12, 61.31666666666667], [1.68694296E12, 51.016666666666666], [1.68693972E12, 15.8], [1.68694236E12, 45.266666666666666], [1.68694398E12, 27.166666666666668], [1.68694032E12, 60.68333333333333], [1.68694146E12, 53.483333333333334], [1.68694368E12, 47.5], [1.68694026E12, 58.266666666666666], [1.68694086E12, 53.78333333333333], [1.68694308E12, 51.8], [1.68694248E12, 50.55], [1.6869441E12, 37.483333333333334], [1.6869435E12, 48.71666666666667], [1.68694188E12, 57.416666666666664], [1.68693984E12, 34.45], [1.68694128E12, 56.06666666666667], [1.6869429E12, 48.65], [1.68694008E12, 59.733333333333334], [1.6869423E12, 45.53333333333333], [1.6869417E12, 50.483333333333334], [1.68694068E12, 58.583333333333336], [1.68694392E12, 44.916666666666664], [1.6869411E12, 56.43333333333333], [1.68694332E12, 47.06666666666667], [1.6869408E12, 57.11666666666667], [1.68694062E12, 59.71666666666667], [1.68694242E12, 48.8], [1.68694182E12, 50.666666666666664], [1.68694404E12, 37.45], [1.68694122E12, 58.166666666666664], [1.68694344E12, 47.63333333333333], [1.6869402E12, 28.35], [1.68694284E12, 47.35], [1.68694224E12, 53.35], [1.68694386E12, 48.5], [1.68694044E12, 58.13333333333333], [1.68694164E12, 51.53333333333333], [1.68694326E12, 47.733333333333334], [1.68694104E12, 54.2], [1.68694266E12, 49.06666666666667], [1.68694002E12, 42.916666666666664], [1.68694206E12, 49.733333333333334], [1.68694428E12, 43.4]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6869444E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68693972E12, "maxY": 39.28333333333333, "series": [{"data": [[1.68694338E12, 31.2], [1.68694176E12, 32.483333333333334], [1.68693996E12, 32.28333333333333], [1.68694116E12, 35.18333333333333], [1.68694278E12, 31.683333333333334], [1.68694056E12, 38.21666666666667], [1.68694218E12, 33.96666666666667], [1.6869444E12, 21.233333333333334], [1.68694158E12, 31.983333333333334], [1.6869438E12, 29.733333333333334], [1.68694098E12, 37.583333333333336], [1.6869432E12, 30.2], [1.68693978E12, 34.766666666666666], [1.6869426E12, 32.63333333333333], [1.68694422E12, 18.55], [1.68694362E12, 28.883333333333333], [1.68694038E12, 37.81666666666667], [1.686942E12, 34.28333333333333], [1.6869414E12, 35.416666666666664], [1.68694302E12, 30.75], [1.68694272E12, 31.833333333333332], [1.68694434E12, 27.55], [1.68694374E12, 28.983333333333334], [1.68694212E12, 32.0], [1.68694152E12, 35.25], [1.68694314E12, 31.616666666666667], [1.6869399E12, 38.18333333333333], [1.68694092E12, 36.0], [1.6869405E12, 35.68333333333333], [1.68694254E12, 30.866666666666667], [1.68694014E12, 37.166666666666664], [1.68694194E12, 32.43333333333333], [1.68694416E12, 28.216666666666665], [1.68694134E12, 33.7], [1.68694356E12, 30.416666666666668], [1.68694074E12, 38.266666666666666], [1.68694296E12, 31.45], [1.68693972E12, 12.0], [1.68694236E12, 31.3], [1.68694398E12, 20.4], [1.68694032E12, 38.28333333333333], [1.68694146E12, 34.05], [1.68694368E12, 30.45], [1.68694026E12, 35.983333333333334], [1.68694086E12, 35.03333333333333], [1.68694308E12, 31.783333333333335], [1.68694248E12, 32.166666666666664], [1.6869441E12, 26.55], [1.6869435E12, 31.083333333333332], [1.68694188E12, 34.416666666666664], [1.68693984E12, 25.216666666666665], [1.68694128E12, 35.766666666666666], [1.6869429E12, 31.416666666666668], [1.68694008E12, 39.28333333333333], [1.6869423E12, 29.233333333333334], [1.6869417E12, 33.333333333333336], [1.68694068E12, 36.733333333333334], [1.68694392E12, 30.45], [1.6869411E12, 36.15], [1.68694332E12, 30.383333333333333], [1.6869408E12, 35.56666666666667], [1.68694062E12, 37.55], [1.68694242E12, 31.616666666666667], [1.68694182E12, 33.166666666666664], [1.68694404E12, 25.866666666666667], [1.68694122E12, 35.71666666666667], [1.68694344E12, 30.833333333333332], [1.6869402E12, 22.233333333333334], [1.68694284E12, 30.666666666666668], [1.68694224E12, 34.21666666666667], [1.68694386E12, 30.283333333333335], [1.68694044E12, 36.516666666666666], [1.68694164E12, 33.15], [1.68694326E12, 30.766666666666666], [1.68694104E12, 36.43333333333333], [1.68694266E12, 32.416666666666664], [1.68694002E12, 29.7], [1.68694206E12, 32.61666666666667], [1.68694428E12, 26.95]], "isOverall": false, "label": "201", "isController": false}, {"data": [[1.68694338E12, 17.8], [1.68694176E12, 14.466666666666667], [1.68693996E12, 12.433333333333334], [1.68694116E12, 20.75], [1.68694278E12, 20.15], [1.68694056E12, 22.733333333333334], [1.68694218E12, 18.583333333333332], [1.6869444E12, 7.183333333333334], [1.68694158E12, 17.983333333333334], [1.6869438E12, 17.033333333333335], [1.68694098E12, 23.433333333333334], [1.6869432E12, 16.7], [1.68693978E12, 11.716666666666667], [1.6869426E12, 18.083333333333332], [1.68694422E12, 5.966666666666667], [1.68694362E12, 15.05], [1.68694038E12, 19.283333333333335], [1.686942E12, 20.133333333333333], [1.6869414E12, 20.65], [1.68694302E12, 19.233333333333334], [1.68694272E12, 17.483333333333334], [1.68694434E12, 11.166666666666666], [1.68694374E12, 16.366666666666667], [1.68694212E12, 16.416666666666668], [1.68694152E12, 19.133333333333333], [1.68694314E12, 15.9], [1.6869399E12, 17.65], [1.68694092E12, 22.183333333333334], [1.6869405E12, 19.983333333333334], [1.68694254E12, 18.883333333333333], [1.68694014E12, 17.616666666666667], [1.68694194E12, 17.983333333333334], [1.68694416E12, 13.433333333333334], [1.68694134E12, 17.4], [1.68694356E12, 16.966666666666665], [1.68694074E12, 23.05], [1.68694296E12, 19.583333333333332], [1.68693972E12, 3.3833333333333333], [1.68694236E12, 13.966666666666667], [1.68694398E12, 7.483333333333333], [1.68694032E12, 22.216666666666665], [1.68694146E12, 19.433333333333334], [1.68694368E12, 17.05], [1.68694026E12, 21.283333333333335], [1.68694086E12, 18.75], [1.68694308E12, 20.0], [1.68694248E12, 18.366666666666667], [1.6869441E12, 10.85], [1.6869435E12, 17.633333333333333], [1.68694188E12, 23.0], [1.68693984E12, 8.883333333333333], [1.68694128E12, 20.3], [1.6869429E12, 17.216666666666665], [1.68694008E12, 20.2], [1.6869423E12, 16.316666666666666], [1.6869417E12, 17.15], [1.68694068E12, 21.85], [1.68694392E12, 15.25], [1.6869411E12, 20.266666666666666], [1.68694332E12, 16.683333333333334], [1.6869408E12, 21.55], [1.68694062E12, 22.166666666666668], [1.68694242E12, 17.183333333333334], [1.68694182E12, 17.483333333333334], [1.68694404E12, 10.566666666666666], [1.68694122E12, 22.45], [1.68694344E12, 16.783333333333335], [1.6869402E12, 6.116666666666666], [1.68694284E12, 16.683333333333334], [1.68694224E12, 19.1], [1.68694386E12, 18.216666666666665], [1.68694044E12, 21.616666666666667], [1.68694164E12, 18.366666666666667], [1.68694326E12, 16.95], [1.68694104E12, 17.75], [1.68694266E12, 16.65], [1.68694002E12, 12.2], [1.68694206E12, 17.116666666666667], [1.68694428E12, 16.266666666666666]], "isOverall": false, "label": "500", "isController": false}, {"data": [[1.68694434E12, 0.016666666666666666], [1.68694278E12, 0.016666666666666666], [1.68694212E12, 0.016666666666666666], [1.68694308E12, 0.016666666666666666], [1.68694182E12, 0.016666666666666666], [1.68694404E12, 0.016666666666666666], [1.68694152E12, 0.016666666666666666], [1.68694248E12, 0.016666666666666666], [1.68694344E12, 0.016666666666666666], [1.68693984E12, 0.016666666666666666], [1.68694224E12, 0.016666666666666666], [1.68694416E12, 0.016666666666666666], [1.68694164E12, 0.016666666666666666], [1.68694326E12, 0.016666666666666666], [1.6869426E12, 0.016666666666666666], [1.68694104E12, 0.016666666666666666], [1.68694002E12, 0.016666666666666666], [1.6869411E12, 0.016666666666666666], [1.68694032E12, 0.016666666666666666], [1.68694428E12, 0.016666666666666666]], "isOverall": false, "label": "409", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6869444E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 3.3833333333333333, "minX": 1.68693972E12, "maxY": 39.28333333333333, "series": [{"data": [[1.68694338E12, 31.2], [1.68694176E12, 32.483333333333334], [1.68693996E12, 32.28333333333333], [1.68694116E12, 35.18333333333333], [1.68694278E12, 31.683333333333334], [1.68694056E12, 38.21666666666667], [1.68694218E12, 33.96666666666667], [1.6869444E12, 21.233333333333334], [1.68694158E12, 31.983333333333334], [1.6869438E12, 29.733333333333334], [1.68694098E12, 37.583333333333336], [1.6869432E12, 30.2], [1.68693978E12, 34.766666666666666], [1.6869426E12, 32.63333333333333], [1.68694422E12, 18.55], [1.68694362E12, 28.883333333333333], [1.68694038E12, 37.81666666666667], [1.686942E12, 34.28333333333333], [1.6869414E12, 35.416666666666664], [1.68694302E12, 30.75], [1.68694272E12, 31.833333333333332], [1.68694434E12, 27.55], [1.68694374E12, 28.983333333333334], [1.68694212E12, 32.0], [1.68694152E12, 35.25], [1.68694314E12, 31.616666666666667], [1.6869399E12, 38.18333333333333], [1.68694092E12, 36.0], [1.6869405E12, 35.68333333333333], [1.68694254E12, 30.866666666666667], [1.68694014E12, 37.166666666666664], [1.68694194E12, 32.43333333333333], [1.68694416E12, 28.216666666666665], [1.68694134E12, 33.7], [1.68694356E12, 30.416666666666668], [1.68694074E12, 38.266666666666666], [1.68694296E12, 31.45], [1.68693972E12, 12.0], [1.68694236E12, 31.3], [1.68694398E12, 20.4], [1.68694032E12, 38.28333333333333], [1.68694146E12, 34.05], [1.68694368E12, 30.45], [1.68694026E12, 35.983333333333334], [1.68694086E12, 35.03333333333333], [1.68694308E12, 31.783333333333335], [1.68694248E12, 32.166666666666664], [1.6869441E12, 26.55], [1.6869435E12, 31.083333333333332], [1.68694188E12, 34.416666666666664], [1.68693984E12, 25.216666666666665], [1.68694128E12, 35.766666666666666], [1.6869429E12, 31.416666666666668], [1.68694008E12, 39.28333333333333], [1.6869423E12, 29.233333333333334], [1.6869417E12, 33.333333333333336], [1.68694068E12, 36.733333333333334], [1.68694392E12, 30.45], [1.6869411E12, 36.15], [1.68694332E12, 30.383333333333333], [1.6869408E12, 35.56666666666667], [1.68694062E12, 37.55], [1.68694242E12, 31.616666666666667], [1.68694182E12, 33.166666666666664], [1.68694404E12, 25.866666666666667], [1.68694122E12, 35.71666666666667], [1.68694344E12, 30.833333333333332], [1.6869402E12, 22.233333333333334], [1.68694284E12, 30.666666666666668], [1.68694224E12, 34.21666666666667], [1.68694386E12, 30.283333333333335], [1.68694044E12, 36.516666666666666], [1.68694164E12, 33.15], [1.68694326E12, 30.766666666666666], [1.68694104E12, 36.43333333333333], [1.68694266E12, 32.416666666666664], [1.68694002E12, 29.7], [1.68694206E12, 32.61666666666667], [1.68694428E12, 26.95]], "isOverall": false, "label": "create cin-success", "isController": false}, {"data": [[1.68694338E12, 17.8], [1.68694176E12, 14.466666666666667], [1.68693996E12, 12.433333333333334], [1.68694116E12, 20.75], [1.68694278E12, 20.166666666666668], [1.68694056E12, 22.733333333333334], [1.68694218E12, 18.583333333333332], [1.6869444E12, 7.183333333333334], [1.68694158E12, 17.983333333333334], [1.6869438E12, 17.033333333333335], [1.68694098E12, 23.433333333333334], [1.6869432E12, 16.7], [1.68693978E12, 11.716666666666667], [1.6869426E12, 18.1], [1.68694422E12, 5.966666666666667], [1.68694362E12, 15.05], [1.68694038E12, 19.283333333333335], [1.686942E12, 20.133333333333333], [1.6869414E12, 20.65], [1.68694302E12, 19.233333333333334], [1.68694272E12, 17.483333333333334], [1.68694434E12, 11.183333333333334], [1.68694374E12, 16.366666666666667], [1.68694212E12, 16.433333333333334], [1.68694152E12, 19.15], [1.68694314E12, 15.9], [1.6869399E12, 17.65], [1.68694092E12, 22.183333333333334], [1.6869405E12, 19.983333333333334], [1.68694254E12, 18.883333333333333], [1.68694014E12, 17.616666666666667], [1.68694194E12, 17.983333333333334], [1.68694416E12, 13.45], [1.68694134E12, 17.4], [1.68694356E12, 16.966666666666665], [1.68694074E12, 23.05], [1.68694296E12, 19.583333333333332], [1.68693972E12, 3.3833333333333333], [1.68694236E12, 13.966666666666667], [1.68694398E12, 7.483333333333333], [1.68694032E12, 22.233333333333334], [1.68694146E12, 19.433333333333334], [1.68694368E12, 17.05], [1.68694026E12, 21.283333333333335], [1.68694086E12, 18.75], [1.68694308E12, 20.016666666666666], [1.68694248E12, 18.383333333333333], [1.6869441E12, 10.85], [1.6869435E12, 17.633333333333333], [1.68694188E12, 23.0], [1.68693984E12, 8.9], [1.68694128E12, 20.3], [1.6869429E12, 17.216666666666665], [1.68694008E12, 20.2], [1.6869423E12, 16.316666666666666], [1.6869417E12, 17.15], [1.68694068E12, 21.85], [1.68694392E12, 15.25], [1.6869411E12, 20.283333333333335], [1.68694332E12, 16.683333333333334], [1.6869408E12, 21.55], [1.68694062E12, 22.166666666666668], [1.68694242E12, 17.183333333333334], [1.68694182E12, 17.5], [1.68694404E12, 10.583333333333334], [1.68694122E12, 22.45], [1.68694344E12, 16.8], [1.6869402E12, 6.116666666666666], [1.68694284E12, 16.683333333333334], [1.68694224E12, 19.116666666666667], [1.68694386E12, 18.216666666666665], [1.68694044E12, 21.616666666666667], [1.68694164E12, 18.383333333333333], [1.68694326E12, 16.966666666666665], [1.68694104E12, 17.766666666666666], [1.68694266E12, 16.65], [1.68694002E12, 12.216666666666667], [1.68694206E12, 17.116666666666667], [1.68694428E12, 16.283333333333335]], "isOverall": false, "label": "create cin-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6869444E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 3.3833333333333333, "minX": 1.68693972E12, "maxY": 39.28333333333333, "series": [{"data": [[1.68694338E12, 31.2], [1.68694176E12, 32.483333333333334], [1.68693996E12, 32.28333333333333], [1.68694116E12, 35.18333333333333], [1.68694278E12, 31.683333333333334], [1.68694056E12, 38.21666666666667], [1.68694218E12, 33.96666666666667], [1.6869444E12, 21.233333333333334], [1.68694158E12, 31.983333333333334], [1.6869438E12, 29.733333333333334], [1.68694098E12, 37.583333333333336], [1.6869432E12, 30.2], [1.68693978E12, 34.766666666666666], [1.6869426E12, 32.63333333333333], [1.68694422E12, 18.55], [1.68694362E12, 28.883333333333333], [1.68694038E12, 37.81666666666667], [1.686942E12, 34.28333333333333], [1.6869414E12, 35.416666666666664], [1.68694302E12, 30.75], [1.68694272E12, 31.833333333333332], [1.68694434E12, 27.55], [1.68694374E12, 28.983333333333334], [1.68694212E12, 32.0], [1.68694152E12, 35.25], [1.68694314E12, 31.616666666666667], [1.6869399E12, 38.18333333333333], [1.68694092E12, 36.0], [1.6869405E12, 35.68333333333333], [1.68694254E12, 30.866666666666667], [1.68694014E12, 37.166666666666664], [1.68694194E12, 32.43333333333333], [1.68694416E12, 28.216666666666665], [1.68694134E12, 33.7], [1.68694356E12, 30.416666666666668], [1.68694074E12, 38.266666666666666], [1.68694296E12, 31.45], [1.68693972E12, 12.0], [1.68694236E12, 31.3], [1.68694398E12, 20.4], [1.68694032E12, 38.28333333333333], [1.68694146E12, 34.05], [1.68694368E12, 30.45], [1.68694026E12, 35.983333333333334], [1.68694086E12, 35.03333333333333], [1.68694308E12, 31.783333333333335], [1.68694248E12, 32.166666666666664], [1.6869441E12, 26.55], [1.6869435E12, 31.083333333333332], [1.68694188E12, 34.416666666666664], [1.68693984E12, 25.216666666666665], [1.68694128E12, 35.766666666666666], [1.6869429E12, 31.416666666666668], [1.68694008E12, 39.28333333333333], [1.6869423E12, 29.233333333333334], [1.6869417E12, 33.333333333333336], [1.68694068E12, 36.733333333333334], [1.68694392E12, 30.45], [1.6869411E12, 36.15], [1.68694332E12, 30.383333333333333], [1.6869408E12, 35.56666666666667], [1.68694062E12, 37.55], [1.68694242E12, 31.616666666666667], [1.68694182E12, 33.166666666666664], [1.68694404E12, 25.866666666666667], [1.68694122E12, 35.71666666666667], [1.68694344E12, 30.833333333333332], [1.6869402E12, 22.233333333333334], [1.68694284E12, 30.666666666666668], [1.68694224E12, 34.21666666666667], [1.68694386E12, 30.283333333333335], [1.68694044E12, 36.516666666666666], [1.68694164E12, 33.15], [1.68694326E12, 30.766666666666666], [1.68694104E12, 36.43333333333333], [1.68694266E12, 32.416666666666664], [1.68694002E12, 29.7], [1.68694206E12, 32.61666666666667], [1.68694428E12, 26.95]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.68694338E12, 17.8], [1.68694176E12, 14.466666666666667], [1.68693996E12, 12.433333333333334], [1.68694116E12, 20.75], [1.68694278E12, 20.166666666666668], [1.68694056E12, 22.733333333333334], [1.68694218E12, 18.583333333333332], [1.6869444E12, 7.183333333333334], [1.68694158E12, 17.983333333333334], [1.6869438E12, 17.033333333333335], [1.68694098E12, 23.433333333333334], [1.6869432E12, 16.7], [1.68693978E12, 11.716666666666667], [1.6869426E12, 18.1], [1.68694422E12, 5.966666666666667], [1.68694362E12, 15.05], [1.68694038E12, 19.283333333333335], [1.686942E12, 20.133333333333333], [1.6869414E12, 20.65], [1.68694302E12, 19.233333333333334], [1.68694272E12, 17.483333333333334], [1.68694434E12, 11.183333333333334], [1.68694374E12, 16.366666666666667], [1.68694212E12, 16.433333333333334], [1.68694152E12, 19.15], [1.68694314E12, 15.9], [1.6869399E12, 17.65], [1.68694092E12, 22.183333333333334], [1.6869405E12, 19.983333333333334], [1.68694254E12, 18.883333333333333], [1.68694014E12, 17.616666666666667], [1.68694194E12, 17.983333333333334], [1.68694416E12, 13.45], [1.68694134E12, 17.4], [1.68694356E12, 16.966666666666665], [1.68694074E12, 23.05], [1.68694296E12, 19.583333333333332], [1.68693972E12, 3.3833333333333333], [1.68694236E12, 13.966666666666667], [1.68694398E12, 7.483333333333333], [1.68694032E12, 22.233333333333334], [1.68694146E12, 19.433333333333334], [1.68694368E12, 17.05], [1.68694026E12, 21.283333333333335], [1.68694086E12, 18.75], [1.68694308E12, 20.016666666666666], [1.68694248E12, 18.383333333333333], [1.6869441E12, 10.85], [1.6869435E12, 17.633333333333333], [1.68694188E12, 23.0], [1.68693984E12, 8.9], [1.68694128E12, 20.3], [1.6869429E12, 17.216666666666665], [1.68694008E12, 20.2], [1.6869423E12, 16.316666666666666], [1.6869417E12, 17.15], [1.68694068E12, 21.85], [1.68694392E12, 15.25], [1.6869411E12, 20.283333333333335], [1.68694332E12, 16.683333333333334], [1.6869408E12, 21.55], [1.68694062E12, 22.166666666666668], [1.68694242E12, 17.183333333333334], [1.68694182E12, 17.5], [1.68694404E12, 10.583333333333334], [1.68694122E12, 22.45], [1.68694344E12, 16.8], [1.6869402E12, 6.116666666666666], [1.68694284E12, 16.683333333333334], [1.68694224E12, 19.116666666666667], [1.68694386E12, 18.216666666666665], [1.68694044E12, 21.616666666666667], [1.68694164E12, 18.383333333333333], [1.68694326E12, 16.966666666666665], [1.68694104E12, 17.766666666666666], [1.68694266E12, 16.65], [1.68694002E12, 12.216666666666667], [1.68694206E12, 17.116666666666667], [1.68694428E12, 16.283333333333335]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6869444E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

